// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: pb/pkcs11.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MechanismType int32

const (
	MechanismType_RSA_PKCS_KEY_PAIR_GEN           MechanismType = 0
	MechanismType_RSA_PKCS                        MechanismType = 1
	MechanismType_RSA_9796                        MechanismType = 2
	MechanismType_RSA_X_509                       MechanismType = 3
	MechanismType_MD2_RSA_PKCS                    MechanismType = 4
	MechanismType_MD5_RSA_PKCS                    MechanismType = 5
	MechanismType_SHA1_RSA_PKCS                   MechanismType = 6
	MechanismType_RIPEMD128_RSA_PKCS              MechanismType = 7
	MechanismType_RIPEMD160_RSA_PKCS              MechanismType = 8
	MechanismType_RSA_PKCS_OAEP                   MechanismType = 9
	MechanismType_RSA_X9_31_KEY_PAIR_GEN          MechanismType = 10
	MechanismType_RSA_X9_31                       MechanismType = 11
	MechanismType_SHA1_RSA_X9_31                  MechanismType = 12
	MechanismType_RSA_PKCS_PSS                    MechanismType = 13
	MechanismType_SHA1_RSA_PKCS_PSS               MechanismType = 14
	MechanismType_DSA_KEY_PAIR_GEN                MechanismType = 16
	MechanismType_DSA                             MechanismType = 17
	MechanismType_DSA_SHA1                        MechanismType = 18
	MechanismType_DSA_SHA224                      MechanismType = 19
	MechanismType_DSA_SHA256                      MechanismType = 20
	MechanismType_DSA_SHA384                      MechanismType = 21
	MechanismType_DSA_SHA512                      MechanismType = 22
	MechanismType_DSA_SHA3_224                    MechanismType = 24
	MechanismType_DSA_SHA3_256                    MechanismType = 25
	MechanismType_DSA_SHA3_384                    MechanismType = 26
	MechanismType_DSA_SHA3_512                    MechanismType = 27
	MechanismType_DH_PKCS_KEY_PAIR_GEN            MechanismType = 32
	MechanismType_DH_PKCS_DERIVE                  MechanismType = 33
	MechanismType_X9_42_DH_KEY_PAIR_GEN           MechanismType = 48
	MechanismType_X9_42_DH_DERIVE                 MechanismType = 49
	MechanismType_X9_42_DH_HYBRID_DERIVE          MechanismType = 50
	MechanismType_X9_42_MQV_DERIVE                MechanismType = 51
	MechanismType_SHA256_RSA_PKCS                 MechanismType = 64
	MechanismType_SHA384_RSA_PKCS                 MechanismType = 65
	MechanismType_SHA512_RSA_PKCS                 MechanismType = 66
	MechanismType_SHA256_RSA_PKCS_PSS             MechanismType = 67
	MechanismType_SHA384_RSA_PKCS_PSS             MechanismType = 68
	MechanismType_SHA512_RSA_PKCS_PSS             MechanismType = 69
	MechanismType_SHA224_RSA_PKCS                 MechanismType = 70
	MechanismType_SHA224_RSA_PKCS_PSS             MechanismType = 71
	MechanismType_SHA512_224                      MechanismType = 72
	MechanismType_SHA512_224_HMAC                 MechanismType = 73
	MechanismType_SHA512_224_HMAC_GENERAL         MechanismType = 74
	MechanismType_SHA512_224_KEY_DERIVATION       MechanismType = 75
	MechanismType_SHA512_256                      MechanismType = 76
	MechanismType_SHA512_256_HMAC                 MechanismType = 77
	MechanismType_SHA512_256_HMAC_GENERAL         MechanismType = 78
	MechanismType_SHA512_256_KEY_DERIVATION       MechanismType = 79
	MechanismType_SHA512_T                        MechanismType = 80
	MechanismType_SHA512_T_HMAC                   MechanismType = 81
	MechanismType_SHA512_T_HMAC_GENERAL           MechanismType = 82
	MechanismType_SHA512_T_KEY_DERIVATION         MechanismType = 83
	MechanismType_SHA3_256_RSA_PKCS               MechanismType = 96
	MechanismType_SHA3_384_RSA_PKCS               MechanismType = 97
	MechanismType_SHA3_512_RSA_PKCS               MechanismType = 98
	MechanismType_SHA3_256_RSA_PKCS_PSS           MechanismType = 99
	MechanismType_SHA3_384_RSA_PKCS_PSS           MechanismType = 100
	MechanismType_SHA3_512_RSA_PKCS_PSS           MechanismType = 101
	MechanismType_SHA3_224_RSA_PKCS               MechanismType = 102
	MechanismType_SHA3_224_RSA_PKCS_PSS           MechanismType = 103
	MechanismType_RC2_KEY_GEN                     MechanismType = 256
	MechanismType_RC2_ECB                         MechanismType = 257
	MechanismType_RC2_CBC                         MechanismType = 258
	MechanismType_RC2_MAC                         MechanismType = 259
	MechanismType_RC2_MAC_GENERAL                 MechanismType = 260
	MechanismType_RC2_CBC_PAD                     MechanismType = 261
	MechanismType_RC4_KEY_GEN                     MechanismType = 272
	MechanismType_RC4                             MechanismType = 273
	MechanismType_DES_KEY_GEN                     MechanismType = 288
	MechanismType_DES_ECB                         MechanismType = 289
	MechanismType_DES_CBC                         MechanismType = 290
	MechanismType_DES_MAC                         MechanismType = 291
	MechanismType_DES_MAC_GENERAL                 MechanismType = 292
	MechanismType_DES_CBC_PAD                     MechanismType = 293
	MechanismType_DES2_KEY_GEN                    MechanismType = 304
	MechanismType_DES3_KEY_GEN                    MechanismType = 305
	MechanismType_DES3_ECB                        MechanismType = 306
	MechanismType_DES3_CBC                        MechanismType = 307
	MechanismType_DES3_MAC                        MechanismType = 308
	MechanismType_DES3_MAC_GENERAL                MechanismType = 309
	MechanismType_DES3_CBC_PAD                    MechanismType = 310
	MechanismType_DES3_CMAC_GENERAL               MechanismType = 311
	MechanismType_DES3_CMAC                       MechanismType = 312
	MechanismType_CDMF_KEY_GEN                    MechanismType = 320
	MechanismType_CDMF_ECB                        MechanismType = 321
	MechanismType_CDMF_CBC                        MechanismType = 322
	MechanismType_CDMF_MAC                        MechanismType = 323
	MechanismType_CDMF_MAC_GENERAL                MechanismType = 324
	MechanismType_CDMF_CBC_PAD                    MechanismType = 325
	MechanismType_DES_OFB64                       MechanismType = 336
	MechanismType_DES_OFB8                        MechanismType = 337
	MechanismType_DES_CFB64                       MechanismType = 338
	MechanismType_DES_CFB8                        MechanismType = 339
	MechanismType_MD2                             MechanismType = 512
	MechanismType_MD2_HMAC                        MechanismType = 513
	MechanismType_MD2_HMAC_GENERAL                MechanismType = 514
	MechanismType_MD5                             MechanismType = 528
	MechanismType_MD5_HMAC                        MechanismType = 529
	MechanismType_MD5_HMAC_GENERAL                MechanismType = 530
	MechanismType_SHA_1                           MechanismType = 544
	MechanismType_SHA_1_HMAC                      MechanismType = 545
	MechanismType_SHA_1_HMAC_GENERAL              MechanismType = 546
	MechanismType_RIPEMD128                       MechanismType = 560
	MechanismType_RIPEMD128_HMAC                  MechanismType = 561
	MechanismType_RIPEMD128_HMAC_GENERAL          MechanismType = 562
	MechanismType_RIPEMD160                       MechanismType = 576
	MechanismType_RIPEMD160_HMAC                  MechanismType = 577
	MechanismType_RIPEMD160_HMAC_GENERAL          MechanismType = 578
	MechanismType_SHA256                          MechanismType = 592
	MechanismType_SHA256_HMAC                     MechanismType = 593
	MechanismType_SHA256_HMAC_GENERAL             MechanismType = 594
	MechanismType_SHA224                          MechanismType = 597
	MechanismType_SHA224_HMAC                     MechanismType = 598
	MechanismType_SHA224_HMAC_GENERAL             MechanismType = 599
	MechanismType_SHA384                          MechanismType = 608
	MechanismType_SHA384_HMAC                     MechanismType = 609
	MechanismType_SHA384_HMAC_GENERAL             MechanismType = 610
	MechanismType_SHA512                          MechanismType = 624
	MechanismType_SHA512_HMAC                     MechanismType = 625
	MechanismType_SHA512_HMAC_GENERAL             MechanismType = 626
	MechanismType_SECURID_KEY_GEN                 MechanismType = 640
	MechanismType_SECURID                         MechanismType = 642
	MechanismType_HOTP_KEY_GEN                    MechanismType = 656
	MechanismType_HOTP                            MechanismType = 657
	MechanismType_ACTI                            MechanismType = 672
	MechanismType_ACTI_KEY_GEN                    MechanismType = 673
	MechanismType_SHA3_256                        MechanismType = 688
	MechanismType_SHA3_256_HMAC                   MechanismType = 689
	MechanismType_SHA3_256_HMAC_GENERAL           MechanismType = 690
	MechanismType_SHA3_256_KEY_GEN                MechanismType = 691
	MechanismType_SHA3_224                        MechanismType = 693
	MechanismType_SHA3_224_HMAC                   MechanismType = 694
	MechanismType_SHA3_224_HMAC_GENERAL           MechanismType = 695
	MechanismType_SHA3_224_KEY_GEN                MechanismType = 696
	MechanismType_SHA3_384                        MechanismType = 704
	MechanismType_SHA3_384_HMAC                   MechanismType = 705
	MechanismType_SHA3_384_HMAC_GENERAL           MechanismType = 706
	MechanismType_SHA3_384_KEY_GEN                MechanismType = 707
	MechanismType_SHA3_512                        MechanismType = 720
	MechanismType_SHA3_512_HMAC                   MechanismType = 721
	MechanismType_SHA3_512_HMAC_GENERAL           MechanismType = 722
	MechanismType_SHA3_512_KEY_GEN                MechanismType = 723
	MechanismType_CAST_KEY_GEN                    MechanismType = 768
	MechanismType_CAST_ECB                        MechanismType = 769
	MechanismType_CAST_CBC                        MechanismType = 770
	MechanismType_CAST_MAC                        MechanismType = 771
	MechanismType_CAST_MAC_GENERAL                MechanismType = 772
	MechanismType_CAST_CBC_PAD                    MechanismType = 773
	MechanismType_CAST3_KEY_GEN                   MechanismType = 784
	MechanismType_CAST3_ECB                       MechanismType = 785
	MechanismType_CAST3_CBC                       MechanismType = 786
	MechanismType_CAST3_MAC                       MechanismType = 787
	MechanismType_CAST3_MAC_GENERAL               MechanismType = 788
	MechanismType_CAST3_CBC_PAD                   MechanismType = 789
	MechanismType_CAST5_KEY_GEN                   MechanismType = 800
	MechanismType_CAST5_ECB                       MechanismType = 801
	MechanismType_CAST5_CBC                       MechanismType = 802
	MechanismType_CAST5_MAC                       MechanismType = 803
	MechanismType_CAST5_MAC_GENERAL               MechanismType = 804
	MechanismType_CAST5_CBC_PAD                   MechanismType = 805
	MechanismType_RC5_KEY_GEN                     MechanismType = 816
	MechanismType_RC5_ECB                         MechanismType = 817
	MechanismType_RC5_CBC                         MechanismType = 818
	MechanismType_RC5_MAC                         MechanismType = 819
	MechanismType_RC5_MAC_GENERAL                 MechanismType = 820
	MechanismType_RC5_CBC_PAD                     MechanismType = 821
	MechanismType_IDEA_KEY_GEN                    MechanismType = 832
	MechanismType_IDEA_ECB                        MechanismType = 833
	MechanismType_IDEA_CBC                        MechanismType = 834
	MechanismType_IDEA_MAC                        MechanismType = 835
	MechanismType_IDEA_MAC_GENERAL                MechanismType = 836
	MechanismType_IDEA_CBC_PAD                    MechanismType = 837
	MechanismType_GENERIC_SECRET_KEY_GEN          MechanismType = 848
	MechanismType_CONCATENATE_BASE_AND_KEY        MechanismType = 864
	MechanismType_CONCATENATE_BASE_AND_DATA       MechanismType = 866
	MechanismType_CONCATENATE_DATA_AND_BASE       MechanismType = 867
	MechanismType_XOR_BASE_AND_DATA               MechanismType = 868
	MechanismType_EXTRACT_KEY_FROM_KEY            MechanismType = 869
	MechanismType_SSL3_PRE_MASTER_KEY_GEN         MechanismType = 880
	MechanismType_SSL3_MASTER_KEY_DERIVE          MechanismType = 881
	MechanismType_SSL3_KEY_AND_MAC_DERIVE         MechanismType = 882
	MechanismType_SSL3_MASTER_KEY_DERIVE_DH       MechanismType = 883
	MechanismType_TLS_PRE_MASTER_KEY_GEN          MechanismType = 884
	MechanismType_TLS_MASTER_KEY_DERIVE           MechanismType = 885
	MechanismType_TLS_KEY_AND_MAC_DERIVE          MechanismType = 886
	MechanismType_TLS_MASTER_KEY_DERIVE_DH        MechanismType = 887
	MechanismType_TLS_PRF                         MechanismType = 888
	MechanismType_SSL3_MD5_MAC                    MechanismType = 896
	MechanismType_SSL3_SHA1_MAC                   MechanismType = 897
	MechanismType_MD5_KEY_DERIVATION              MechanismType = 912
	MechanismType_MD2_KEY_DERIVATION              MechanismType = 913
	MechanismType_SHA1_KEY_DERIVATION             MechanismType = 914
	MechanismType_SHA256_KEY_DERIVATION           MechanismType = 915
	MechanismType_SHA384_KEY_DERIVATION           MechanismType = 916
	MechanismType_SHA512_KEY_DERIVATION           MechanismType = 917
	MechanismType_SHA224_KEY_DERIVATION           MechanismType = 918
	MechanismType_SHA3_256_KEY_DERIVATION         MechanismType = 919
	MechanismType_SHA3_224_KEY_DERIVATION         MechanismType = 920
	MechanismType_SHA3_384_KEY_DERIVATION         MechanismType = 921
	MechanismType_SHA3_512_KEY_DERIVATION         MechanismType = 922
	MechanismType_SHAKE_128_KEY_DERIVATION        MechanismType = 923
	MechanismType_SHAKE_256_KEY_DERIVATION        MechanismType = 924
	MechanismType_PBE_MD2_DES_CBC                 MechanismType = 928
	MechanismType_PBE_MD5_DES_CBC                 MechanismType = 929
	MechanismType_PBE_MD5_CAST_CBC                MechanismType = 930
	MechanismType_PBE_MD5_CAST3_CBC               MechanismType = 931
	MechanismType_PBE_MD5_CAST5_CBC               MechanismType = 932
	MechanismType_PBE_SHA1_CAST5_CBC              MechanismType = 933
	MechanismType_PBE_SHA1_RC4_128                MechanismType = 934
	MechanismType_PBE_SHA1_RC4_40                 MechanismType = 935
	MechanismType_PBE_SHA1_DES3_EDE_CBC           MechanismType = 936
	MechanismType_PBE_SHA1_DES2_EDE_CBC           MechanismType = 937
	MechanismType_PBE_SHA1_RC2_128_CBC            MechanismType = 938
	MechanismType_PBE_SHA1_RC2_40_CBC             MechanismType = 939
	MechanismType_PKCS5_PBKD2                     MechanismType = 944
	MechanismType_PBA_SHA1_WITH_SHA1_HMAC         MechanismType = 960
	MechanismType_WTLS_PRE_MASTER_KEY_GEN         MechanismType = 976
	MechanismType_WTLS_MASTER_KEY_DERIVE          MechanismType = 977
	MechanismType_WTLS_MASTER_KEY_DERIVE_DH_ECC   MechanismType = 978
	MechanismType_WTLS_PRF                        MechanismType = 979
	MechanismType_WTLS_SERVER_KEY_AND_MAC_DERIVE  MechanismType = 980
	MechanismType_WTLS_CLIENT_KEY_AND_MAC_DERIVE  MechanismType = 981
	MechanismType_TLS12_MAC                       MechanismType = 984
	MechanismType_TLS12_KDF                       MechanismType = 985
	MechanismType_TLS12_MASTER_KEY_DERIVE         MechanismType = 992
	MechanismType_TLS12_KEY_AND_MAC_DERIVE        MechanismType = 993
	MechanismType_TLS12_MASTER_KEY_DERIVE_DH      MechanismType = 994
	MechanismType_TLS12_KEY_SAFE_DERIVE           MechanismType = 995
	MechanismType_TLS_MAC                         MechanismType = 996
	MechanismType_TLS_KDF                         MechanismType = 997
	MechanismType_KEY_WRAP_LYNKS                  MechanismType = 1024
	MechanismType_KEY_WRAP_SET_OAEP               MechanismType = 1025
	MechanismType_CMS_SIG                         MechanismType = 1280
	MechanismType_KIP_DERIVE                      MechanismType = 1296
	MechanismType_KIP_WRAP                        MechanismType = 1297
	MechanismType_KIP_MAC                         MechanismType = 1298
	MechanismType_CAMELLIA_KEY_GEN                MechanismType = 1360
	MechanismType_CAMELLIA_ECB                    MechanismType = 1361
	MechanismType_CAMELLIA_CBC                    MechanismType = 1362
	MechanismType_CAMELLIA_MAC                    MechanismType = 1363
	MechanismType_CAMELLIA_MAC_GENERAL            MechanismType = 1364
	MechanismType_CAMELLIA_CBC_PAD                MechanismType = 1365
	MechanismType_CAMELLIA_ECB_ENCRYPT_DATA       MechanismType = 1366
	MechanismType_CAMELLIA_CBC_ENCRYPT_DATA       MechanismType = 1367
	MechanismType_CAMELLIA_CTR                    MechanismType = 1368
	MechanismType_ARIA_KEY_GEN                    MechanismType = 1376
	MechanismType_ARIA_ECB                        MechanismType = 1377
	MechanismType_ARIA_CBC                        MechanismType = 1378
	MechanismType_ARIA_MAC                        MechanismType = 1379
	MechanismType_ARIA_MAC_GENERAL                MechanismType = 1380
	MechanismType_ARIA_CBC_PAD                    MechanismType = 1381
	MechanismType_ARIA_ECB_ENCRYPT_DATA           MechanismType = 1382
	MechanismType_ARIA_CBC_ENCRYPT_DATA           MechanismType = 1383
	MechanismType_SEED_KEY_GEN                    MechanismType = 1616
	MechanismType_SEED_ECB                        MechanismType = 1617
	MechanismType_SEED_CBC                        MechanismType = 1618
	MechanismType_SEED_MAC                        MechanismType = 1619
	MechanismType_SEED_MAC_GENERAL                MechanismType = 1620
	MechanismType_SEED_CBC_PAD                    MechanismType = 1621
	MechanismType_SEED_ECB_ENCRYPT_DATA           MechanismType = 1622
	MechanismType_SEED_CBC_ENCRYPT_DATA           MechanismType = 1623
	MechanismType_SKIPJACK_KEY_GEN                MechanismType = 4096
	MechanismType_SKIPJACK_ECB64                  MechanismType = 4097
	MechanismType_SKIPJACK_CBC64                  MechanismType = 4098
	MechanismType_SKIPJACK_OFB64                  MechanismType = 4099
	MechanismType_SKIPJACK_CFB64                  MechanismType = 4100
	MechanismType_SKIPJACK_CFB32                  MechanismType = 4101
	MechanismType_SKIPJACK_CFB16                  MechanismType = 4102
	MechanismType_SKIPJACK_CFB8                   MechanismType = 4103
	MechanismType_SKIPJACK_WRAP                   MechanismType = 4104
	MechanismType_SKIPJACK_PRIVATE_WRAP           MechanismType = 4105
	MechanismType_SKIPJACK_RELAYX                 MechanismType = 4106
	MechanismType_KEA_KEY_PAIR_GEN                MechanismType = 4112
	MechanismType_KEA_KEY_DERIVE                  MechanismType = 4113
	MechanismType_KEA_DERIVE                      MechanismType = 4114
	MechanismType_FORTEZZA_TIMESTAMP              MechanismType = 4128
	MechanismType_BATON_KEY_GEN                   MechanismType = 4144
	MechanismType_BATON_ECB128                    MechanismType = 4145
	MechanismType_BATON_ECB96                     MechanismType = 4146
	MechanismType_BATON_CBC128                    MechanismType = 4147
	MechanismType_BATON_COUNTER                   MechanismType = 4148
	MechanismType_BATON_SHUFFLE                   MechanismType = 4149
	MechanismType_BATON_WRAP                      MechanismType = 4150
	MechanismType_EC_KEY_PAIR_GEN                 MechanismType = 4160
	MechanismType_ECDSA                           MechanismType = 4161
	MechanismType_ECDSA_SHA1                      MechanismType = 4162
	MechanismType_ECDSA_SHA224                    MechanismType = 4163
	MechanismType_ECDSA_SHA256                    MechanismType = 4164
	MechanismType_ECDSA_SHA384                    MechanismType = 4165
	MechanismType_ECDSA_SHA512                    MechanismType = 4166
	MechanismType_EC_KEY_PAIR_GEN_W_EXTRA_BITS    MechanismType = 5131
	MechanismType_ECDH1_DERIVE                    MechanismType = 4176
	MechanismType_ECDH1_COFACTOR_DERIVE           MechanismType = 4177
	MechanismType_ECMQV_DERIVE                    MechanismType = 4178
	MechanismType_ECDH_AES_KEY_WRAP               MechanismType = 4179
	MechanismType_RSA_AES_KEY_WRAP                MechanismType = 4180
	MechanismType_JUNIPER_KEY_GEN                 MechanismType = 4192
	MechanismType_JUNIPER_ECB128                  MechanismType = 4193
	MechanismType_JUNIPER_CBC128                  MechanismType = 4194
	MechanismType_JUNIPER_COUNTER                 MechanismType = 4195
	MechanismType_JUNIPER_SHUFFLE                 MechanismType = 4196
	MechanismType_JUNIPER_WRAP                    MechanismType = 4197
	MechanismType_FASTHASH                        MechanismType = 4208
	MechanismType_AES_XTS                         MechanismType = 4209
	MechanismType_AES_XTS_KEY_GEN                 MechanismType = 4210
	MechanismType_AES_KEY_GEN                     MechanismType = 4224
	MechanismType_AES_ECB                         MechanismType = 4225
	MechanismType_AES_CBC                         MechanismType = 4226
	MechanismType_AES_MAC                         MechanismType = 4227
	MechanismType_AES_MAC_GENERAL                 MechanismType = 4228
	MechanismType_AES_CBC_PAD                     MechanismType = 4229
	MechanismType_AES_CTR                         MechanismType = 4230
	MechanismType_AES_GCM                         MechanismType = 4231
	MechanismType_AES_CCM                         MechanismType = 4232
	MechanismType_AES_CTS                         MechanismType = 4233
	MechanismType_AES_CMAC                        MechanismType = 4234
	MechanismType_AES_CMAC_GENERAL                MechanismType = 4235
	MechanismType_AES_XCBC_MAC                    MechanismType = 4236
	MechanismType_AES_XCBC_MAC_96                 MechanismType = 4237
	MechanismType_AES_GMAC                        MechanismType = 4238
	MechanismType_BLOWFISH_KEY_GEN                MechanismType = 4240
	MechanismType_BLOWFISH_CBC                    MechanismType = 4241
	MechanismType_TWOFISH_KEY_GEN                 MechanismType = 4242
	MechanismType_TWOFISH_CBC                     MechanismType = 4243
	MechanismType_BLOWFISH_CBC_PAD                MechanismType = 4244
	MechanismType_TWOFISH_CBC_PAD                 MechanismType = 4245
	MechanismType_DES_ECB_ENCRYPT_DATA            MechanismType = 4352
	MechanismType_DES_CBC_ENCRYPT_DATA            MechanismType = 4353
	MechanismType_DES3_ECB_ENCRYPT_DATA           MechanismType = 4354
	MechanismType_DES3_CBC_ENCRYPT_DATA           MechanismType = 4355
	MechanismType_AES_ECB_ENCRYPT_DATA            MechanismType = 4356
	MechanismType_AES_CBC_ENCRYPT_DATA            MechanismType = 4357
	MechanismType_GOSTR3410_KEY_PAIR_GEN          MechanismType = 4608
	MechanismType_GOSTR3410                       MechanismType = 4609
	MechanismType_GOSTR3410_WITH_GOSTR3411        MechanismType = 4610
	MechanismType_GOSTR3410_KEY_WRAP              MechanismType = 4611
	MechanismType_GOSTR3410_DERIVE                MechanismType = 4612
	MechanismType_GOSTR3411                       MechanismType = 4624
	MechanismType_GOSTR3411_HMAC                  MechanismType = 4625
	MechanismType_GOST28147_KEY_GEN               MechanismType = 4640
	MechanismType_GOST28147_ECB                   MechanismType = 4641
	MechanismType_GOST28147                       MechanismType = 4642
	MechanismType_GOST28147_MAC                   MechanismType = 4643
	MechanismType_GOST28147_KEY_WRAP              MechanismType = 4644
	MechanismType_CHACHA20_KEY_GEN                MechanismType = 4645
	MechanismType_CHACHA20                        MechanismType = 4646
	MechanismType_POLY1305_KEY_GEN                MechanismType = 4647
	MechanismType_POLY1305                        MechanismType = 4648
	MechanismType_DSA_PARAMETER_GEN               MechanismType = 8192
	MechanismType_DH_PKCS_PARAMETER_GEN           MechanismType = 8193
	MechanismType_X9_42_DH_PARAMETER_GEN          MechanismType = 8194
	MechanismType_DSA_PROBABILISTIC_PARAMETER_GEN MechanismType = 8195
	MechanismType_DSA_SHAWE_TAYLOR_PARAMETER_GEN  MechanismType = 8196
	MechanismType_DSA_FIPS_G_GEN                  MechanismType = 8197
	MechanismType_AES_OFB                         MechanismType = 8452
	MechanismType_AES_CFB64                       MechanismType = 8453
	MechanismType_AES_CFB8                        MechanismType = 8454
	MechanismType_AES_CFB128                      MechanismType = 8455
	MechanismType_AES_CFB1                        MechanismType = 8456
	MechanismType_AES_KEY_WRAP                    MechanismType = 8457
	MechanismType_AES_KEY_WRAP_PAD                MechanismType = 8458
	MechanismType_AES_KEY_WRAP_KWP                MechanismType = 8459
	MechanismType_RSA_PKCS_TPM_1_1                MechanismType = 16385
	MechanismType_RSA_PKCS_OAEP_TPM_1_1           MechanismType = 16386
	MechanismType_SHA_1_KEY_GEN                   MechanismType = 16387
	MechanismType_SHA224_KEY_GEN                  MechanismType = 16388
	MechanismType_SHA256_KEY_GEN                  MechanismType = 16389
	MechanismType_SHA384_KEY_GEN                  MechanismType = 16390
	MechanismType_SHA512_KEY_GEN                  MechanismType = 16391
	MechanismType_SHA512_224_KEY_GEN              MechanismType = 16392
	MechanismType_SHA512_256_KEY_GEN              MechanismType = 16393
	MechanismType_SHA512_T_KEY_GEN                MechanismType = 16394
	MechanismType_NULL                            MechanismType = 16395
	MechanismType_BLAKE2B_160                     MechanismType = 16396
	MechanismType_BLAKE2B_160_HMAC                MechanismType = 16397
	MechanismType_BLAKE2B_160_HMAC_GENERAL        MechanismType = 16398
	MechanismType_BLAKE2B_160_KEY_DERIVE          MechanismType = 16399
	MechanismType_BLAKE2B_160_KEY_GEN             MechanismType = 16400
	MechanismType_BLAKE2B_256                     MechanismType = 16401
	MechanismType_BLAKE2B_256_HMAC                MechanismType = 16402
	MechanismType_BLAKE2B_256_HMAC_GENERAL        MechanismType = 16403
	MechanismType_BLAKE2B_256_KEY_DERIVE          MechanismType = 16404
	MechanismType_BLAKE2B_256_KEY_GEN             MechanismType = 16405
	MechanismType_BLAKE2B_384                     MechanismType = 16406
	MechanismType_BLAKE2B_384_HMAC                MechanismType = 16407
	MechanismType_BLAKE2B_384_HMAC_GENERAL        MechanismType = 16408
	MechanismType_BLAKE2B_384_KEY_DERIVE          MechanismType = 16409
	MechanismType_BLAKE2B_384_KEY_GEN             MechanismType = 16410
	MechanismType_BLAKE2B_512                     MechanismType = 16411
	MechanismType_BLAKE2B_512_HMAC                MechanismType = 16412
	MechanismType_BLAKE2B_512_HMAC_GENERAL        MechanismType = 16413
	MechanismType_BLAKE2B_512_KEY_DERIVE          MechanismType = 16414
	MechanismType_BLAKE2B_512_KEY_GEN             MechanismType = 16415
	MechanismType_SALSA20                         MechanismType = 16416
	MechanismType_CHACHA20_POLY1305               MechanismType = 16417
	MechanismType_SALSA20_POLY1305                MechanismType = 16418
	MechanismType_X3DH_INITIALIZE                 MechanismType = 16419
	MechanismType_X3DH_RESPOND                    MechanismType = 16420
	MechanismType_X2RATCHET_INITIALIZE            MechanismType = 16421
	MechanismType_X2RATCHET_RESPOND               MechanismType = 16422
	MechanismType_X2RATCHET_ENCRYPT               MechanismType = 16423
	MechanismType_X2RATCHET_DECRYPT               MechanismType = 16424
	MechanismType_XEDDSA                          MechanismType = 16425
	MechanismType_HKDF_DERIVE                     MechanismType = 16426
	MechanismType_HKDF_DATA                       MechanismType = 16427
	MechanismType_HKDF_KEY_GEN                    MechanismType = 16428
	MechanismType_SALSA20_KEY_GEN                 MechanismType = 16429
	MechanismType_ECDSA_SHA3_224                  MechanismType = 4167
	MechanismType_ECDSA_SHA3_256                  MechanismType = 4168
	MechanismType_ECDSA_SHA3_384                  MechanismType = 4169
	MechanismType_ECDSA_SHA3_512                  MechanismType = 4170
	MechanismType_EC_EDWARDS_KEY_PAIR_GEN         MechanismType = 4181
	MechanismType_EC_MONTGOMERY_KEY_PAIR_GEN      MechanismType = 4182
	MechanismType_EDDSA                           MechanismType = 4183
	MechanismType_SP800_108_COUNTER_KDF           MechanismType = 940
	MechanismType_SP800_108_FEEDBACK_KDF          MechanismType = 941
	MechanismType_SP800_108_DOUBLE_PIPELINE_KDF   MechanismType = 942
)

// Enum value maps for MechanismType.
var (
	MechanismType_name = map[int32]string{
		0:     "RSA_PKCS_KEY_PAIR_GEN",
		1:     "RSA_PKCS",
		2:     "RSA_9796",
		3:     "RSA_X_509",
		4:     "MD2_RSA_PKCS",
		5:     "MD5_RSA_PKCS",
		6:     "SHA1_RSA_PKCS",
		7:     "RIPEMD128_RSA_PKCS",
		8:     "RIPEMD160_RSA_PKCS",
		9:     "RSA_PKCS_OAEP",
		10:    "RSA_X9_31_KEY_PAIR_GEN",
		11:    "RSA_X9_31",
		12:    "SHA1_RSA_X9_31",
		13:    "RSA_PKCS_PSS",
		14:    "SHA1_RSA_PKCS_PSS",
		16:    "DSA_KEY_PAIR_GEN",
		17:    "DSA",
		18:    "DSA_SHA1",
		19:    "DSA_SHA224",
		20:    "DSA_SHA256",
		21:    "DSA_SHA384",
		22:    "DSA_SHA512",
		24:    "DSA_SHA3_224",
		25:    "DSA_SHA3_256",
		26:    "DSA_SHA3_384",
		27:    "DSA_SHA3_512",
		32:    "DH_PKCS_KEY_PAIR_GEN",
		33:    "DH_PKCS_DERIVE",
		48:    "X9_42_DH_KEY_PAIR_GEN",
		49:    "X9_42_DH_DERIVE",
		50:    "X9_42_DH_HYBRID_DERIVE",
		51:    "X9_42_MQV_DERIVE",
		64:    "SHA256_RSA_PKCS",
		65:    "SHA384_RSA_PKCS",
		66:    "SHA512_RSA_PKCS",
		67:    "SHA256_RSA_PKCS_PSS",
		68:    "SHA384_RSA_PKCS_PSS",
		69:    "SHA512_RSA_PKCS_PSS",
		70:    "SHA224_RSA_PKCS",
		71:    "SHA224_RSA_PKCS_PSS",
		72:    "SHA512_224",
		73:    "SHA512_224_HMAC",
		74:    "SHA512_224_HMAC_GENERAL",
		75:    "SHA512_224_KEY_DERIVATION",
		76:    "SHA512_256",
		77:    "SHA512_256_HMAC",
		78:    "SHA512_256_HMAC_GENERAL",
		79:    "SHA512_256_KEY_DERIVATION",
		80:    "SHA512_T",
		81:    "SHA512_T_HMAC",
		82:    "SHA512_T_HMAC_GENERAL",
		83:    "SHA512_T_KEY_DERIVATION",
		96:    "SHA3_256_RSA_PKCS",
		97:    "SHA3_384_RSA_PKCS",
		98:    "SHA3_512_RSA_PKCS",
		99:    "SHA3_256_RSA_PKCS_PSS",
		100:   "SHA3_384_RSA_PKCS_PSS",
		101:   "SHA3_512_RSA_PKCS_PSS",
		102:   "SHA3_224_RSA_PKCS",
		103:   "SHA3_224_RSA_PKCS_PSS",
		256:   "RC2_KEY_GEN",
		257:   "RC2_ECB",
		258:   "RC2_CBC",
		259:   "RC2_MAC",
		260:   "RC2_MAC_GENERAL",
		261:   "RC2_CBC_PAD",
		272:   "RC4_KEY_GEN",
		273:   "RC4",
		288:   "DES_KEY_GEN",
		289:   "DES_ECB",
		290:   "DES_CBC",
		291:   "DES_MAC",
		292:   "DES_MAC_GENERAL",
		293:   "DES_CBC_PAD",
		304:   "DES2_KEY_GEN",
		305:   "DES3_KEY_GEN",
		306:   "DES3_ECB",
		307:   "DES3_CBC",
		308:   "DES3_MAC",
		309:   "DES3_MAC_GENERAL",
		310:   "DES3_CBC_PAD",
		311:   "DES3_CMAC_GENERAL",
		312:   "DES3_CMAC",
		320:   "CDMF_KEY_GEN",
		321:   "CDMF_ECB",
		322:   "CDMF_CBC",
		323:   "CDMF_MAC",
		324:   "CDMF_MAC_GENERAL",
		325:   "CDMF_CBC_PAD",
		336:   "DES_OFB64",
		337:   "DES_OFB8",
		338:   "DES_CFB64",
		339:   "DES_CFB8",
		512:   "MD2",
		513:   "MD2_HMAC",
		514:   "MD2_HMAC_GENERAL",
		528:   "MD5",
		529:   "MD5_HMAC",
		530:   "MD5_HMAC_GENERAL",
		544:   "SHA_1",
		545:   "SHA_1_HMAC",
		546:   "SHA_1_HMAC_GENERAL",
		560:   "RIPEMD128",
		561:   "RIPEMD128_HMAC",
		562:   "RIPEMD128_HMAC_GENERAL",
		576:   "RIPEMD160",
		577:   "RIPEMD160_HMAC",
		578:   "RIPEMD160_HMAC_GENERAL",
		592:   "SHA256",
		593:   "SHA256_HMAC",
		594:   "SHA256_HMAC_GENERAL",
		597:   "SHA224",
		598:   "SHA224_HMAC",
		599:   "SHA224_HMAC_GENERAL",
		608:   "SHA384",
		609:   "SHA384_HMAC",
		610:   "SHA384_HMAC_GENERAL",
		624:   "SHA512",
		625:   "SHA512_HMAC",
		626:   "SHA512_HMAC_GENERAL",
		640:   "SECURID_KEY_GEN",
		642:   "SECURID",
		656:   "HOTP_KEY_GEN",
		657:   "HOTP",
		672:   "ACTI",
		673:   "ACTI_KEY_GEN",
		688:   "SHA3_256",
		689:   "SHA3_256_HMAC",
		690:   "SHA3_256_HMAC_GENERAL",
		691:   "SHA3_256_KEY_GEN",
		693:   "SHA3_224",
		694:   "SHA3_224_HMAC",
		695:   "SHA3_224_HMAC_GENERAL",
		696:   "SHA3_224_KEY_GEN",
		704:   "SHA3_384",
		705:   "SHA3_384_HMAC",
		706:   "SHA3_384_HMAC_GENERAL",
		707:   "SHA3_384_KEY_GEN",
		720:   "SHA3_512",
		721:   "SHA3_512_HMAC",
		722:   "SHA3_512_HMAC_GENERAL",
		723:   "SHA3_512_KEY_GEN",
		768:   "CAST_KEY_GEN",
		769:   "CAST_ECB",
		770:   "CAST_CBC",
		771:   "CAST_MAC",
		772:   "CAST_MAC_GENERAL",
		773:   "CAST_CBC_PAD",
		784:   "CAST3_KEY_GEN",
		785:   "CAST3_ECB",
		786:   "CAST3_CBC",
		787:   "CAST3_MAC",
		788:   "CAST3_MAC_GENERAL",
		789:   "CAST3_CBC_PAD",
		800:   "CAST5_KEY_GEN",
		801:   "CAST5_ECB",
		802:   "CAST5_CBC",
		803:   "CAST5_MAC",
		804:   "CAST5_MAC_GENERAL",
		805:   "CAST5_CBC_PAD",
		816:   "RC5_KEY_GEN",
		817:   "RC5_ECB",
		818:   "RC5_CBC",
		819:   "RC5_MAC",
		820:   "RC5_MAC_GENERAL",
		821:   "RC5_CBC_PAD",
		832:   "IDEA_KEY_GEN",
		833:   "IDEA_ECB",
		834:   "IDEA_CBC",
		835:   "IDEA_MAC",
		836:   "IDEA_MAC_GENERAL",
		837:   "IDEA_CBC_PAD",
		848:   "GENERIC_SECRET_KEY_GEN",
		864:   "CONCATENATE_BASE_AND_KEY",
		866:   "CONCATENATE_BASE_AND_DATA",
		867:   "CONCATENATE_DATA_AND_BASE",
		868:   "XOR_BASE_AND_DATA",
		869:   "EXTRACT_KEY_FROM_KEY",
		880:   "SSL3_PRE_MASTER_KEY_GEN",
		881:   "SSL3_MASTER_KEY_DERIVE",
		882:   "SSL3_KEY_AND_MAC_DERIVE",
		883:   "SSL3_MASTER_KEY_DERIVE_DH",
		884:   "TLS_PRE_MASTER_KEY_GEN",
		885:   "TLS_MASTER_KEY_DERIVE",
		886:   "TLS_KEY_AND_MAC_DERIVE",
		887:   "TLS_MASTER_KEY_DERIVE_DH",
		888:   "TLS_PRF",
		896:   "SSL3_MD5_MAC",
		897:   "SSL3_SHA1_MAC",
		912:   "MD5_KEY_DERIVATION",
		913:   "MD2_KEY_DERIVATION",
		914:   "SHA1_KEY_DERIVATION",
		915:   "SHA256_KEY_DERIVATION",
		916:   "SHA384_KEY_DERIVATION",
		917:   "SHA512_KEY_DERIVATION",
		918:   "SHA224_KEY_DERIVATION",
		919:   "SHA3_256_KEY_DERIVATION",
		920:   "SHA3_224_KEY_DERIVATION",
		921:   "SHA3_384_KEY_DERIVATION",
		922:   "SHA3_512_KEY_DERIVATION",
		923:   "SHAKE_128_KEY_DERIVATION",
		924:   "SHAKE_256_KEY_DERIVATION",
		928:   "PBE_MD2_DES_CBC",
		929:   "PBE_MD5_DES_CBC",
		930:   "PBE_MD5_CAST_CBC",
		931:   "PBE_MD5_CAST3_CBC",
		932:   "PBE_MD5_CAST5_CBC",
		933:   "PBE_SHA1_CAST5_CBC",
		934:   "PBE_SHA1_RC4_128",
		935:   "PBE_SHA1_RC4_40",
		936:   "PBE_SHA1_DES3_EDE_CBC",
		937:   "PBE_SHA1_DES2_EDE_CBC",
		938:   "PBE_SHA1_RC2_128_CBC",
		939:   "PBE_SHA1_RC2_40_CBC",
		944:   "PKCS5_PBKD2",
		960:   "PBA_SHA1_WITH_SHA1_HMAC",
		976:   "WTLS_PRE_MASTER_KEY_GEN",
		977:   "WTLS_MASTER_KEY_DERIVE",
		978:   "WTLS_MASTER_KEY_DERIVE_DH_ECC",
		979:   "WTLS_PRF",
		980:   "WTLS_SERVER_KEY_AND_MAC_DERIVE",
		981:   "WTLS_CLIENT_KEY_AND_MAC_DERIVE",
		984:   "TLS12_MAC",
		985:   "TLS12_KDF",
		992:   "TLS12_MASTER_KEY_DERIVE",
		993:   "TLS12_KEY_AND_MAC_DERIVE",
		994:   "TLS12_MASTER_KEY_DERIVE_DH",
		995:   "TLS12_KEY_SAFE_DERIVE",
		996:   "TLS_MAC",
		997:   "TLS_KDF",
		1024:  "KEY_WRAP_LYNKS",
		1025:  "KEY_WRAP_SET_OAEP",
		1280:  "CMS_SIG",
		1296:  "KIP_DERIVE",
		1297:  "KIP_WRAP",
		1298:  "KIP_MAC",
		1360:  "CAMELLIA_KEY_GEN",
		1361:  "CAMELLIA_ECB",
		1362:  "CAMELLIA_CBC",
		1363:  "CAMELLIA_MAC",
		1364:  "CAMELLIA_MAC_GENERAL",
		1365:  "CAMELLIA_CBC_PAD",
		1366:  "CAMELLIA_ECB_ENCRYPT_DATA",
		1367:  "CAMELLIA_CBC_ENCRYPT_DATA",
		1368:  "CAMELLIA_CTR",
		1376:  "ARIA_KEY_GEN",
		1377:  "ARIA_ECB",
		1378:  "ARIA_CBC",
		1379:  "ARIA_MAC",
		1380:  "ARIA_MAC_GENERAL",
		1381:  "ARIA_CBC_PAD",
		1382:  "ARIA_ECB_ENCRYPT_DATA",
		1383:  "ARIA_CBC_ENCRYPT_DATA",
		1616:  "SEED_KEY_GEN",
		1617:  "SEED_ECB",
		1618:  "SEED_CBC",
		1619:  "SEED_MAC",
		1620:  "SEED_MAC_GENERAL",
		1621:  "SEED_CBC_PAD",
		1622:  "SEED_ECB_ENCRYPT_DATA",
		1623:  "SEED_CBC_ENCRYPT_DATA",
		4096:  "SKIPJACK_KEY_GEN",
		4097:  "SKIPJACK_ECB64",
		4098:  "SKIPJACK_CBC64",
		4099:  "SKIPJACK_OFB64",
		4100:  "SKIPJACK_CFB64",
		4101:  "SKIPJACK_CFB32",
		4102:  "SKIPJACK_CFB16",
		4103:  "SKIPJACK_CFB8",
		4104:  "SKIPJACK_WRAP",
		4105:  "SKIPJACK_PRIVATE_WRAP",
		4106:  "SKIPJACK_RELAYX",
		4112:  "KEA_KEY_PAIR_GEN",
		4113:  "KEA_KEY_DERIVE",
		4114:  "KEA_DERIVE",
		4128:  "FORTEZZA_TIMESTAMP",
		4144:  "BATON_KEY_GEN",
		4145:  "BATON_ECB128",
		4146:  "BATON_ECB96",
		4147:  "BATON_CBC128",
		4148:  "BATON_COUNTER",
		4149:  "BATON_SHUFFLE",
		4150:  "BATON_WRAP",
		4160:  "EC_KEY_PAIR_GEN",
		4161:  "ECDSA",
		4162:  "ECDSA_SHA1",
		4163:  "ECDSA_SHA224",
		4164:  "ECDSA_SHA256",
		4165:  "ECDSA_SHA384",
		4166:  "ECDSA_SHA512",
		5131:  "EC_KEY_PAIR_GEN_W_EXTRA_BITS",
		4176:  "ECDH1_DERIVE",
		4177:  "ECDH1_COFACTOR_DERIVE",
		4178:  "ECMQV_DERIVE",
		4179:  "ECDH_AES_KEY_WRAP",
		4180:  "RSA_AES_KEY_WRAP",
		4192:  "JUNIPER_KEY_GEN",
		4193:  "JUNIPER_ECB128",
		4194:  "JUNIPER_CBC128",
		4195:  "JUNIPER_COUNTER",
		4196:  "JUNIPER_SHUFFLE",
		4197:  "JUNIPER_WRAP",
		4208:  "FASTHASH",
		4209:  "AES_XTS",
		4210:  "AES_XTS_KEY_GEN",
		4224:  "AES_KEY_GEN",
		4225:  "AES_ECB",
		4226:  "AES_CBC",
		4227:  "AES_MAC",
		4228:  "AES_MAC_GENERAL",
		4229:  "AES_CBC_PAD",
		4230:  "AES_CTR",
		4231:  "AES_GCM",
		4232:  "AES_CCM",
		4233:  "AES_CTS",
		4234:  "AES_CMAC",
		4235:  "AES_CMAC_GENERAL",
		4236:  "AES_XCBC_MAC",
		4237:  "AES_XCBC_MAC_96",
		4238:  "AES_GMAC",
		4240:  "BLOWFISH_KEY_GEN",
		4241:  "BLOWFISH_CBC",
		4242:  "TWOFISH_KEY_GEN",
		4243:  "TWOFISH_CBC",
		4244:  "BLOWFISH_CBC_PAD",
		4245:  "TWOFISH_CBC_PAD",
		4352:  "DES_ECB_ENCRYPT_DATA",
		4353:  "DES_CBC_ENCRYPT_DATA",
		4354:  "DES3_ECB_ENCRYPT_DATA",
		4355:  "DES3_CBC_ENCRYPT_DATA",
		4356:  "AES_ECB_ENCRYPT_DATA",
		4357:  "AES_CBC_ENCRYPT_DATA",
		4608:  "GOSTR3410_KEY_PAIR_GEN",
		4609:  "GOSTR3410",
		4610:  "GOSTR3410_WITH_GOSTR3411",
		4611:  "GOSTR3410_KEY_WRAP",
		4612:  "GOSTR3410_DERIVE",
		4624:  "GOSTR3411",
		4625:  "GOSTR3411_HMAC",
		4640:  "GOST28147_KEY_GEN",
		4641:  "GOST28147_ECB",
		4642:  "GOST28147",
		4643:  "GOST28147_MAC",
		4644:  "GOST28147_KEY_WRAP",
		4645:  "CHACHA20_KEY_GEN",
		4646:  "CHACHA20",
		4647:  "POLY1305_KEY_GEN",
		4648:  "POLY1305",
		8192:  "DSA_PARAMETER_GEN",
		8193:  "DH_PKCS_PARAMETER_GEN",
		8194:  "X9_42_DH_PARAMETER_GEN",
		8195:  "DSA_PROBABILISTIC_PARAMETER_GEN",
		8196:  "DSA_SHAWE_TAYLOR_PARAMETER_GEN",
		8197:  "DSA_FIPS_G_GEN",
		8452:  "AES_OFB",
		8453:  "AES_CFB64",
		8454:  "AES_CFB8",
		8455:  "AES_CFB128",
		8456:  "AES_CFB1",
		8457:  "AES_KEY_WRAP",
		8458:  "AES_KEY_WRAP_PAD",
		8459:  "AES_KEY_WRAP_KWP",
		16385: "RSA_PKCS_TPM_1_1",
		16386: "RSA_PKCS_OAEP_TPM_1_1",
		16387: "SHA_1_KEY_GEN",
		16388: "SHA224_KEY_GEN",
		16389: "SHA256_KEY_GEN",
		16390: "SHA384_KEY_GEN",
		16391: "SHA512_KEY_GEN",
		16392: "SHA512_224_KEY_GEN",
		16393: "SHA512_256_KEY_GEN",
		16394: "SHA512_T_KEY_GEN",
		16395: "NULL",
		16396: "BLAKE2B_160",
		16397: "BLAKE2B_160_HMAC",
		16398: "BLAKE2B_160_HMAC_GENERAL",
		16399: "BLAKE2B_160_KEY_DERIVE",
		16400: "BLAKE2B_160_KEY_GEN",
		16401: "BLAKE2B_256",
		16402: "BLAKE2B_256_HMAC",
		16403: "BLAKE2B_256_HMAC_GENERAL",
		16404: "BLAKE2B_256_KEY_DERIVE",
		16405: "BLAKE2B_256_KEY_GEN",
		16406: "BLAKE2B_384",
		16407: "BLAKE2B_384_HMAC",
		16408: "BLAKE2B_384_HMAC_GENERAL",
		16409: "BLAKE2B_384_KEY_DERIVE",
		16410: "BLAKE2B_384_KEY_GEN",
		16411: "BLAKE2B_512",
		16412: "BLAKE2B_512_HMAC",
		16413: "BLAKE2B_512_HMAC_GENERAL",
		16414: "BLAKE2B_512_KEY_DERIVE",
		16415: "BLAKE2B_512_KEY_GEN",
		16416: "SALSA20",
		16417: "CHACHA20_POLY1305",
		16418: "SALSA20_POLY1305",
		16419: "X3DH_INITIALIZE",
		16420: "X3DH_RESPOND",
		16421: "X2RATCHET_INITIALIZE",
		16422: "X2RATCHET_RESPOND",
		16423: "X2RATCHET_ENCRYPT",
		16424: "X2RATCHET_DECRYPT",
		16425: "XEDDSA",
		16426: "HKDF_DERIVE",
		16427: "HKDF_DATA",
		16428: "HKDF_KEY_GEN",
		16429: "SALSA20_KEY_GEN",
		4167:  "ECDSA_SHA3_224",
		4168:  "ECDSA_SHA3_256",
		4169:  "ECDSA_SHA3_384",
		4170:  "ECDSA_SHA3_512",
		4181:  "EC_EDWARDS_KEY_PAIR_GEN",
		4182:  "EC_MONTGOMERY_KEY_PAIR_GEN",
		4183:  "EDDSA",
		940:   "SP800_108_COUNTER_KDF",
		941:   "SP800_108_FEEDBACK_KDF",
		942:   "SP800_108_DOUBLE_PIPELINE_KDF",
	}
	MechanismType_value = map[string]int32{
		"RSA_PKCS_KEY_PAIR_GEN":           0,
		"RSA_PKCS":                        1,
		"RSA_9796":                        2,
		"RSA_X_509":                       3,
		"MD2_RSA_PKCS":                    4,
		"MD5_RSA_PKCS":                    5,
		"SHA1_RSA_PKCS":                   6,
		"RIPEMD128_RSA_PKCS":              7,
		"RIPEMD160_RSA_PKCS":              8,
		"RSA_PKCS_OAEP":                   9,
		"RSA_X9_31_KEY_PAIR_GEN":          10,
		"RSA_X9_31":                       11,
		"SHA1_RSA_X9_31":                  12,
		"RSA_PKCS_PSS":                    13,
		"SHA1_RSA_PKCS_PSS":               14,
		"DSA_KEY_PAIR_GEN":                16,
		"DSA":                             17,
		"DSA_SHA1":                        18,
		"DSA_SHA224":                      19,
		"DSA_SHA256":                      20,
		"DSA_SHA384":                      21,
		"DSA_SHA512":                      22,
		"DSA_SHA3_224":                    24,
		"DSA_SHA3_256":                    25,
		"DSA_SHA3_384":                    26,
		"DSA_SHA3_512":                    27,
		"DH_PKCS_KEY_PAIR_GEN":            32,
		"DH_PKCS_DERIVE":                  33,
		"X9_42_DH_KEY_PAIR_GEN":           48,
		"X9_42_DH_DERIVE":                 49,
		"X9_42_DH_HYBRID_DERIVE":          50,
		"X9_42_MQV_DERIVE":                51,
		"SHA256_RSA_PKCS":                 64,
		"SHA384_RSA_PKCS":                 65,
		"SHA512_RSA_PKCS":                 66,
		"SHA256_RSA_PKCS_PSS":             67,
		"SHA384_RSA_PKCS_PSS":             68,
		"SHA512_RSA_PKCS_PSS":             69,
		"SHA224_RSA_PKCS":                 70,
		"SHA224_RSA_PKCS_PSS":             71,
		"SHA512_224":                      72,
		"SHA512_224_HMAC":                 73,
		"SHA512_224_HMAC_GENERAL":         74,
		"SHA512_224_KEY_DERIVATION":       75,
		"SHA512_256":                      76,
		"SHA512_256_HMAC":                 77,
		"SHA512_256_HMAC_GENERAL":         78,
		"SHA512_256_KEY_DERIVATION":       79,
		"SHA512_T":                        80,
		"SHA512_T_HMAC":                   81,
		"SHA512_T_HMAC_GENERAL":           82,
		"SHA512_T_KEY_DERIVATION":         83,
		"SHA3_256_RSA_PKCS":               96,
		"SHA3_384_RSA_PKCS":               97,
		"SHA3_512_RSA_PKCS":               98,
		"SHA3_256_RSA_PKCS_PSS":           99,
		"SHA3_384_RSA_PKCS_PSS":           100,
		"SHA3_512_RSA_PKCS_PSS":           101,
		"SHA3_224_RSA_PKCS":               102,
		"SHA3_224_RSA_PKCS_PSS":           103,
		"RC2_KEY_GEN":                     256,
		"RC2_ECB":                         257,
		"RC2_CBC":                         258,
		"RC2_MAC":                         259,
		"RC2_MAC_GENERAL":                 260,
		"RC2_CBC_PAD":                     261,
		"RC4_KEY_GEN":                     272,
		"RC4":                             273,
		"DES_KEY_GEN":                     288,
		"DES_ECB":                         289,
		"DES_CBC":                         290,
		"DES_MAC":                         291,
		"DES_MAC_GENERAL":                 292,
		"DES_CBC_PAD":                     293,
		"DES2_KEY_GEN":                    304,
		"DES3_KEY_GEN":                    305,
		"DES3_ECB":                        306,
		"DES3_CBC":                        307,
		"DES3_MAC":                        308,
		"DES3_MAC_GENERAL":                309,
		"DES3_CBC_PAD":                    310,
		"DES3_CMAC_GENERAL":               311,
		"DES3_CMAC":                       312,
		"CDMF_KEY_GEN":                    320,
		"CDMF_ECB":                        321,
		"CDMF_CBC":                        322,
		"CDMF_MAC":                        323,
		"CDMF_MAC_GENERAL":                324,
		"CDMF_CBC_PAD":                    325,
		"DES_OFB64":                       336,
		"DES_OFB8":                        337,
		"DES_CFB64":                       338,
		"DES_CFB8":                        339,
		"MD2":                             512,
		"MD2_HMAC":                        513,
		"MD2_HMAC_GENERAL":                514,
		"MD5":                             528,
		"MD5_HMAC":                        529,
		"MD5_HMAC_GENERAL":                530,
		"SHA_1":                           544,
		"SHA_1_HMAC":                      545,
		"SHA_1_HMAC_GENERAL":              546,
		"RIPEMD128":                       560,
		"RIPEMD128_HMAC":                  561,
		"RIPEMD128_HMAC_GENERAL":          562,
		"RIPEMD160":                       576,
		"RIPEMD160_HMAC":                  577,
		"RIPEMD160_HMAC_GENERAL":          578,
		"SHA256":                          592,
		"SHA256_HMAC":                     593,
		"SHA256_HMAC_GENERAL":             594,
		"SHA224":                          597,
		"SHA224_HMAC":                     598,
		"SHA224_HMAC_GENERAL":             599,
		"SHA384":                          608,
		"SHA384_HMAC":                     609,
		"SHA384_HMAC_GENERAL":             610,
		"SHA512":                          624,
		"SHA512_HMAC":                     625,
		"SHA512_HMAC_GENERAL":             626,
		"SECURID_KEY_GEN":                 640,
		"SECURID":                         642,
		"HOTP_KEY_GEN":                    656,
		"HOTP":                            657,
		"ACTI":                            672,
		"ACTI_KEY_GEN":                    673,
		"SHA3_256":                        688,
		"SHA3_256_HMAC":                   689,
		"SHA3_256_HMAC_GENERAL":           690,
		"SHA3_256_KEY_GEN":                691,
		"SHA3_224":                        693,
		"SHA3_224_HMAC":                   694,
		"SHA3_224_HMAC_GENERAL":           695,
		"SHA3_224_KEY_GEN":                696,
		"SHA3_384":                        704,
		"SHA3_384_HMAC":                   705,
		"SHA3_384_HMAC_GENERAL":           706,
		"SHA3_384_KEY_GEN":                707,
		"SHA3_512":                        720,
		"SHA3_512_HMAC":                   721,
		"SHA3_512_HMAC_GENERAL":           722,
		"SHA3_512_KEY_GEN":                723,
		"CAST_KEY_GEN":                    768,
		"CAST_ECB":                        769,
		"CAST_CBC":                        770,
		"CAST_MAC":                        771,
		"CAST_MAC_GENERAL":                772,
		"CAST_CBC_PAD":                    773,
		"CAST3_KEY_GEN":                   784,
		"CAST3_ECB":                       785,
		"CAST3_CBC":                       786,
		"CAST3_MAC":                       787,
		"CAST3_MAC_GENERAL":               788,
		"CAST3_CBC_PAD":                   789,
		"CAST5_KEY_GEN":                   800,
		"CAST5_ECB":                       801,
		"CAST5_CBC":                       802,
		"CAST5_MAC":                       803,
		"CAST5_MAC_GENERAL":               804,
		"CAST5_CBC_PAD":                   805,
		"RC5_KEY_GEN":                     816,
		"RC5_ECB":                         817,
		"RC5_CBC":                         818,
		"RC5_MAC":                         819,
		"RC5_MAC_GENERAL":                 820,
		"RC5_CBC_PAD":                     821,
		"IDEA_KEY_GEN":                    832,
		"IDEA_ECB":                        833,
		"IDEA_CBC":                        834,
		"IDEA_MAC":                        835,
		"IDEA_MAC_GENERAL":                836,
		"IDEA_CBC_PAD":                    837,
		"GENERIC_SECRET_KEY_GEN":          848,
		"CONCATENATE_BASE_AND_KEY":        864,
		"CONCATENATE_BASE_AND_DATA":       866,
		"CONCATENATE_DATA_AND_BASE":       867,
		"XOR_BASE_AND_DATA":               868,
		"EXTRACT_KEY_FROM_KEY":            869,
		"SSL3_PRE_MASTER_KEY_GEN":         880,
		"SSL3_MASTER_KEY_DERIVE":          881,
		"SSL3_KEY_AND_MAC_DERIVE":         882,
		"SSL3_MASTER_KEY_DERIVE_DH":       883,
		"TLS_PRE_MASTER_KEY_GEN":          884,
		"TLS_MASTER_KEY_DERIVE":           885,
		"TLS_KEY_AND_MAC_DERIVE":          886,
		"TLS_MASTER_KEY_DERIVE_DH":        887,
		"TLS_PRF":                         888,
		"SSL3_MD5_MAC":                    896,
		"SSL3_SHA1_MAC":                   897,
		"MD5_KEY_DERIVATION":              912,
		"MD2_KEY_DERIVATION":              913,
		"SHA1_KEY_DERIVATION":             914,
		"SHA256_KEY_DERIVATION":           915,
		"SHA384_KEY_DERIVATION":           916,
		"SHA512_KEY_DERIVATION":           917,
		"SHA224_KEY_DERIVATION":           918,
		"SHA3_256_KEY_DERIVATION":         919,
		"SHA3_224_KEY_DERIVATION":         920,
		"SHA3_384_KEY_DERIVATION":         921,
		"SHA3_512_KEY_DERIVATION":         922,
		"SHAKE_128_KEY_DERIVATION":        923,
		"SHAKE_256_KEY_DERIVATION":        924,
		"PBE_MD2_DES_CBC":                 928,
		"PBE_MD5_DES_CBC":                 929,
		"PBE_MD5_CAST_CBC":                930,
		"PBE_MD5_CAST3_CBC":               931,
		"PBE_MD5_CAST5_CBC":               932,
		"PBE_SHA1_CAST5_CBC":              933,
		"PBE_SHA1_RC4_128":                934,
		"PBE_SHA1_RC4_40":                 935,
		"PBE_SHA1_DES3_EDE_CBC":           936,
		"PBE_SHA1_DES2_EDE_CBC":           937,
		"PBE_SHA1_RC2_128_CBC":            938,
		"PBE_SHA1_RC2_40_CBC":             939,
		"PKCS5_PBKD2":                     944,
		"PBA_SHA1_WITH_SHA1_HMAC":         960,
		"WTLS_PRE_MASTER_KEY_GEN":         976,
		"WTLS_MASTER_KEY_DERIVE":          977,
		"WTLS_MASTER_KEY_DERIVE_DH_ECC":   978,
		"WTLS_PRF":                        979,
		"WTLS_SERVER_KEY_AND_MAC_DERIVE":  980,
		"WTLS_CLIENT_KEY_AND_MAC_DERIVE":  981,
		"TLS12_MAC":                       984,
		"TLS12_KDF":                       985,
		"TLS12_MASTER_KEY_DERIVE":         992,
		"TLS12_KEY_AND_MAC_DERIVE":        993,
		"TLS12_MASTER_KEY_DERIVE_DH":      994,
		"TLS12_KEY_SAFE_DERIVE":           995,
		"TLS_MAC":                         996,
		"TLS_KDF":                         997,
		"KEY_WRAP_LYNKS":                  1024,
		"KEY_WRAP_SET_OAEP":               1025,
		"CMS_SIG":                         1280,
		"KIP_DERIVE":                      1296,
		"KIP_WRAP":                        1297,
		"KIP_MAC":                         1298,
		"CAMELLIA_KEY_GEN":                1360,
		"CAMELLIA_ECB":                    1361,
		"CAMELLIA_CBC":                    1362,
		"CAMELLIA_MAC":                    1363,
		"CAMELLIA_MAC_GENERAL":            1364,
		"CAMELLIA_CBC_PAD":                1365,
		"CAMELLIA_ECB_ENCRYPT_DATA":       1366,
		"CAMELLIA_CBC_ENCRYPT_DATA":       1367,
		"CAMELLIA_CTR":                    1368,
		"ARIA_KEY_GEN":                    1376,
		"ARIA_ECB":                        1377,
		"ARIA_CBC":                        1378,
		"ARIA_MAC":                        1379,
		"ARIA_MAC_GENERAL":                1380,
		"ARIA_CBC_PAD":                    1381,
		"ARIA_ECB_ENCRYPT_DATA":           1382,
		"ARIA_CBC_ENCRYPT_DATA":           1383,
		"SEED_KEY_GEN":                    1616,
		"SEED_ECB":                        1617,
		"SEED_CBC":                        1618,
		"SEED_MAC":                        1619,
		"SEED_MAC_GENERAL":                1620,
		"SEED_CBC_PAD":                    1621,
		"SEED_ECB_ENCRYPT_DATA":           1622,
		"SEED_CBC_ENCRYPT_DATA":           1623,
		"SKIPJACK_KEY_GEN":                4096,
		"SKIPJACK_ECB64":                  4097,
		"SKIPJACK_CBC64":                  4098,
		"SKIPJACK_OFB64":                  4099,
		"SKIPJACK_CFB64":                  4100,
		"SKIPJACK_CFB32":                  4101,
		"SKIPJACK_CFB16":                  4102,
		"SKIPJACK_CFB8":                   4103,
		"SKIPJACK_WRAP":                   4104,
		"SKIPJACK_PRIVATE_WRAP":           4105,
		"SKIPJACK_RELAYX":                 4106,
		"KEA_KEY_PAIR_GEN":                4112,
		"KEA_KEY_DERIVE":                  4113,
		"KEA_DERIVE":                      4114,
		"FORTEZZA_TIMESTAMP":              4128,
		"BATON_KEY_GEN":                   4144,
		"BATON_ECB128":                    4145,
		"BATON_ECB96":                     4146,
		"BATON_CBC128":                    4147,
		"BATON_COUNTER":                   4148,
		"BATON_SHUFFLE":                   4149,
		"BATON_WRAP":                      4150,
		"EC_KEY_PAIR_GEN":                 4160,
		"ECDSA":                           4161,
		"ECDSA_SHA1":                      4162,
		"ECDSA_SHA224":                    4163,
		"ECDSA_SHA256":                    4164,
		"ECDSA_SHA384":                    4165,
		"ECDSA_SHA512":                    4166,
		"EC_KEY_PAIR_GEN_W_EXTRA_BITS":    5131,
		"ECDH1_DERIVE":                    4176,
		"ECDH1_COFACTOR_DERIVE":           4177,
		"ECMQV_DERIVE":                    4178,
		"ECDH_AES_KEY_WRAP":               4179,
		"RSA_AES_KEY_WRAP":                4180,
		"JUNIPER_KEY_GEN":                 4192,
		"JUNIPER_ECB128":                  4193,
		"JUNIPER_CBC128":                  4194,
		"JUNIPER_COUNTER":                 4195,
		"JUNIPER_SHUFFLE":                 4196,
		"JUNIPER_WRAP":                    4197,
		"FASTHASH":                        4208,
		"AES_XTS":                         4209,
		"AES_XTS_KEY_GEN":                 4210,
		"AES_KEY_GEN":                     4224,
		"AES_ECB":                         4225,
		"AES_CBC":                         4226,
		"AES_MAC":                         4227,
		"AES_MAC_GENERAL":                 4228,
		"AES_CBC_PAD":                     4229,
		"AES_CTR":                         4230,
		"AES_GCM":                         4231,
		"AES_CCM":                         4232,
		"AES_CTS":                         4233,
		"AES_CMAC":                        4234,
		"AES_CMAC_GENERAL":                4235,
		"AES_XCBC_MAC":                    4236,
		"AES_XCBC_MAC_96":                 4237,
		"AES_GMAC":                        4238,
		"BLOWFISH_KEY_GEN":                4240,
		"BLOWFISH_CBC":                    4241,
		"TWOFISH_KEY_GEN":                 4242,
		"TWOFISH_CBC":                     4243,
		"BLOWFISH_CBC_PAD":                4244,
		"TWOFISH_CBC_PAD":                 4245,
		"DES_ECB_ENCRYPT_DATA":            4352,
		"DES_CBC_ENCRYPT_DATA":            4353,
		"DES3_ECB_ENCRYPT_DATA":           4354,
		"DES3_CBC_ENCRYPT_DATA":           4355,
		"AES_ECB_ENCRYPT_DATA":            4356,
		"AES_CBC_ENCRYPT_DATA":            4357,
		"GOSTR3410_KEY_PAIR_GEN":          4608,
		"GOSTR3410":                       4609,
		"GOSTR3410_WITH_GOSTR3411":        4610,
		"GOSTR3410_KEY_WRAP":              4611,
		"GOSTR3410_DERIVE":                4612,
		"GOSTR3411":                       4624,
		"GOSTR3411_HMAC":                  4625,
		"GOST28147_KEY_GEN":               4640,
		"GOST28147_ECB":                   4641,
		"GOST28147":                       4642,
		"GOST28147_MAC":                   4643,
		"GOST28147_KEY_WRAP":              4644,
		"CHACHA20_KEY_GEN":                4645,
		"CHACHA20":                        4646,
		"POLY1305_KEY_GEN":                4647,
		"POLY1305":                        4648,
		"DSA_PARAMETER_GEN":               8192,
		"DH_PKCS_PARAMETER_GEN":           8193,
		"X9_42_DH_PARAMETER_GEN":          8194,
		"DSA_PROBABILISTIC_PARAMETER_GEN": 8195,
		"DSA_SHAWE_TAYLOR_PARAMETER_GEN":  8196,
		"DSA_FIPS_G_GEN":                  8197,
		"AES_OFB":                         8452,
		"AES_CFB64":                       8453,
		"AES_CFB8":                        8454,
		"AES_CFB128":                      8455,
		"AES_CFB1":                        8456,
		"AES_KEY_WRAP":                    8457,
		"AES_KEY_WRAP_PAD":                8458,
		"AES_KEY_WRAP_KWP":                8459,
		"RSA_PKCS_TPM_1_1":                16385,
		"RSA_PKCS_OAEP_TPM_1_1":           16386,
		"SHA_1_KEY_GEN":                   16387,
		"SHA224_KEY_GEN":                  16388,
		"SHA256_KEY_GEN":                  16389,
		"SHA384_KEY_GEN":                  16390,
		"SHA512_KEY_GEN":                  16391,
		"SHA512_224_KEY_GEN":              16392,
		"SHA512_256_KEY_GEN":              16393,
		"SHA512_T_KEY_GEN":                16394,
		"NULL":                            16395,
		"BLAKE2B_160":                     16396,
		"BLAKE2B_160_HMAC":                16397,
		"BLAKE2B_160_HMAC_GENERAL":        16398,
		"BLAKE2B_160_KEY_DERIVE":          16399,
		"BLAKE2B_160_KEY_GEN":             16400,
		"BLAKE2B_256":                     16401,
		"BLAKE2B_256_HMAC":                16402,
		"BLAKE2B_256_HMAC_GENERAL":        16403,
		"BLAKE2B_256_KEY_DERIVE":          16404,
		"BLAKE2B_256_KEY_GEN":             16405,
		"BLAKE2B_384":                     16406,
		"BLAKE2B_384_HMAC":                16407,
		"BLAKE2B_384_HMAC_GENERAL":        16408,
		"BLAKE2B_384_KEY_DERIVE":          16409,
		"BLAKE2B_384_KEY_GEN":             16410,
		"BLAKE2B_512":                     16411,
		"BLAKE2B_512_HMAC":                16412,
		"BLAKE2B_512_HMAC_GENERAL":        16413,
		"BLAKE2B_512_KEY_DERIVE":          16414,
		"BLAKE2B_512_KEY_GEN":             16415,
		"SALSA20":                         16416,
		"CHACHA20_POLY1305":               16417,
		"SALSA20_POLY1305":                16418,
		"X3DH_INITIALIZE":                 16419,
		"X3DH_RESPOND":                    16420,
		"X2RATCHET_INITIALIZE":            16421,
		"X2RATCHET_RESPOND":               16422,
		"X2RATCHET_ENCRYPT":               16423,
		"X2RATCHET_DECRYPT":               16424,
		"XEDDSA":                          16425,
		"HKDF_DERIVE":                     16426,
		"HKDF_DATA":                       16427,
		"HKDF_KEY_GEN":                    16428,
		"SALSA20_KEY_GEN":                 16429,
		"ECDSA_SHA3_224":                  4167,
		"ECDSA_SHA3_256":                  4168,
		"ECDSA_SHA3_384":                  4169,
		"ECDSA_SHA3_512":                  4170,
		"EC_EDWARDS_KEY_PAIR_GEN":         4181,
		"EC_MONTGOMERY_KEY_PAIR_GEN":      4182,
		"EDDSA":                           4183,
		"SP800_108_COUNTER_KDF":           940,
		"SP800_108_FEEDBACK_KDF":          941,
		"SP800_108_DOUBLE_PIPELINE_KDF":   942,
	}
)

func (x MechanismType) Enum() *MechanismType {
	p := new(MechanismType)
	*p = x
	return p
}

func (x MechanismType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MechanismType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_pkcs11_proto_enumTypes[0].Descriptor()
}

func (MechanismType) Type() protoreflect.EnumType {
	return &file_pb_pkcs11_proto_enumTypes[0]
}

func (x MechanismType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MechanismType.Descriptor instead.
func (MechanismType) EnumDescriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{0}
}

type SessionState int32

const (
	SessionState_RO_PUBLIC_SESSION SessionState = 0
	SessionState_RO_USER_FUNCTIONS SessionState = 1
	SessionState_RW_PUBLIC_SESSION SessionState = 2
	SessionState_RW_USER_FUNCTIONS SessionState = 3
	SessionState_RW_SO_FUNCTIONS   SessionState = 4
)

// Enum value maps for SessionState.
var (
	SessionState_name = map[int32]string{
		0: "RO_PUBLIC_SESSION",
		1: "RO_USER_FUNCTIONS",
		2: "RW_PUBLIC_SESSION",
		3: "RW_USER_FUNCTIONS",
		4: "RW_SO_FUNCTIONS",
	}
	SessionState_value = map[string]int32{
		"RO_PUBLIC_SESSION": 0,
		"RO_USER_FUNCTIONS": 1,
		"RW_PUBLIC_SESSION": 2,
		"RW_USER_FUNCTIONS": 3,
		"RW_SO_FUNCTIONS":   4,
	}
)

func (x SessionState) Enum() *SessionState {
	p := new(SessionState)
	*p = x
	return p
}

func (x SessionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionState) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_pkcs11_proto_enumTypes[1].Descriptor()
}

func (SessionState) Type() protoreflect.EnumType {
	return &file_pb_pkcs11_proto_enumTypes[1]
}

func (x SessionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionState.Descriptor instead.
func (SessionState) EnumDescriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{1}
}

type UserType int32

const (
	UserType_SO   UserType = 0
	UserType_USER UserType = 1
)

// Enum value maps for UserType.
var (
	UserType_name = map[int32]string{
		0: "SO",
		1: "USER",
	}
	UserType_value = map[string]int32{
		"SO":   0,
		"USER": 1,
	}
)

func (x UserType) Enum() *UserType {
	p := new(UserType)
	*p = x
	return p
}

func (x UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_pkcs11_proto_enumTypes[2].Descriptor()
}

func (UserType) Type() protoreflect.EnumType {
	return &file_pb_pkcs11_proto_enumTypes[2]
}

func (x UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserType.Descriptor instead.
func (UserType) EnumDescriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{2}
}

type ReturnValue int32

const (
	ReturnValue_OK                               ReturnValue = 0
	ReturnValue_CANCEL                           ReturnValue = 1
	ReturnValue_HOST_MEMORY                      ReturnValue = 2
	ReturnValue_SLOT_ID_INVALID                  ReturnValue = 3
	ReturnValue_GENERAL_ERROR                    ReturnValue = 5
	ReturnValue_FUNCTION_FAILED                  ReturnValue = 6
	ReturnValue_ARGUMENTS_BAD                    ReturnValue = 7
	ReturnValue_NO_EVENT                         ReturnValue = 8
	ReturnValue_NEED_TO_CREATE_THREADS           ReturnValue = 9
	ReturnValue_CANT_LOCK                        ReturnValue = 10
	ReturnValue_ATTRIBUTE_READ_ONLY              ReturnValue = 16
	ReturnValue_ATTRIBUTE_SENSITIVE              ReturnValue = 17
	ReturnValue_ATTRIBUTE_TYPE_INVALID           ReturnValue = 18
	ReturnValue_ATTRIBUTE_VALUE_INVALID          ReturnValue = 19
	ReturnValue_ACTION_PROHIBITED                ReturnValue = 27
	ReturnValue_DATA_INVALID                     ReturnValue = 32
	ReturnValue_DATA_LEN_RANGE                   ReturnValue = 33
	ReturnValue_DEVICE_ERROR                     ReturnValue = 48
	ReturnValue_DEVICE_MEMORY                    ReturnValue = 49
	ReturnValue_DEVICE_REMOVED                   ReturnValue = 50
	ReturnValue_ENCRYPTED_DATA_INVALID           ReturnValue = 64
	ReturnValue_ENCRYPTED_DATA_LEN_RANGE         ReturnValue = 65
	ReturnValue_AEAD_DECRYPT_FAILED              ReturnValue = 66
	ReturnValue_FUNCTION_CANCELED                ReturnValue = 80
	ReturnValue_FUNCTION_NOT_PARALLEL            ReturnValue = 81
	ReturnValue_FUNCTION_NOT_SUPPORTED           ReturnValue = 84
	ReturnValue_KEY_HANDLE_INVALID               ReturnValue = 96
	ReturnValue_KEY_SIZE_RANGE                   ReturnValue = 98
	ReturnValue_KEY_TYPE_INCONSISTENT            ReturnValue = 99
	ReturnValue_KEY_NOT_NEEDED                   ReturnValue = 100
	ReturnValue_KEY_CHANGED                      ReturnValue = 101
	ReturnValue_KEY_NEEDED                       ReturnValue = 102
	ReturnValue_KEY_INDIGESTIBLE                 ReturnValue = 103
	ReturnValue_KEY_FUNCTION_NOT_PERMITTED       ReturnValue = 104
	ReturnValue_KEY_NOT_WRAPPABLE                ReturnValue = 105
	ReturnValue_KEY_UNEXTRACTABLE                ReturnValue = 106
	ReturnValue_MECHANISM_INVALID                ReturnValue = 112
	ReturnValue_MECHANISM_PARAM_INVALID          ReturnValue = 113
	ReturnValue_OBJECT_HANDLE_INVALID            ReturnValue = 130
	ReturnValue_OPERATION_ACTIVE                 ReturnValue = 144
	ReturnValue_OPERATION_NOT_INITIALIZED        ReturnValue = 145
	ReturnValue_PIN_INCORRECT                    ReturnValue = 160
	ReturnValue_PIN_INVALID                      ReturnValue = 161
	ReturnValue_PIN_LEN_RANGE                    ReturnValue = 162
	ReturnValue_PIN_EXPIRED                      ReturnValue = 163
	ReturnValue_PIN_LOCKED                       ReturnValue = 164
	ReturnValue_SESSION_CLOSED                   ReturnValue = 176
	ReturnValue_SESSION_COUNT                    ReturnValue = 177
	ReturnValue_SESSION_HANDLE_INVALID           ReturnValue = 179
	ReturnValue_SESSION_PARALLEL_NOT_SUPPORTED   ReturnValue = 180
	ReturnValue_SESSION_READ_ONLY                ReturnValue = 181
	ReturnValue_SESSION_EXISTS                   ReturnValue = 182
	ReturnValue_SESSION_READ_ONLY_EXISTS         ReturnValue = 183
	ReturnValue_SESSION_READ_WRITE_SO_EXISTS     ReturnValue = 184
	ReturnValue_SIGNATURE_INVALID                ReturnValue = 192
	ReturnValue_SIGNATURE_LEN_RANGE              ReturnValue = 193
	ReturnValue_TEMPLATE_INCOMPLETE              ReturnValue = 208
	ReturnValue_TEMPLATE_INCONSISTENT            ReturnValue = 209
	ReturnValue_TOKEN_NOT_PRESENT                ReturnValue = 224
	ReturnValue_TOKEN_NOT_RECOGNIZED             ReturnValue = 225
	ReturnValue_TOKEN_WRITE_PROTECTED            ReturnValue = 226
	ReturnValue_UNWRAPPING_KEY_HANDLE_INVALID    ReturnValue = 240
	ReturnValue_UNWRAPPING_KEY_SIZE_RANGE        ReturnValue = 241
	ReturnValue_UNWRAPPING_KEY_TYPE_INCONSISTENT ReturnValue = 242
	ReturnValue_USER_ALREADY_LOGGED_IN           ReturnValue = 256
	ReturnValue_USER_NOT_LOGGED_IN               ReturnValue = 257
	ReturnValue_USER_PIN_NOT_INITIALIZED         ReturnValue = 258
	ReturnValue_USER_TYPE_INVALID                ReturnValue = 259
	ReturnValue_USER_ANOTHER_ALREADY_LOGGED_IN   ReturnValue = 260
	ReturnValue_USER_TOO_MANY_TYPES              ReturnValue = 261
	ReturnValue_WRAPPED_KEY_INVALID              ReturnValue = 272
	ReturnValue_WRAPPED_KEY_LEN_RANGE            ReturnValue = 274
	ReturnValue_WRAPPING_KEY_HANDLE_INVALID      ReturnValue = 275
	ReturnValue_WRAPPING_KEY_SIZE_RANGE          ReturnValue = 276
	ReturnValue_WRAPPING_KEY_TYPE_INCONSISTENT   ReturnValue = 277
	ReturnValue_RANDOM_SEED_NOT_SUPPORTED        ReturnValue = 288
	ReturnValue_RANDOM_NO_RNG                    ReturnValue = 289
	ReturnValue_DOMAIN_PARAMS_INVALID            ReturnValue = 304
	ReturnValue_CURVE_NOT_SUPPORTED              ReturnValue = 320
	ReturnValue_BUFFER_TOO_SMALL                 ReturnValue = 336
	ReturnValue_SAVED_STATE_INVALID              ReturnValue = 352
	ReturnValue_INFORMATION_SENSITIVE            ReturnValue = 368
	ReturnValue_STATE_UNSAVEABLE                 ReturnValue = 384
	ReturnValue_CRYPTOKI_NOT_INITIALIZED         ReturnValue = 400
	ReturnValue_CRYPTOKI_ALREADY_INITIALIZED     ReturnValue = 401
	ReturnValue_MUTEX_BAD                        ReturnValue = 416
	ReturnValue_MUTEX_NOT_LOCKED                 ReturnValue = 417
	ReturnValue_NEW_PIN_MODE                     ReturnValue = 432
	ReturnValue_NEXT_OTP                         ReturnValue = 433
	ReturnValue_EXCEEDED_MAX_ITERATIONS          ReturnValue = 437
	ReturnValue_FIPS_SELF_TEST_FAILED            ReturnValue = 438
	ReturnValue_LIBRARY_LOAD_FAILED              ReturnValue = 439
	ReturnValue_PIN_TOO_WEAK                     ReturnValue = 440
	ReturnValue_PUBLIC_KEY_INVALID               ReturnValue = 441
	ReturnValue_FUNCTION_REJECTED                ReturnValue = 512
	ReturnValue_TOKEN_RESOURCE_EXCEEDED          ReturnValue = 513
	ReturnValue_OPERATION_CANCEL_FAILED          ReturnValue = 514
)

// Enum value maps for ReturnValue.
var (
	ReturnValue_name = map[int32]string{
		0:   "OK",
		1:   "CANCEL",
		2:   "HOST_MEMORY",
		3:   "SLOT_ID_INVALID",
		5:   "GENERAL_ERROR",
		6:   "FUNCTION_FAILED",
		7:   "ARGUMENTS_BAD",
		8:   "NO_EVENT",
		9:   "NEED_TO_CREATE_THREADS",
		10:  "CANT_LOCK",
		16:  "ATTRIBUTE_READ_ONLY",
		17:  "ATTRIBUTE_SENSITIVE",
		18:  "ATTRIBUTE_TYPE_INVALID",
		19:  "ATTRIBUTE_VALUE_INVALID",
		27:  "ACTION_PROHIBITED",
		32:  "DATA_INVALID",
		33:  "DATA_LEN_RANGE",
		48:  "DEVICE_ERROR",
		49:  "DEVICE_MEMORY",
		50:  "DEVICE_REMOVED",
		64:  "ENCRYPTED_DATA_INVALID",
		65:  "ENCRYPTED_DATA_LEN_RANGE",
		66:  "AEAD_DECRYPT_FAILED",
		80:  "FUNCTION_CANCELED",
		81:  "FUNCTION_NOT_PARALLEL",
		84:  "FUNCTION_NOT_SUPPORTED",
		96:  "KEY_HANDLE_INVALID",
		98:  "KEY_SIZE_RANGE",
		99:  "KEY_TYPE_INCONSISTENT",
		100: "KEY_NOT_NEEDED",
		101: "KEY_CHANGED",
		102: "KEY_NEEDED",
		103: "KEY_INDIGESTIBLE",
		104: "KEY_FUNCTION_NOT_PERMITTED",
		105: "KEY_NOT_WRAPPABLE",
		106: "KEY_UNEXTRACTABLE",
		112: "MECHANISM_INVALID",
		113: "MECHANISM_PARAM_INVALID",
		130: "OBJECT_HANDLE_INVALID",
		144: "OPERATION_ACTIVE",
		145: "OPERATION_NOT_INITIALIZED",
		160: "PIN_INCORRECT",
		161: "PIN_INVALID",
		162: "PIN_LEN_RANGE",
		163: "PIN_EXPIRED",
		164: "PIN_LOCKED",
		176: "SESSION_CLOSED",
		177: "SESSION_COUNT",
		179: "SESSION_HANDLE_INVALID",
		180: "SESSION_PARALLEL_NOT_SUPPORTED",
		181: "SESSION_READ_ONLY",
		182: "SESSION_EXISTS",
		183: "SESSION_READ_ONLY_EXISTS",
		184: "SESSION_READ_WRITE_SO_EXISTS",
		192: "SIGNATURE_INVALID",
		193: "SIGNATURE_LEN_RANGE",
		208: "TEMPLATE_INCOMPLETE",
		209: "TEMPLATE_INCONSISTENT",
		224: "TOKEN_NOT_PRESENT",
		225: "TOKEN_NOT_RECOGNIZED",
		226: "TOKEN_WRITE_PROTECTED",
		240: "UNWRAPPING_KEY_HANDLE_INVALID",
		241: "UNWRAPPING_KEY_SIZE_RANGE",
		242: "UNWRAPPING_KEY_TYPE_INCONSISTENT",
		256: "USER_ALREADY_LOGGED_IN",
		257: "USER_NOT_LOGGED_IN",
		258: "USER_PIN_NOT_INITIALIZED",
		259: "USER_TYPE_INVALID",
		260: "USER_ANOTHER_ALREADY_LOGGED_IN",
		261: "USER_TOO_MANY_TYPES",
		272: "WRAPPED_KEY_INVALID",
		274: "WRAPPED_KEY_LEN_RANGE",
		275: "WRAPPING_KEY_HANDLE_INVALID",
		276: "WRAPPING_KEY_SIZE_RANGE",
		277: "WRAPPING_KEY_TYPE_INCONSISTENT",
		288: "RANDOM_SEED_NOT_SUPPORTED",
		289: "RANDOM_NO_RNG",
		304: "DOMAIN_PARAMS_INVALID",
		320: "CURVE_NOT_SUPPORTED",
		336: "BUFFER_TOO_SMALL",
		352: "SAVED_STATE_INVALID",
		368: "INFORMATION_SENSITIVE",
		384: "STATE_UNSAVEABLE",
		400: "CRYPTOKI_NOT_INITIALIZED",
		401: "CRYPTOKI_ALREADY_INITIALIZED",
		416: "MUTEX_BAD",
		417: "MUTEX_NOT_LOCKED",
		432: "NEW_PIN_MODE",
		433: "NEXT_OTP",
		437: "EXCEEDED_MAX_ITERATIONS",
		438: "FIPS_SELF_TEST_FAILED",
		439: "LIBRARY_LOAD_FAILED",
		440: "PIN_TOO_WEAK",
		441: "PUBLIC_KEY_INVALID",
		512: "FUNCTION_REJECTED",
		513: "TOKEN_RESOURCE_EXCEEDED",
		514: "OPERATION_CANCEL_FAILED",
	}
	ReturnValue_value = map[string]int32{
		"OK":                               0,
		"CANCEL":                           1,
		"HOST_MEMORY":                      2,
		"SLOT_ID_INVALID":                  3,
		"GENERAL_ERROR":                    5,
		"FUNCTION_FAILED":                  6,
		"ARGUMENTS_BAD":                    7,
		"NO_EVENT":                         8,
		"NEED_TO_CREATE_THREADS":           9,
		"CANT_LOCK":                        10,
		"ATTRIBUTE_READ_ONLY":              16,
		"ATTRIBUTE_SENSITIVE":              17,
		"ATTRIBUTE_TYPE_INVALID":           18,
		"ATTRIBUTE_VALUE_INVALID":          19,
		"ACTION_PROHIBITED":                27,
		"DATA_INVALID":                     32,
		"DATA_LEN_RANGE":                   33,
		"DEVICE_ERROR":                     48,
		"DEVICE_MEMORY":                    49,
		"DEVICE_REMOVED":                   50,
		"ENCRYPTED_DATA_INVALID":           64,
		"ENCRYPTED_DATA_LEN_RANGE":         65,
		"AEAD_DECRYPT_FAILED":              66,
		"FUNCTION_CANCELED":                80,
		"FUNCTION_NOT_PARALLEL":            81,
		"FUNCTION_NOT_SUPPORTED":           84,
		"KEY_HANDLE_INVALID":               96,
		"KEY_SIZE_RANGE":                   98,
		"KEY_TYPE_INCONSISTENT":            99,
		"KEY_NOT_NEEDED":                   100,
		"KEY_CHANGED":                      101,
		"KEY_NEEDED":                       102,
		"KEY_INDIGESTIBLE":                 103,
		"KEY_FUNCTION_NOT_PERMITTED":       104,
		"KEY_NOT_WRAPPABLE":                105,
		"KEY_UNEXTRACTABLE":                106,
		"MECHANISM_INVALID":                112,
		"MECHANISM_PARAM_INVALID":          113,
		"OBJECT_HANDLE_INVALID":            130,
		"OPERATION_ACTIVE":                 144,
		"OPERATION_NOT_INITIALIZED":        145,
		"PIN_INCORRECT":                    160,
		"PIN_INVALID":                      161,
		"PIN_LEN_RANGE":                    162,
		"PIN_EXPIRED":                      163,
		"PIN_LOCKED":                       164,
		"SESSION_CLOSED":                   176,
		"SESSION_COUNT":                    177,
		"SESSION_HANDLE_INVALID":           179,
		"SESSION_PARALLEL_NOT_SUPPORTED":   180,
		"SESSION_READ_ONLY":                181,
		"SESSION_EXISTS":                   182,
		"SESSION_READ_ONLY_EXISTS":         183,
		"SESSION_READ_WRITE_SO_EXISTS":     184,
		"SIGNATURE_INVALID":                192,
		"SIGNATURE_LEN_RANGE":              193,
		"TEMPLATE_INCOMPLETE":              208,
		"TEMPLATE_INCONSISTENT":            209,
		"TOKEN_NOT_PRESENT":                224,
		"TOKEN_NOT_RECOGNIZED":             225,
		"TOKEN_WRITE_PROTECTED":            226,
		"UNWRAPPING_KEY_HANDLE_INVALID":    240,
		"UNWRAPPING_KEY_SIZE_RANGE":        241,
		"UNWRAPPING_KEY_TYPE_INCONSISTENT": 242,
		"USER_ALREADY_LOGGED_IN":           256,
		"USER_NOT_LOGGED_IN":               257,
		"USER_PIN_NOT_INITIALIZED":         258,
		"USER_TYPE_INVALID":                259,
		"USER_ANOTHER_ALREADY_LOGGED_IN":   260,
		"USER_TOO_MANY_TYPES":              261,
		"WRAPPED_KEY_INVALID":              272,
		"WRAPPED_KEY_LEN_RANGE":            274,
		"WRAPPING_KEY_HANDLE_INVALID":      275,
		"WRAPPING_KEY_SIZE_RANGE":          276,
		"WRAPPING_KEY_TYPE_INCONSISTENT":   277,
		"RANDOM_SEED_NOT_SUPPORTED":        288,
		"RANDOM_NO_RNG":                    289,
		"DOMAIN_PARAMS_INVALID":            304,
		"CURVE_NOT_SUPPORTED":              320,
		"BUFFER_TOO_SMALL":                 336,
		"SAVED_STATE_INVALID":              352,
		"INFORMATION_SENSITIVE":            368,
		"STATE_UNSAVEABLE":                 384,
		"CRYPTOKI_NOT_INITIALIZED":         400,
		"CRYPTOKI_ALREADY_INITIALIZED":     401,
		"MUTEX_BAD":                        416,
		"MUTEX_NOT_LOCKED":                 417,
		"NEW_PIN_MODE":                     432,
		"NEXT_OTP":                         433,
		"EXCEEDED_MAX_ITERATIONS":          437,
		"FIPS_SELF_TEST_FAILED":            438,
		"LIBRARY_LOAD_FAILED":              439,
		"PIN_TOO_WEAK":                     440,
		"PUBLIC_KEY_INVALID":               441,
		"FUNCTION_REJECTED":                512,
		"TOKEN_RESOURCE_EXCEEDED":          513,
		"OPERATION_CANCEL_FAILED":          514,
	}
)

func (x ReturnValue) Enum() *ReturnValue {
	p := new(ReturnValue)
	*p = x
	return p
}

func (x ReturnValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReturnValue) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_pkcs11_proto_enumTypes[3].Descriptor()
}

func (ReturnValue) Type() protoreflect.EnumType {
	return &file_pb_pkcs11_proto_enumTypes[3]
}

func (x ReturnValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReturnValue.Descriptor instead.
func (ReturnValue) EnumDescriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{3}
}

type InitializeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{0}
}

type InitializeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitializeResponse) Reset() {
	*x = InitializeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeResponse) ProtoMessage() {}

func (x *InitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeResponse.ProtoReflect.Descriptor instead.
func (*InitializeResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{1}
}

type FinalizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinalizeRequest) Reset() {
	*x = FinalizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeRequest) ProtoMessage() {}

func (x *FinalizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeRequest.ProtoReflect.Descriptor instead.
func (*FinalizeRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{2}
}

type FinalizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinalizeResponse) Reset() {
	*x = FinalizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeResponse) ProtoMessage() {}

func (x *FinalizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeResponse.ProtoReflect.Descriptor instead.
func (*FinalizeResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{3}
}

type GetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInfoRequest) Reset() {
	*x = GetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRequest) ProtoMessage() {}

func (x *GetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRequest.ProtoReflect.Descriptor instead.
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{4}
}

type GetInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInfoResponse) Reset() {
	*x = GetInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoResponse) ProtoMessage() {}

func (x *GetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoResponse.ProtoReflect.Descriptor instead.
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{5}
}

type GetFunctionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFunctionListRequest) Reset() {
	*x = GetFunctionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionListRequest) ProtoMessage() {}

func (x *GetFunctionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionListRequest.ProtoReflect.Descriptor instead.
func (*GetFunctionListRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{6}
}

type GetFunctionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFunctionListResponse) Reset() {
	*x = GetFunctionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionListResponse) ProtoMessage() {}

func (x *GetFunctionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionListResponse.ProtoReflect.Descriptor instead.
func (*GetFunctionListResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{7}
}

type GetInterfaceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInterfaceListRequest) Reset() {
	*x = GetInterfaceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInterfaceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterfaceListRequest) ProtoMessage() {}

func (x *GetInterfaceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterfaceListRequest.ProtoReflect.Descriptor instead.
func (*GetInterfaceListRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{8}
}

type GetInterfaceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInterfaceListResponse) Reset() {
	*x = GetInterfaceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInterfaceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterfaceListResponse) ProtoMessage() {}

func (x *GetInterfaceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterfaceListResponse.ProtoReflect.Descriptor instead.
func (*GetInterfaceListResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{9}
}

type GetInterfaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInterfaceRequest) Reset() {
	*x = GetInterfaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterfaceRequest) ProtoMessage() {}

func (x *GetInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterfaceRequest.ProtoReflect.Descriptor instead.
func (*GetInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{10}
}

type GetInterfaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInterfaceResponse) Reset() {
	*x = GetInterfaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterfaceResponse) ProtoMessage() {}

func (x *GetInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterfaceResponse.ProtoReflect.Descriptor instead.
func (*GetInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{11}
}

type GetSlotListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSlotListRequest) Reset() {
	*x = GetSlotListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotListRequest) ProtoMessage() {}

func (x *GetSlotListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotListRequest.ProtoReflect.Descriptor instead.
func (*GetSlotListRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{12}
}

type GetSlotListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSlotListResponse) Reset() {
	*x = GetSlotListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotListResponse) ProtoMessage() {}

func (x *GetSlotListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotListResponse.ProtoReflect.Descriptor instead.
func (*GetSlotListResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{13}
}

type GetSlotInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSlotInfoRequest) Reset() {
	*x = GetSlotInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotInfoRequest) ProtoMessage() {}

func (x *GetSlotInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotInfoRequest.ProtoReflect.Descriptor instead.
func (*GetSlotInfoRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{14}
}

type GetSlotInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSlotInfoResponse) Reset() {
	*x = GetSlotInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotInfoResponse) ProtoMessage() {}

func (x *GetSlotInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotInfoResponse.ProtoReflect.Descriptor instead.
func (*GetSlotInfoResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{15}
}

type GetTokenInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTokenInfoRequest) Reset() {
	*x = GetTokenInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenInfoRequest) ProtoMessage() {}

func (x *GetTokenInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenInfoRequest.ProtoReflect.Descriptor instead.
func (*GetTokenInfoRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{16}
}

type GetTokenInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTokenInfoResponse) Reset() {
	*x = GetTokenInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenInfoResponse) ProtoMessage() {}

func (x *GetTokenInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenInfoResponse.ProtoReflect.Descriptor instead.
func (*GetTokenInfoResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{17}
}

type WaitForSlotEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WaitForSlotEventRequest) Reset() {
	*x = WaitForSlotEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForSlotEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForSlotEventRequest) ProtoMessage() {}

func (x *WaitForSlotEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForSlotEventRequest.ProtoReflect.Descriptor instead.
func (*WaitForSlotEventRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{18}
}

type WaitForSlotEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WaitForSlotEventResponse) Reset() {
	*x = WaitForSlotEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForSlotEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForSlotEventResponse) ProtoMessage() {}

func (x *WaitForSlotEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForSlotEventResponse.ProtoReflect.Descriptor instead.
func (*WaitForSlotEventResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{19}
}

type GetMechanismListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMechanismListRequest) Reset() {
	*x = GetMechanismListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMechanismListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMechanismListRequest) ProtoMessage() {}

func (x *GetMechanismListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMechanismListRequest.ProtoReflect.Descriptor instead.
func (*GetMechanismListRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{20}
}

type GetMechanismListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMechanismListResponse) Reset() {
	*x = GetMechanismListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMechanismListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMechanismListResponse) ProtoMessage() {}

func (x *GetMechanismListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMechanismListResponse.ProtoReflect.Descriptor instead.
func (*GetMechanismListResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{21}
}

type GetMechanismInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMechanismInfoRequest) Reset() {
	*x = GetMechanismInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMechanismInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMechanismInfoRequest) ProtoMessage() {}

func (x *GetMechanismInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMechanismInfoRequest.ProtoReflect.Descriptor instead.
func (*GetMechanismInfoRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{22}
}

type GetMechanismInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMechanismInfoResponse) Reset() {
	*x = GetMechanismInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMechanismInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMechanismInfoResponse) ProtoMessage() {}

func (x *GetMechanismInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMechanismInfoResponse.ProtoReflect.Descriptor instead.
func (*GetMechanismInfoResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{23}
}

type InitTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitTokenRequest) Reset() {
	*x = InitTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitTokenRequest) ProtoMessage() {}

func (x *InitTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitTokenRequest.ProtoReflect.Descriptor instead.
func (*InitTokenRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{24}
}

type InitTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitTokenResponse) Reset() {
	*x = InitTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitTokenResponse) ProtoMessage() {}

func (x *InitTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitTokenResponse.ProtoReflect.Descriptor instead.
func (*InitTokenResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{25}
}

type InitPINRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitPINRequest) Reset() {
	*x = InitPINRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitPINRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitPINRequest) ProtoMessage() {}

func (x *InitPINRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitPINRequest.ProtoReflect.Descriptor instead.
func (*InitPINRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{26}
}

type InitPINResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitPINResponse) Reset() {
	*x = InitPINResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitPINResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitPINResponse) ProtoMessage() {}

func (x *InitPINResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitPINResponse.ProtoReflect.Descriptor instead.
func (*InitPINResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{27}
}

type SetPINRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPINRequest) Reset() {
	*x = SetPINRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPINRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPINRequest) ProtoMessage() {}

func (x *SetPINRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPINRequest.ProtoReflect.Descriptor instead.
func (*SetPINRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{28}
}

type SetPINResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPINResponse) Reset() {
	*x = SetPINResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPINResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPINResponse) ProtoMessage() {}

func (x *SetPINResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPINResponse.ProtoReflect.Descriptor instead.
func (*SetPINResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{29}
}

type OpenSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId uint64 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	Flags  uint64 `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *OpenSessionRequest) Reset() {
	*x = OpenSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionRequest) ProtoMessage() {}

func (x *OpenSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionRequest.ProtoReflect.Descriptor instead.
func (*OpenSessionRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{30}
}

func (x *OpenSessionRequest) GetSlotId() uint64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *OpenSessionRequest) GetFlags() uint64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type OpenSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue   ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
	SessionHandle uint64      `protobuf:"varint,2,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
}

func (x *OpenSessionResponse) Reset() {
	*x = OpenSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionResponse) ProtoMessage() {}

func (x *OpenSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionResponse.ProtoReflect.Descriptor instead.
func (*OpenSessionResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{31}
}

func (x *OpenSessionResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

func (x *OpenSessionResponse) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

type CloseSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64 `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
}

func (x *CloseSessionRequest) Reset() {
	*x = CloseSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionRequest) ProtoMessage() {}

func (x *CloseSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionRequest.ProtoReflect.Descriptor instead.
func (*CloseSessionRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{32}
}

func (x *CloseSessionRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

type CloseSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
}

func (x *CloseSessionResponse) Reset() {
	*x = CloseSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResponse) ProtoMessage() {}

func (x *CloseSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionResponse.ProtoReflect.Descriptor instead.
func (*CloseSessionResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{33}
}

func (x *CloseSessionResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

type CloseAllSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId uint64 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
}

func (x *CloseAllSessionsRequest) Reset() {
	*x = CloseAllSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseAllSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseAllSessionsRequest) ProtoMessage() {}

func (x *CloseAllSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseAllSessionsRequest.ProtoReflect.Descriptor instead.
func (*CloseAllSessionsRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{34}
}

func (x *CloseAllSessionsRequest) GetSlotId() uint64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type CloseAllSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
}

func (x *CloseAllSessionsResponse) Reset() {
	*x = CloseAllSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseAllSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseAllSessionsResponse) ProtoMessage() {}

func (x *CloseAllSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseAllSessionsResponse.ProtoReflect.Descriptor instead.
func (*CloseAllSessionsResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{35}
}

func (x *CloseAllSessionsResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

type GetSessionInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64 `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
}

func (x *GetSessionInfoRequest) Reset() {
	*x = GetSessionInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionInfoRequest) ProtoMessage() {}

func (x *GetSessionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionInfoRequest.ProtoReflect.Descriptor instead.
func (*GetSessionInfoRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{36}
}

func (x *GetSessionInfoRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

type GetSessionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue         `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
	Data        *GetSessionInfoData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSessionInfoResponse) Reset() {
	*x = GetSessionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionInfoResponse) ProtoMessage() {}

func (x *GetSessionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionInfoResponse.ProtoReflect.Descriptor instead.
func (*GetSessionInfoResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{37}
}

func (x *GetSessionInfoResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

func (x *GetSessionInfoResponse) GetData() *GetSessionInfoData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateObjectRequest) Reset() {
	*x = CreateObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectRequest) ProtoMessage() {}

func (x *CreateObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectRequest.ProtoReflect.Descriptor instead.
func (*CreateObjectRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{38}
}

type CreateObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateObjectResponse) Reset() {
	*x = CreateObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectResponse) ProtoMessage() {}

func (x *CreateObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectResponse.ProtoReflect.Descriptor instead.
func (*CreateObjectResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{39}
}

type CopyObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CopyObjectRequest) Reset() {
	*x = CopyObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyObjectRequest) ProtoMessage() {}

func (x *CopyObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyObjectRequest.ProtoReflect.Descriptor instead.
func (*CopyObjectRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{40}
}

type CopyObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CopyObjectResponse) Reset() {
	*x = CopyObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyObjectResponse) ProtoMessage() {}

func (x *CopyObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyObjectResponse.ProtoReflect.Descriptor instead.
func (*CopyObjectResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{41}
}

type DestroyObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DestroyObjectRequest) Reset() {
	*x = DestroyObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyObjectRequest) ProtoMessage() {}

func (x *DestroyObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyObjectRequest.ProtoReflect.Descriptor instead.
func (*DestroyObjectRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{42}
}

type DestroyObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DestroyObjectResponse) Reset() {
	*x = DestroyObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyObjectResponse) ProtoMessage() {}

func (x *DestroyObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyObjectResponse.ProtoReflect.Descriptor instead.
func (*DestroyObjectResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{43}
}

type GetObjectSizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetObjectSizeRequest) Reset() {
	*x = GetObjectSizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectSizeRequest) ProtoMessage() {}

func (x *GetObjectSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectSizeRequest.ProtoReflect.Descriptor instead.
func (*GetObjectSizeRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{44}
}

type GetObjectSizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetObjectSizeResponse) Reset() {
	*x = GetObjectSizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectSizeResponse) ProtoMessage() {}

func (x *GetObjectSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectSizeResponse.ProtoReflect.Descriptor instead.
func (*GetObjectSizeResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{45}
}

type GetAttributeValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAttributeValueRequest) Reset() {
	*x = GetAttributeValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttributeValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttributeValueRequest) ProtoMessage() {}

func (x *GetAttributeValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttributeValueRequest.ProtoReflect.Descriptor instead.
func (*GetAttributeValueRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{46}
}

type GetAttributeValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAttributeValueResponse) Reset() {
	*x = GetAttributeValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttributeValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttributeValueResponse) ProtoMessage() {}

func (x *GetAttributeValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttributeValueResponse.ProtoReflect.Descriptor instead.
func (*GetAttributeValueResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{47}
}

type SetAttributeValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetAttributeValueRequest) Reset() {
	*x = SetAttributeValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAttributeValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttributeValueRequest) ProtoMessage() {}

func (x *SetAttributeValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttributeValueRequest.ProtoReflect.Descriptor instead.
func (*SetAttributeValueRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{48}
}

type SetAttributeValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetAttributeValueResponse) Reset() {
	*x = SetAttributeValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAttributeValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttributeValueResponse) ProtoMessage() {}

func (x *SetAttributeValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttributeValueResponse.ProtoReflect.Descriptor instead.
func (*SetAttributeValueResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{49}
}

type FindObjectsInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindObjectsInitRequest) Reset() {
	*x = FindObjectsInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindObjectsInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindObjectsInitRequest) ProtoMessage() {}

func (x *FindObjectsInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindObjectsInitRequest.ProtoReflect.Descriptor instead.
func (*FindObjectsInitRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{50}
}

type FindObjectsInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindObjectsInitResponse) Reset() {
	*x = FindObjectsInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindObjectsInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindObjectsInitResponse) ProtoMessage() {}

func (x *FindObjectsInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindObjectsInitResponse.ProtoReflect.Descriptor instead.
func (*FindObjectsInitResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{51}
}

type FindObjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindObjectsRequest) Reset() {
	*x = FindObjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindObjectsRequest) ProtoMessage() {}

func (x *FindObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindObjectsRequest.ProtoReflect.Descriptor instead.
func (*FindObjectsRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{52}
}

type FindObjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindObjectsResponse) Reset() {
	*x = FindObjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindObjectsResponse) ProtoMessage() {}

func (x *FindObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindObjectsResponse.ProtoReflect.Descriptor instead.
func (*FindObjectsResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{53}
}

type FindObjectsFinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindObjectsFinalRequest) Reset() {
	*x = FindObjectsFinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindObjectsFinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindObjectsFinalRequest) ProtoMessage() {}

func (x *FindObjectsFinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindObjectsFinalRequest.ProtoReflect.Descriptor instead.
func (*FindObjectsFinalRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{54}
}

type FindObjectsFinalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindObjectsFinalResponse) Reset() {
	*x = FindObjectsFinalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindObjectsFinalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindObjectsFinalResponse) ProtoMessage() {}

func (x *FindObjectsFinalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindObjectsFinalResponse.ProtoReflect.Descriptor instead.
func (*FindObjectsFinalResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{55}
}

type EncryptInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptInitRequest) Reset() {
	*x = EncryptInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptInitRequest) ProtoMessage() {}

func (x *EncryptInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptInitRequest.ProtoReflect.Descriptor instead.
func (*EncryptInitRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{56}
}

type EncryptInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptInitResponse) Reset() {
	*x = EncryptInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptInitResponse) ProtoMessage() {}

func (x *EncryptInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptInitResponse.ProtoReflect.Descriptor instead.
func (*EncryptInitResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{57}
}

type EncryptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptRequest) Reset() {
	*x = EncryptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptRequest) ProtoMessage() {}

func (x *EncryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptRequest.ProtoReflect.Descriptor instead.
func (*EncryptRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{58}
}

type EncryptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptResponse) Reset() {
	*x = EncryptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptResponse) ProtoMessage() {}

func (x *EncryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptResponse.ProtoReflect.Descriptor instead.
func (*EncryptResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{59}
}

type EncryptUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptUpdateRequest) Reset() {
	*x = EncryptUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptUpdateRequest) ProtoMessage() {}

func (x *EncryptUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptUpdateRequest.ProtoReflect.Descriptor instead.
func (*EncryptUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{60}
}

type EncryptUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptUpdateResponse) Reset() {
	*x = EncryptUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptUpdateResponse) ProtoMessage() {}

func (x *EncryptUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptUpdateResponse.ProtoReflect.Descriptor instead.
func (*EncryptUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{61}
}

type EncryptFinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptFinalRequest) Reset() {
	*x = EncryptFinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptFinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptFinalRequest) ProtoMessage() {}

func (x *EncryptFinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptFinalRequest.ProtoReflect.Descriptor instead.
func (*EncryptFinalRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{62}
}

type EncryptFinalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptFinalResponse) Reset() {
	*x = EncryptFinalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptFinalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptFinalResponse) ProtoMessage() {}

func (x *EncryptFinalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptFinalResponse.ProtoReflect.Descriptor instead.
func (*EncryptFinalResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{63}
}

type EncryptMessageInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptMessageInitRequest) Reset() {
	*x = EncryptMessageInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptMessageInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptMessageInitRequest) ProtoMessage() {}

func (x *EncryptMessageInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptMessageInitRequest.ProtoReflect.Descriptor instead.
func (*EncryptMessageInitRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{64}
}

type EncryptMessageInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptMessageInitResponse) Reset() {
	*x = EncryptMessageInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptMessageInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptMessageInitResponse) ProtoMessage() {}

func (x *EncryptMessageInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptMessageInitResponse.ProtoReflect.Descriptor instead.
func (*EncryptMessageInitResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{65}
}

type EncryptMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptMessageRequest) Reset() {
	*x = EncryptMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptMessageRequest) ProtoMessage() {}

func (x *EncryptMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptMessageRequest.ProtoReflect.Descriptor instead.
func (*EncryptMessageRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{66}
}

type EncryptMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptMessageResponse) Reset() {
	*x = EncryptMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptMessageResponse) ProtoMessage() {}

func (x *EncryptMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptMessageResponse.ProtoReflect.Descriptor instead.
func (*EncryptMessageResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{67}
}

type EncryptMessageBeginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptMessageBeginRequest) Reset() {
	*x = EncryptMessageBeginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptMessageBeginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptMessageBeginRequest) ProtoMessage() {}

func (x *EncryptMessageBeginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptMessageBeginRequest.ProtoReflect.Descriptor instead.
func (*EncryptMessageBeginRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{68}
}

type EncryptMessageBeginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptMessageBeginResponse) Reset() {
	*x = EncryptMessageBeginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptMessageBeginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptMessageBeginResponse) ProtoMessage() {}

func (x *EncryptMessageBeginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptMessageBeginResponse.ProtoReflect.Descriptor instead.
func (*EncryptMessageBeginResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{69}
}

type EncryptMessageNextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptMessageNextRequest) Reset() {
	*x = EncryptMessageNextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptMessageNextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptMessageNextRequest) ProtoMessage() {}

func (x *EncryptMessageNextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptMessageNextRequest.ProtoReflect.Descriptor instead.
func (*EncryptMessageNextRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{70}
}

type EncryptMessageNextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptMessageNextResponse) Reset() {
	*x = EncryptMessageNextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptMessageNextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptMessageNextResponse) ProtoMessage() {}

func (x *EncryptMessageNextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptMessageNextResponse.ProtoReflect.Descriptor instead.
func (*EncryptMessageNextResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{71}
}

type EncryptMessageFinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptMessageFinalRequest) Reset() {
	*x = EncryptMessageFinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptMessageFinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptMessageFinalRequest) ProtoMessage() {}

func (x *EncryptMessageFinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptMessageFinalRequest.ProtoReflect.Descriptor instead.
func (*EncryptMessageFinalRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{72}
}

type EncryptMessageFinalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncryptMessageFinalResponse) Reset() {
	*x = EncryptMessageFinalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptMessageFinalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptMessageFinalResponse) ProtoMessage() {}

func (x *EncryptMessageFinalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptMessageFinalResponse.ProtoReflect.Descriptor instead.
func (*EncryptMessageFinalResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{73}
}

type DecryptInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptInitRequest) Reset() {
	*x = DecryptInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptInitRequest) ProtoMessage() {}

func (x *DecryptInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptInitRequest.ProtoReflect.Descriptor instead.
func (*DecryptInitRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{74}
}

type DecryptInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptInitResponse) Reset() {
	*x = DecryptInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptInitResponse) ProtoMessage() {}

func (x *DecryptInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptInitResponse.ProtoReflect.Descriptor instead.
func (*DecryptInitResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{75}
}

type DecryptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptRequest) Reset() {
	*x = DecryptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptRequest) ProtoMessage() {}

func (x *DecryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptRequest.ProtoReflect.Descriptor instead.
func (*DecryptRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{76}
}

type DecryptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptResponse) Reset() {
	*x = DecryptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptResponse) ProtoMessage() {}

func (x *DecryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptResponse.ProtoReflect.Descriptor instead.
func (*DecryptResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{77}
}

type DecryptUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptUpdateRequest) Reset() {
	*x = DecryptUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptUpdateRequest) ProtoMessage() {}

func (x *DecryptUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptUpdateRequest.ProtoReflect.Descriptor instead.
func (*DecryptUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{78}
}

type DecryptUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptUpdateResponse) Reset() {
	*x = DecryptUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptUpdateResponse) ProtoMessage() {}

func (x *DecryptUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptUpdateResponse.ProtoReflect.Descriptor instead.
func (*DecryptUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{79}
}

type DecryptFinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptFinalRequest) Reset() {
	*x = DecryptFinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptFinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptFinalRequest) ProtoMessage() {}

func (x *DecryptFinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptFinalRequest.ProtoReflect.Descriptor instead.
func (*DecryptFinalRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{80}
}

type DecryptFinalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptFinalResponse) Reset() {
	*x = DecryptFinalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptFinalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptFinalResponse) ProtoMessage() {}

func (x *DecryptFinalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptFinalResponse.ProtoReflect.Descriptor instead.
func (*DecryptFinalResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{81}
}

type DecryptMessageInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptMessageInitRequest) Reset() {
	*x = DecryptMessageInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptMessageInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptMessageInitRequest) ProtoMessage() {}

func (x *DecryptMessageInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptMessageInitRequest.ProtoReflect.Descriptor instead.
func (*DecryptMessageInitRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{82}
}

type DecryptMessageInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptMessageInitResponse) Reset() {
	*x = DecryptMessageInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptMessageInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptMessageInitResponse) ProtoMessage() {}

func (x *DecryptMessageInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptMessageInitResponse.ProtoReflect.Descriptor instead.
func (*DecryptMessageInitResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{83}
}

type DecryptMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptMessageRequest) Reset() {
	*x = DecryptMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptMessageRequest) ProtoMessage() {}

func (x *DecryptMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptMessageRequest.ProtoReflect.Descriptor instead.
func (*DecryptMessageRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{84}
}

type DecryptMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptMessageResponse) Reset() {
	*x = DecryptMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptMessageResponse) ProtoMessage() {}

func (x *DecryptMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptMessageResponse.ProtoReflect.Descriptor instead.
func (*DecryptMessageResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{85}
}

type DecryptMessageBeginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptMessageBeginRequest) Reset() {
	*x = DecryptMessageBeginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptMessageBeginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptMessageBeginRequest) ProtoMessage() {}

func (x *DecryptMessageBeginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptMessageBeginRequest.ProtoReflect.Descriptor instead.
func (*DecryptMessageBeginRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{86}
}

type DecryptMessageBeginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptMessageBeginResponse) Reset() {
	*x = DecryptMessageBeginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptMessageBeginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptMessageBeginResponse) ProtoMessage() {}

func (x *DecryptMessageBeginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptMessageBeginResponse.ProtoReflect.Descriptor instead.
func (*DecryptMessageBeginResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{87}
}

type DecryptMessageNextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptMessageNextRequest) Reset() {
	*x = DecryptMessageNextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptMessageNextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptMessageNextRequest) ProtoMessage() {}

func (x *DecryptMessageNextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptMessageNextRequest.ProtoReflect.Descriptor instead.
func (*DecryptMessageNextRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{88}
}

type DecryptMessageNextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptMessageNextResponse) Reset() {
	*x = DecryptMessageNextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptMessageNextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptMessageNextResponse) ProtoMessage() {}

func (x *DecryptMessageNextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptMessageNextResponse.ProtoReflect.Descriptor instead.
func (*DecryptMessageNextResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{89}
}

type MessageDecryptFinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageDecryptFinalRequest) Reset() {
	*x = MessageDecryptFinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDecryptFinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDecryptFinalRequest) ProtoMessage() {}

func (x *MessageDecryptFinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDecryptFinalRequest.ProtoReflect.Descriptor instead.
func (*MessageDecryptFinalRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{90}
}

type MessageDecryptFinalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageDecryptFinalResponse) Reset() {
	*x = MessageDecryptFinalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDecryptFinalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDecryptFinalResponse) ProtoMessage() {}

func (x *MessageDecryptFinalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDecryptFinalResponse.ProtoReflect.Descriptor instead.
func (*MessageDecryptFinalResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{91}
}

type Mechanism struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mechanism MechanismType `protobuf:"varint,1,opt,name=mechanism,proto3,enum=pb.MechanismType" json:"mechanism,omitempty"`
	Parameter []byte        `protobuf:"bytes,2,opt,name=parameter,proto3" json:"parameter,omitempty"`
}

func (x *Mechanism) Reset() {
	*x = Mechanism{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mechanism) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mechanism) ProtoMessage() {}

func (x *Mechanism) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mechanism.ProtoReflect.Descriptor instead.
func (*Mechanism) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{92}
}

func (x *Mechanism) GetMechanism() MechanismType {
	if x != nil {
		return x.Mechanism
	}
	return MechanismType_RSA_PKCS_KEY_PAIR_GEN
}

func (x *Mechanism) GetParameter() []byte {
	if x != nil {
		return x.Parameter
	}
	return nil
}

type DigestInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64     `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
	Mechanism     *Mechanism `protobuf:"bytes,2,opt,name=mechanism,proto3" json:"mechanism,omitempty"`
}

func (x *DigestInitRequest) Reset() {
	*x = DigestInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestInitRequest) ProtoMessage() {}

func (x *DigestInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestInitRequest.ProtoReflect.Descriptor instead.
func (*DigestInitRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{93}
}

func (x *DigestInitRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

func (x *DigestInitRequest) GetMechanism() *Mechanism {
	if x != nil {
		return x.Mechanism
	}
	return nil
}

type DigestInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
}

func (x *DigestInitResponse) Reset() {
	*x = DigestInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestInitResponse) ProtoMessage() {}

func (x *DigestInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestInitResponse.ProtoReflect.Descriptor instead.
func (*DigestInitResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{94}
}

func (x *DigestInitResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

type DigestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64 `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
	Data          []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DigestRequest) Reset() {
	*x = DigestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestRequest) ProtoMessage() {}

func (x *DigestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestRequest.ProtoReflect.Descriptor instead.
func (*DigestRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{95}
}

func (x *DigestRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

func (x *DigestRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DigestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
	Digest      []byte      `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *DigestResponse) Reset() {
	*x = DigestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestResponse) ProtoMessage() {}

func (x *DigestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestResponse.ProtoReflect.Descriptor instead.
func (*DigestResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{96}
}

func (x *DigestResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

func (x *DigestResponse) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

type DigestUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64 `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
	Data          []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DigestUpdateRequest) Reset() {
	*x = DigestUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestUpdateRequest) ProtoMessage() {}

func (x *DigestUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestUpdateRequest.ProtoReflect.Descriptor instead.
func (*DigestUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{97}
}

func (x *DigestUpdateRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

func (x *DigestUpdateRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DigestUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
}

func (x *DigestUpdateResponse) Reset() {
	*x = DigestUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestUpdateResponse) ProtoMessage() {}

func (x *DigestUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestUpdateResponse.ProtoReflect.Descriptor instead.
func (*DigestUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{98}
}

func (x *DigestUpdateResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

type DigestKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64 `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
}

func (x *DigestKeyRequest) Reset() {
	*x = DigestKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestKeyRequest) ProtoMessage() {}

func (x *DigestKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestKeyRequest.ProtoReflect.Descriptor instead.
func (*DigestKeyRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{99}
}

func (x *DigestKeyRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

type DigestKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
}

func (x *DigestKeyResponse) Reset() {
	*x = DigestKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestKeyResponse) ProtoMessage() {}

func (x *DigestKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestKeyResponse.ProtoReflect.Descriptor instead.
func (*DigestKeyResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{100}
}

func (x *DigestKeyResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

type DigestFinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64 `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
}

func (x *DigestFinalRequest) Reset() {
	*x = DigestFinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestFinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestFinalRequest) ProtoMessage() {}

func (x *DigestFinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestFinalRequest.ProtoReflect.Descriptor instead.
func (*DigestFinalRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{101}
}

func (x *DigestFinalRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

type DigestFinalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
	Digest      []byte      `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *DigestFinalResponse) Reset() {
	*x = DigestFinalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestFinalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestFinalResponse) ProtoMessage() {}

func (x *DigestFinalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestFinalResponse.ProtoReflect.Descriptor instead.
func (*DigestFinalResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{102}
}

func (x *DigestFinalResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

func (x *DigestFinalResponse) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

type SignInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignInitRequest) Reset() {
	*x = SignInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInitRequest) ProtoMessage() {}

func (x *SignInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInitRequest.ProtoReflect.Descriptor instead.
func (*SignInitRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{103}
}

type SignInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignInitResponse) Reset() {
	*x = SignInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInitResponse) ProtoMessage() {}

func (x *SignInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInitResponse.ProtoReflect.Descriptor instead.
func (*SignInitResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{104}
}

type SignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{105}
}

type SignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignResponse) Reset() {
	*x = SignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignResponse) ProtoMessage() {}

func (x *SignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignResponse.ProtoReflect.Descriptor instead.
func (*SignResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{106}
}

type SignUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignUpdateRequest) Reset() {
	*x = SignUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpdateRequest) ProtoMessage() {}

func (x *SignUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpdateRequest.ProtoReflect.Descriptor instead.
func (*SignUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{107}
}

type SignUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignUpdateResponse) Reset() {
	*x = SignUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpdateResponse) ProtoMessage() {}

func (x *SignUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpdateResponse.ProtoReflect.Descriptor instead.
func (*SignUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{108}
}

type SignFinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignFinalRequest) Reset() {
	*x = SignFinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignFinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignFinalRequest) ProtoMessage() {}

func (x *SignFinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignFinalRequest.ProtoReflect.Descriptor instead.
func (*SignFinalRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{109}
}

type SignFinalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignFinalResponse) Reset() {
	*x = SignFinalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignFinalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignFinalResponse) ProtoMessage() {}

func (x *SignFinalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignFinalResponse.ProtoReflect.Descriptor instead.
func (*SignFinalResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{110}
}

type SignRecoverInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignRecoverInitRequest) Reset() {
	*x = SignRecoverInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRecoverInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRecoverInitRequest) ProtoMessage() {}

func (x *SignRecoverInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRecoverInitRequest.ProtoReflect.Descriptor instead.
func (*SignRecoverInitRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{111}
}

type SignRecoverInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignRecoverInitResponse) Reset() {
	*x = SignRecoverInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRecoverInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRecoverInitResponse) ProtoMessage() {}

func (x *SignRecoverInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRecoverInitResponse.ProtoReflect.Descriptor instead.
func (*SignRecoverInitResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{112}
}

type SignRecoverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignRecoverRequest) Reset() {
	*x = SignRecoverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRecoverRequest) ProtoMessage() {}

func (x *SignRecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRecoverRequest.ProtoReflect.Descriptor instead.
func (*SignRecoverRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{113}
}

type SignRecoverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignRecoverResponse) Reset() {
	*x = SignRecoverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRecoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRecoverResponse) ProtoMessage() {}

func (x *SignRecoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRecoverResponse.ProtoReflect.Descriptor instead.
func (*SignRecoverResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{114}
}

type SignMessageInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignMessageInitRequest) Reset() {
	*x = SignMessageInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageInitRequest) ProtoMessage() {}

func (x *SignMessageInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageInitRequest.ProtoReflect.Descriptor instead.
func (*SignMessageInitRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{115}
}

type SignMessageInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignMessageInitResponse) Reset() {
	*x = SignMessageInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageInitResponse) ProtoMessage() {}

func (x *SignMessageInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageInitResponse.ProtoReflect.Descriptor instead.
func (*SignMessageInitResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{116}
}

type SignMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignMessageRequest) Reset() {
	*x = SignMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageRequest) ProtoMessage() {}

func (x *SignMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageRequest.ProtoReflect.Descriptor instead.
func (*SignMessageRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{117}
}

type SignMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignMessageResponse) Reset() {
	*x = SignMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageResponse) ProtoMessage() {}

func (x *SignMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageResponse.ProtoReflect.Descriptor instead.
func (*SignMessageResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{118}
}

type SignMessageBeginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignMessageBeginRequest) Reset() {
	*x = SignMessageBeginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageBeginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageBeginRequest) ProtoMessage() {}

func (x *SignMessageBeginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageBeginRequest.ProtoReflect.Descriptor instead.
func (*SignMessageBeginRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{119}
}

type SignMessageBeginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignMessageBeginResponse) Reset() {
	*x = SignMessageBeginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageBeginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageBeginResponse) ProtoMessage() {}

func (x *SignMessageBeginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageBeginResponse.ProtoReflect.Descriptor instead.
func (*SignMessageBeginResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{120}
}

type SignMessageNextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignMessageNextRequest) Reset() {
	*x = SignMessageNextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageNextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageNextRequest) ProtoMessage() {}

func (x *SignMessageNextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageNextRequest.ProtoReflect.Descriptor instead.
func (*SignMessageNextRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{121}
}

type SignMessageNextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignMessageNextResponse) Reset() {
	*x = SignMessageNextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageNextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageNextResponse) ProtoMessage() {}

func (x *SignMessageNextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageNextResponse.ProtoReflect.Descriptor instead.
func (*SignMessageNextResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{122}
}

type SignMessageFinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignMessageFinalRequest) Reset() {
	*x = SignMessageFinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageFinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageFinalRequest) ProtoMessage() {}

func (x *SignMessageFinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageFinalRequest.ProtoReflect.Descriptor instead.
func (*SignMessageFinalRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{123}
}

type SignMessageFinalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignMessageFinalResponse) Reset() {
	*x = SignMessageFinalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageFinalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageFinalResponse) ProtoMessage() {}

func (x *SignMessageFinalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageFinalResponse.ProtoReflect.Descriptor instead.
func (*SignMessageFinalResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{124}
}

type VerifyInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyInitRequest) Reset() {
	*x = VerifyInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyInitRequest) ProtoMessage() {}

func (x *VerifyInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyInitRequest.ProtoReflect.Descriptor instead.
func (*VerifyInitRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{125}
}

type VerifyInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyInitResponse) Reset() {
	*x = VerifyInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyInitResponse) ProtoMessage() {}

func (x *VerifyInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyInitResponse.ProtoReflect.Descriptor instead.
func (*VerifyInitResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{126}
}

type VerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{127}
}

type VerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyResponse) Reset() {
	*x = VerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResponse) ProtoMessage() {}

func (x *VerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResponse.ProtoReflect.Descriptor instead.
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{128}
}

type VerifyUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyUpdateRequest) Reset() {
	*x = VerifyUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyUpdateRequest) ProtoMessage() {}

func (x *VerifyUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyUpdateRequest.ProtoReflect.Descriptor instead.
func (*VerifyUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{129}
}

type VerifyUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyUpdateResponse) Reset() {
	*x = VerifyUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyUpdateResponse) ProtoMessage() {}

func (x *VerifyUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyUpdateResponse.ProtoReflect.Descriptor instead.
func (*VerifyUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{130}
}

type VerifyFinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyFinalRequest) Reset() {
	*x = VerifyFinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyFinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyFinalRequest) ProtoMessage() {}

func (x *VerifyFinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyFinalRequest.ProtoReflect.Descriptor instead.
func (*VerifyFinalRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{131}
}

type VerifyFinalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyFinalResponse) Reset() {
	*x = VerifyFinalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyFinalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyFinalResponse) ProtoMessage() {}

func (x *VerifyFinalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyFinalResponse.ProtoReflect.Descriptor instead.
func (*VerifyFinalResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{132}
}

type VerifyRecoverInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyRecoverInitRequest) Reset() {
	*x = VerifyRecoverInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRecoverInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRecoverInitRequest) ProtoMessage() {}

func (x *VerifyRecoverInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRecoverInitRequest.ProtoReflect.Descriptor instead.
func (*VerifyRecoverInitRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{133}
}

type VerifyRecoverInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyRecoverInitResponse) Reset() {
	*x = VerifyRecoverInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRecoverInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRecoverInitResponse) ProtoMessage() {}

func (x *VerifyRecoverInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRecoverInitResponse.ProtoReflect.Descriptor instead.
func (*VerifyRecoverInitResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{134}
}

type VerifyRecoverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyRecoverRequest) Reset() {
	*x = VerifyRecoverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRecoverRequest) ProtoMessage() {}

func (x *VerifyRecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRecoverRequest.ProtoReflect.Descriptor instead.
func (*VerifyRecoverRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{135}
}

type VerifyRecoverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyRecoverResponse) Reset() {
	*x = VerifyRecoverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRecoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRecoverResponse) ProtoMessage() {}

func (x *VerifyRecoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRecoverResponse.ProtoReflect.Descriptor instead.
func (*VerifyRecoverResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{136}
}

type VerifyMessageInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyMessageInitRequest) Reset() {
	*x = VerifyMessageInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageInitRequest) ProtoMessage() {}

func (x *VerifyMessageInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageInitRequest.ProtoReflect.Descriptor instead.
func (*VerifyMessageInitRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{137}
}

type VerifyMessageInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyMessageInitResponse) Reset() {
	*x = VerifyMessageInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageInitResponse) ProtoMessage() {}

func (x *VerifyMessageInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageInitResponse.ProtoReflect.Descriptor instead.
func (*VerifyMessageInitResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{138}
}

type VerifyMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyMessageRequest) Reset() {
	*x = VerifyMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageRequest) ProtoMessage() {}

func (x *VerifyMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageRequest.ProtoReflect.Descriptor instead.
func (*VerifyMessageRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{139}
}

type VerifyMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyMessageResponse) Reset() {
	*x = VerifyMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageResponse) ProtoMessage() {}

func (x *VerifyMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageResponse.ProtoReflect.Descriptor instead.
func (*VerifyMessageResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{140}
}

type VerifyMessageBeginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyMessageBeginRequest) Reset() {
	*x = VerifyMessageBeginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageBeginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageBeginRequest) ProtoMessage() {}

func (x *VerifyMessageBeginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageBeginRequest.ProtoReflect.Descriptor instead.
func (*VerifyMessageBeginRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{141}
}

type VerifyMessageBeginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyMessageBeginResponse) Reset() {
	*x = VerifyMessageBeginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageBeginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageBeginResponse) ProtoMessage() {}

func (x *VerifyMessageBeginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageBeginResponse.ProtoReflect.Descriptor instead.
func (*VerifyMessageBeginResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{142}
}

type VerifyMessageNextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyMessageNextRequest) Reset() {
	*x = VerifyMessageNextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageNextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageNextRequest) ProtoMessage() {}

func (x *VerifyMessageNextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageNextRequest.ProtoReflect.Descriptor instead.
func (*VerifyMessageNextRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{143}
}

type VerifyMessageNextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyMessageNextResponse) Reset() {
	*x = VerifyMessageNextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageNextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageNextResponse) ProtoMessage() {}

func (x *VerifyMessageNextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageNextResponse.ProtoReflect.Descriptor instead.
func (*VerifyMessageNextResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{144}
}

type VerifyMessageFinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyMessageFinalRequest) Reset() {
	*x = VerifyMessageFinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageFinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageFinalRequest) ProtoMessage() {}

func (x *VerifyMessageFinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageFinalRequest.ProtoReflect.Descriptor instead.
func (*VerifyMessageFinalRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{145}
}

type VerifyMessageFinalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyMessageFinalResponse) Reset() {
	*x = VerifyMessageFinalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageFinalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageFinalResponse) ProtoMessage() {}

func (x *VerifyMessageFinalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageFinalResponse.ProtoReflect.Descriptor instead.
func (*VerifyMessageFinalResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{146}
}

type DigestEncryptUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DigestEncryptUpdateRequest) Reset() {
	*x = DigestEncryptUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestEncryptUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestEncryptUpdateRequest) ProtoMessage() {}

func (x *DigestEncryptUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestEncryptUpdateRequest.ProtoReflect.Descriptor instead.
func (*DigestEncryptUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{147}
}

type DigestEncryptUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DigestEncryptUpdateResponse) Reset() {
	*x = DigestEncryptUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestEncryptUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestEncryptUpdateResponse) ProtoMessage() {}

func (x *DigestEncryptUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestEncryptUpdateResponse.ProtoReflect.Descriptor instead.
func (*DigestEncryptUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{148}
}

type DecryptDigestUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptDigestUpdateRequest) Reset() {
	*x = DecryptDigestUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptDigestUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptDigestUpdateRequest) ProtoMessage() {}

func (x *DecryptDigestUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptDigestUpdateRequest.ProtoReflect.Descriptor instead.
func (*DecryptDigestUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{149}
}

type DecryptDigestUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptDigestUpdateResponse) Reset() {
	*x = DecryptDigestUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptDigestUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptDigestUpdateResponse) ProtoMessage() {}

func (x *DecryptDigestUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptDigestUpdateResponse.ProtoReflect.Descriptor instead.
func (*DecryptDigestUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{150}
}

type SignEncryptUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignEncryptUpdateRequest) Reset() {
	*x = SignEncryptUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignEncryptUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignEncryptUpdateRequest) ProtoMessage() {}

func (x *SignEncryptUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignEncryptUpdateRequest.ProtoReflect.Descriptor instead.
func (*SignEncryptUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{151}
}

type SignEncryptUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignEncryptUpdateResponse) Reset() {
	*x = SignEncryptUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignEncryptUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignEncryptUpdateResponse) ProtoMessage() {}

func (x *SignEncryptUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignEncryptUpdateResponse.ProtoReflect.Descriptor instead.
func (*SignEncryptUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{152}
}

type DecryptVerifyUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptVerifyUpdateRequest) Reset() {
	*x = DecryptVerifyUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptVerifyUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptVerifyUpdateRequest) ProtoMessage() {}

func (x *DecryptVerifyUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptVerifyUpdateRequest.ProtoReflect.Descriptor instead.
func (*DecryptVerifyUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{153}
}

type DecryptVerifyUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecryptVerifyUpdateResponse) Reset() {
	*x = DecryptVerifyUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptVerifyUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptVerifyUpdateResponse) ProtoMessage() {}

func (x *DecryptVerifyUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptVerifyUpdateResponse.ProtoReflect.Descriptor instead.
func (*DecryptVerifyUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{154}
}

type GenerateKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateKeyRequest) Reset() {
	*x = GenerateKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeyRequest) ProtoMessage() {}

func (x *GenerateKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeyRequest.ProtoReflect.Descriptor instead.
func (*GenerateKeyRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{155}
}

type GenerateKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateKeyResponse) Reset() {
	*x = GenerateKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeyResponse) ProtoMessage() {}

func (x *GenerateKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeyResponse.ProtoReflect.Descriptor instead.
func (*GenerateKeyResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{156}
}

type GenerateKeyPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateKeyPairRequest) Reset() {
	*x = GenerateKeyPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeyPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeyPairRequest) ProtoMessage() {}

func (x *GenerateKeyPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeyPairRequest.ProtoReflect.Descriptor instead.
func (*GenerateKeyPairRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{157}
}

type GenerateKeyPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateKeyPairResponse) Reset() {
	*x = GenerateKeyPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeyPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeyPairResponse) ProtoMessage() {}

func (x *GenerateKeyPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeyPairResponse.ProtoReflect.Descriptor instead.
func (*GenerateKeyPairResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{158}
}

type WrapKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WrapKeyRequest) Reset() {
	*x = WrapKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WrapKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrapKeyRequest) ProtoMessage() {}

func (x *WrapKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WrapKeyRequest.ProtoReflect.Descriptor instead.
func (*WrapKeyRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{159}
}

type WrapKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WrapKeyResponse) Reset() {
	*x = WrapKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WrapKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrapKeyResponse) ProtoMessage() {}

func (x *WrapKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WrapKeyResponse.ProtoReflect.Descriptor instead.
func (*WrapKeyResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{160}
}

type UnwrapKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnwrapKeyRequest) Reset() {
	*x = UnwrapKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnwrapKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnwrapKeyRequest) ProtoMessage() {}

func (x *UnwrapKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnwrapKeyRequest.ProtoReflect.Descriptor instead.
func (*UnwrapKeyRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{161}
}

type UnwrapKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnwrapKeyResponse) Reset() {
	*x = UnwrapKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnwrapKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnwrapKeyResponse) ProtoMessage() {}

func (x *UnwrapKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnwrapKeyResponse.ProtoReflect.Descriptor instead.
func (*UnwrapKeyResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{162}
}

type DeriveKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeriveKeyRequest) Reset() {
	*x = DeriveKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeriveKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveKeyRequest) ProtoMessage() {}

func (x *DeriveKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveKeyRequest.ProtoReflect.Descriptor instead.
func (*DeriveKeyRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{163}
}

type DeriveKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeriveKeyResponse) Reset() {
	*x = DeriveKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeriveKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveKeyResponse) ProtoMessage() {}

func (x *DeriveKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveKeyResponse.ProtoReflect.Descriptor instead.
func (*DeriveKeyResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{164}
}

type SeedRandomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SeedRandomRequest) Reset() {
	*x = SeedRandomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeedRandomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeedRandomRequest) ProtoMessage() {}

func (x *SeedRandomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeedRandomRequest.ProtoReflect.Descriptor instead.
func (*SeedRandomRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{165}
}

type SeedRandomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SeedRandomResponse) Reset() {
	*x = SeedRandomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeedRandomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeedRandomResponse) ProtoMessage() {}

func (x *SeedRandomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeedRandomResponse.ProtoReflect.Descriptor instead.
func (*SeedRandomResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{166}
}

type GenerateRandomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateRandomRequest) Reset() {
	*x = GenerateRandomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateRandomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRandomRequest) ProtoMessage() {}

func (x *GenerateRandomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRandomRequest.ProtoReflect.Descriptor instead.
func (*GenerateRandomRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{167}
}

type GenerateRandomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateRandomResponse) Reset() {
	*x = GenerateRandomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateRandomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRandomResponse) ProtoMessage() {}

func (x *GenerateRandomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRandomResponse.ProtoReflect.Descriptor instead.
func (*GenerateRandomResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{168}
}

type GetFunctionStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFunctionStatusRequest) Reset() {
	*x = GetFunctionStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionStatusRequest) ProtoMessage() {}

func (x *GetFunctionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionStatusRequest.ProtoReflect.Descriptor instead.
func (*GetFunctionStatusRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{169}
}

type GetFunctionStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFunctionStatusResponse) Reset() {
	*x = GetFunctionStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionStatusResponse) ProtoMessage() {}

func (x *GetFunctionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionStatusResponse.ProtoReflect.Descriptor instead.
func (*GetFunctionStatusResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{170}
}

type CancelFunctionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelFunctionRequest) Reset() {
	*x = CancelFunctionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelFunctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelFunctionRequest) ProtoMessage() {}

func (x *CancelFunctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelFunctionRequest.ProtoReflect.Descriptor instead.
func (*CancelFunctionRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{171}
}

type CancelFunctionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelFunctionResponse) Reset() {
	*x = CancelFunctionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelFunctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelFunctionResponse) ProtoMessage() {}

func (x *CancelFunctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelFunctionResponse.ProtoReflect.Descriptor instead.
func (*CancelFunctionResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{172}
}

type GetSessionInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SessionInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetSessionInfoData) Reset() {
	*x = GetSessionInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionInfoData) ProtoMessage() {}

func (x *GetSessionInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionInfoData.ProtoReflect.Descriptor instead.
func (*GetSessionInfoData) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{173}
}

func (x *GetSessionInfoData) GetInfo() *SessionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId        uint64       `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	State         SessionState `protobuf:"varint,2,opt,name=state,proto3,enum=pb.SessionState" json:"state,omitempty"`
	Flags         uint64       `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	UlDeviceError uint64       `protobuf:"varint,4,opt,name=ulDeviceError,proto3" json:"ulDeviceError,omitempty"`
}

func (x *SessionInfo) Reset() {
	*x = SessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfo) ProtoMessage() {}

func (x *SessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfo.ProtoReflect.Descriptor instead.
func (*SessionInfo) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{174}
}

func (x *SessionInfo) GetSlotId() uint64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SessionInfo) GetState() SessionState {
	if x != nil {
		return x.State
	}
	return SessionState_RO_PUBLIC_SESSION
}

func (x *SessionInfo) GetFlags() uint64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *SessionInfo) GetUlDeviceError() uint64 {
	if x != nil {
		return x.UlDeviceError
	}
	return 0
}

type SessionCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64 `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
}

func (x *SessionCancelRequest) Reset() {
	*x = SessionCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionCancelRequest) ProtoMessage() {}

func (x *SessionCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionCancelRequest.ProtoReflect.Descriptor instead.
func (*SessionCancelRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{175}
}

func (x *SessionCancelRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

type SessionCancelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
}

func (x *SessionCancelResponse) Reset() {
	*x = SessionCancelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionCancelResponse) ProtoMessage() {}

func (x *SessionCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionCancelResponse.ProtoReflect.Descriptor instead.
func (*SessionCancelResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{176}
}

func (x *SessionCancelResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

type GetOperationStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64 `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
}

func (x *GetOperationStateRequest) Reset() {
	*x = GetOperationStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationStateRequest) ProtoMessage() {}

func (x *GetOperationStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationStateRequest.ProtoReflect.Descriptor instead.
func (*GetOperationStateRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{177}
}

func (x *GetOperationStateRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

type GetOperationStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
}

func (x *GetOperationStateResponse) Reset() {
	*x = GetOperationStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationStateResponse) ProtoMessage() {}

func (x *GetOperationStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationStateResponse.ProtoReflect.Descriptor instead.
func (*GetOperationStateResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{178}
}

func (x *GetOperationStateResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

type SetOperationStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64 `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
}

func (x *SetOperationStateRequest) Reset() {
	*x = SetOperationStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOperationStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOperationStateRequest) ProtoMessage() {}

func (x *SetOperationStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOperationStateRequest.ProtoReflect.Descriptor instead.
func (*SetOperationStateRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{179}
}

func (x *SetOperationStateRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

type SetOperationStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
}

func (x *SetOperationStateResponse) Reset() {
	*x = SetOperationStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOperationStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOperationStateResponse) ProtoMessage() {}

func (x *SetOperationStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOperationStateResponse.ProtoReflect.Descriptor instead.
func (*SetOperationStateResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{180}
}

func (x *SetOperationStateResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64   `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
	UserType      UserType `protobuf:"varint,2,opt,name=userType,proto3,enum=pb.UserType" json:"userType,omitempty"`
	Pin           string   `protobuf:"bytes,3,opt,name=pin,proto3" json:"pin,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{181}
}

func (x *LoginRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

func (x *LoginRequest) GetUserType() UserType {
	if x != nil {
		return x.UserType
	}
	return UserType_SO
}

func (x *LoginRequest) GetPin() string {
	if x != nil {
		return x.Pin
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{182}
}

func (x *LoginResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

type LoginUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64   `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
	UserType      UserType `protobuf:"varint,2,opt,name=userType,proto3,enum=pb.UserType" json:"userType,omitempty"`
	Pin           string   `protobuf:"bytes,3,opt,name=pin,proto3" json:"pin,omitempty"`
	Username      string   `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *LoginUserRequest) Reset() {
	*x = LoginUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginUserRequest) ProtoMessage() {}

func (x *LoginUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginUserRequest.ProtoReflect.Descriptor instead.
func (*LoginUserRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{183}
}

func (x *LoginUserRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

func (x *LoginUserRequest) GetUserType() UserType {
	if x != nil {
		return x.UserType
	}
	return UserType_SO
}

func (x *LoginUserRequest) GetPin() string {
	if x != nil {
		return x.Pin
	}
	return ""
}

func (x *LoginUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type LoginUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
}

func (x *LoginUserResponse) Reset() {
	*x = LoginUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginUserResponse) ProtoMessage() {}

func (x *LoginUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginUserResponse.ProtoReflect.Descriptor instead.
func (*LoginUserResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{184}
}

func (x *LoginUserResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

type LogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandle uint64 `protobuf:"varint,1,opt,name=sessionHandle,proto3" json:"sessionHandle,omitempty"`
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{185}
}

func (x *LogoutRequest) GetSessionHandle() uint64 {
	if x != nil {
		return x.SessionHandle
	}
	return 0
}

type LogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnValue ReturnValue `protobuf:"varint,1,opt,name=returnValue,proto3,enum=pb.ReturnValue" json:"returnValue,omitempty"`
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pkcs11_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pkcs11_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResponse.ProtoReflect.Descriptor instead.
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return file_pb_pkcs11_proto_rawDescGZIP(), []int{186}
}

func (x *LogoutResponse) GetReturnValue() ReturnValue {
	if x != nil {
		return x.ReturnValue
	}
	return ReturnValue_OK
}

var File_pb_pkcs11_proto protoreflect.FileDescriptor

var file_pb_pkcs11_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x2f, 0x70, 0x6b, 0x63, 0x73, 0x31, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x13, 0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x11, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x6c,
	0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x19, 0x0a, 0x17, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x57,
	0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69,
	0x73, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x49, 0x6e, 0x69, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x49, 0x6e, 0x69,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10,
	0x0a, 0x0e, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x49, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x11, 0x0a, 0x0f, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x49, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x50, 0x49, 0x4e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x50, 0x49, 0x4e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6c,
	0x6f, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x6e, 0x0a, 0x13, 0x4f, 0x70,
	0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x3b, 0x0a, 0x13, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x49, 0x0a, 0x14, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x31, 0x0a, 0x17, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x18, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41, 0x6c,
	0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0x77, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x15, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x43,
	0x6f, 0x70, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x14, 0x0a, 0x12, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17,
	0x0a, 0x15, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a,
	0x19, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x14, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x17,
	0x46, 0x69, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x10, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a,
	0x15, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x16, 0x0a,
	0x14, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x17, 0x0a, 0x15, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1b, 0x0a, 0x19, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1c, 0x0a,
	0x1a, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15,
	0x0a, 0x13, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18,
	0x0a, 0x16, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1c, 0x0a, 0x1a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1d,
	0x0a, 0x1b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x0a,
	0x09, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12, 0x2f, 0x0a, 0x09, 0x6d, 0x65,
	0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x11, 0x44, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x52, 0x09, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73,
	0x6d, 0x22, 0x47, 0x0a, 0x12, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x49, 0x0a, 0x0d, 0x44, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x0e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x22, 0x4f, 0x0a, 0x13, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x49, 0x0a, 0x14, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38,
	0x0a, 0x10, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x46, 0x0a, 0x11, 0x44, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3a, 0x0a, 0x12, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x60, 0x0a, 0x13,
	0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x11,
	0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x69, 0x67,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x12, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a,
	0x12, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x69,
	0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x14, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x17,
	0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x69, 0x67, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a,
	0x17, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x69, 0x67, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x13, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a,
	0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x1b, 0x0a, 0x19, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x0a,
	0x19, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1b, 0x0a, 0x19, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1c,
	0x0a, 0x1a, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a,
	0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x69, 0x67, 0x6e, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x69, 0x67, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a,
	0x1b, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10,
	0x0a, 0x0e, 0x57, 0x72, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x11, 0x0a, 0x0f, 0x57, 0x72, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x55, 0x6e, 0x77, 0x72, 0x61, 0x70, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x6e, 0x77, 0x72, 0x61,
	0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10,
	0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x65, 0x64, 0x52, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x65,
	0x65, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x39, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c,
	0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x75, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x75, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3c, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x22, 0x4a, 0x0a, 0x15, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x40, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x22, 0x4e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x40, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x22, 0x4e, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x70, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x70, 0x69, 0x6e, 0x22, 0x42, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a,
	0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x43, 0x0a, 0x0e,
	0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x2a, 0x96, 0x46, 0x0a, 0x0d, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x5f,
	0x4b, 0x45, 0x59, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x53, 0x41, 0x5f, 0x39, 0x37, 0x39, 0x36, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x53,
	0x41, 0x5f, 0x58, 0x5f, 0x35, 0x30, 0x39, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x44, 0x32,
	0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x4d,
	0x44, 0x35, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10, 0x05, 0x12, 0x11, 0x0a,
	0x0d, 0x53, 0x48, 0x41, 0x31, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10, 0x06,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x49, 0x50, 0x45, 0x4d, 0x44, 0x31, 0x32, 0x38, 0x5f, 0x52, 0x53,
	0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x49, 0x50, 0x45,
	0x4d, 0x44, 0x31, 0x36, 0x30, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10, 0x08,
	0x12, 0x11, 0x0a, 0x0d, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x5f, 0x4f, 0x41, 0x45,
	0x50, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x53, 0x41, 0x5f, 0x58, 0x39, 0x5f, 0x33, 0x31,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x0a, 0x12,
	0x0d, 0x0a, 0x09, 0x52, 0x53, 0x41, 0x5f, 0x58, 0x39, 0x5f, 0x33, 0x31, 0x10, 0x0b, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x48, 0x41, 0x31, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x58, 0x39, 0x5f, 0x33, 0x31,
	0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x5f, 0x50,
	0x53, 0x53, 0x10, 0x0d, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x48, 0x41, 0x31, 0x5f, 0x52, 0x53, 0x41,
	0x5f, 0x50, 0x4b, 0x43, 0x53, 0x5f, 0x50, 0x53, 0x53, 0x10, 0x0e, 0x12, 0x14, 0x0a, 0x10, 0x44,
	0x53, 0x41, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10,
	0x10, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x53, 0x41, 0x10, 0x11, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x53,
	0x41, 0x5f, 0x53, 0x48, 0x41, 0x31, 0x10, 0x12, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x53, 0x41, 0x5f,
	0x53, 0x48, 0x41, 0x32, 0x32, 0x34, 0x10, 0x13, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x53, 0x41, 0x5f,
	0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x10, 0x14, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x53, 0x41, 0x5f,
	0x53, 0x48, 0x41, 0x33, 0x38, 0x34, 0x10, 0x15, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x53, 0x41, 0x5f,
	0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x10, 0x16, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x53, 0x41, 0x5f,
	0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x32, 0x34, 0x10, 0x18, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x53,
	0x41, 0x5f, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x19, 0x12, 0x10, 0x0a, 0x0c,
	0x44, 0x53, 0x41, 0x5f, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x33, 0x38, 0x34, 0x10, 0x1a, 0x12, 0x10,
	0x0a, 0x0c, 0x44, 0x53, 0x41, 0x5f, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x35, 0x31, 0x32, 0x10, 0x1b,
	0x12, 0x18, 0x0a, 0x14, 0x44, 0x48, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x5f, 0x4b, 0x45, 0x59, 0x5f,
	0x50, 0x41, 0x49, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x20, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x48,
	0x5f, 0x50, 0x4b, 0x43, 0x53, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0x21, 0x12, 0x19,
	0x0a, 0x15, 0x58, 0x39, 0x5f, 0x34, 0x32, 0x5f, 0x44, 0x48, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x50,
	0x41, 0x49, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x30, 0x12, 0x13, 0x0a, 0x0f, 0x58, 0x39, 0x5f,
	0x34, 0x32, 0x5f, 0x44, 0x48, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0x31, 0x12, 0x1a,
	0x0a, 0x16, 0x58, 0x39, 0x5f, 0x34, 0x32, 0x5f, 0x44, 0x48, 0x5f, 0x48, 0x59, 0x42, 0x52, 0x49,
	0x44, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0x32, 0x12, 0x14, 0x0a, 0x10, 0x58, 0x39,
	0x5f, 0x34, 0x32, 0x5f, 0x4d, 0x51, 0x56, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0x33,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50,
	0x4b, 0x43, 0x53, 0x10, 0x40, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x48, 0x41, 0x33, 0x38, 0x34, 0x5f,
	0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10, 0x41, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x48,
	0x41, 0x35, 0x31, 0x32, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10, 0x42, 0x12,
	0x17, 0x0a, 0x13, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b,
	0x43, 0x53, 0x5f, 0x50, 0x53, 0x53, 0x10, 0x43, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x48, 0x41, 0x33,
	0x38, 0x34, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x5f, 0x50, 0x53, 0x53, 0x10,
	0x44, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x52, 0x53, 0x41, 0x5f,
	0x50, 0x4b, 0x43, 0x53, 0x5f, 0x50, 0x53, 0x53, 0x10, 0x45, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x48,
	0x41, 0x32, 0x32, 0x34, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10, 0x46, 0x12,
	0x17, 0x0a, 0x13, 0x53, 0x48, 0x41, 0x32, 0x32, 0x34, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b,
	0x43, 0x53, 0x5f, 0x50, 0x53, 0x53, 0x10, 0x47, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x48, 0x41, 0x35,
	0x31, 0x32, 0x5f, 0x32, 0x32, 0x34, 0x10, 0x48, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x48, 0x41, 0x35,
	0x31, 0x32, 0x5f, 0x32, 0x32, 0x34, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0x49, 0x12, 0x1b, 0x0a,
	0x17, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x32, 0x32, 0x34, 0x5f, 0x48, 0x4d, 0x41, 0x43,
	0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x4a, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x48,
	0x41, 0x35, 0x31, 0x32, 0x5f, 0x32, 0x32, 0x34, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52,
	0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x4b, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x48, 0x41,
	0x35, 0x31, 0x32, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x4c, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x48, 0x41,
	0x35, 0x31, 0x32, 0x5f, 0x32, 0x35, 0x36, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0x4d, 0x12, 0x1b,
	0x0a, 0x17, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x32, 0x35, 0x36, 0x5f, 0x48, 0x4d, 0x41,
	0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x4e, 0x12, 0x1d, 0x0a, 0x19, 0x53,
	0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x32, 0x35, 0x36, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45,
	0x52, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x4f, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48,
	0x41, 0x35, 0x31, 0x32, 0x5f, 0x54, 0x10, 0x50, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x48, 0x41, 0x35,
	0x31, 0x32, 0x5f, 0x54, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0x51, 0x12, 0x19, 0x0a, 0x15, 0x53,
	0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x54, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x4c, 0x10, 0x52, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32,
	0x5f, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x53, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x35, 0x36, 0x5f,
	0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10, 0x60, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x48,
	0x41, 0x33, 0x5f, 0x33, 0x38, 0x34, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10,
	0x61, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x35, 0x31, 0x32, 0x5f, 0x52, 0x53,
	0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10, 0x62, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x48, 0x41, 0x33,
	0x5f, 0x32, 0x35, 0x36, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x5f, 0x50, 0x53,
	0x53, 0x10, 0x63, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x33, 0x38, 0x34, 0x5f,
	0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x5f, 0x50, 0x53, 0x53, 0x10, 0x64, 0x12, 0x19,
	0x0a, 0x15, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x35, 0x31, 0x32, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50,
	0x4b, 0x43, 0x53, 0x5f, 0x50, 0x53, 0x53, 0x10, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x48, 0x41,
	0x33, 0x5f, 0x32, 0x32, 0x34, 0x5f, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x10, 0x66,
	0x12, 0x19, 0x0a, 0x15, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x32, 0x34, 0x5f, 0x52, 0x53, 0x41,
	0x5f, 0x50, 0x4b, 0x43, 0x53, 0x5f, 0x50, 0x53, 0x53, 0x10, 0x67, 0x12, 0x10, 0x0a, 0x0b, 0x52,
	0x43, 0x32, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x80, 0x02, 0x12, 0x0c, 0x0a,
	0x07, 0x52, 0x43, 0x32, 0x5f, 0x45, 0x43, 0x42, 0x10, 0x81, 0x02, 0x12, 0x0c, 0x0a, 0x07, 0x52,
	0x43, 0x32, 0x5f, 0x43, 0x42, 0x43, 0x10, 0x82, 0x02, 0x12, 0x0c, 0x0a, 0x07, 0x52, 0x43, 0x32,
	0x5f, 0x4d, 0x41, 0x43, 0x10, 0x83, 0x02, 0x12, 0x14, 0x0a, 0x0f, 0x52, 0x43, 0x32, 0x5f, 0x4d,
	0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x84, 0x02, 0x12, 0x10, 0x0a,
	0x0b, 0x52, 0x43, 0x32, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0x85, 0x02, 0x12,
	0x10, 0x0a, 0x0b, 0x52, 0x43, 0x34, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x90,
	0x02, 0x12, 0x08, 0x0a, 0x03, 0x52, 0x43, 0x34, 0x10, 0x91, 0x02, 0x12, 0x10, 0x0a, 0x0b, 0x44,
	0x45, 0x53, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xa0, 0x02, 0x12, 0x0c, 0x0a,
	0x07, 0x44, 0x45, 0x53, 0x5f, 0x45, 0x43, 0x42, 0x10, 0xa1, 0x02, 0x12, 0x0c, 0x0a, 0x07, 0x44,
	0x45, 0x53, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xa2, 0x02, 0x12, 0x0c, 0x0a, 0x07, 0x44, 0x45, 0x53,
	0x5f, 0x4d, 0x41, 0x43, 0x10, 0xa3, 0x02, 0x12, 0x14, 0x0a, 0x0f, 0x44, 0x45, 0x53, 0x5f, 0x4d,
	0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xa4, 0x02, 0x12, 0x10, 0x0a,
	0x0b, 0x44, 0x45, 0x53, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0xa5, 0x02, 0x12,
	0x11, 0x0a, 0x0c, 0x44, 0x45, 0x53, 0x32, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10,
	0xb0, 0x02, 0x12, 0x11, 0x0a, 0x0c, 0x44, 0x45, 0x53, 0x33, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47,
	0x45, 0x4e, 0x10, 0xb1, 0x02, 0x12, 0x0d, 0x0a, 0x08, 0x44, 0x45, 0x53, 0x33, 0x5f, 0x45, 0x43,
	0x42, 0x10, 0xb2, 0x02, 0x12, 0x0d, 0x0a, 0x08, 0x44, 0x45, 0x53, 0x33, 0x5f, 0x43, 0x42, 0x43,
	0x10, 0xb3, 0x02, 0x12, 0x0d, 0x0a, 0x08, 0x44, 0x45, 0x53, 0x33, 0x5f, 0x4d, 0x41, 0x43, 0x10,
	0xb4, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x44, 0x45, 0x53, 0x33, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xb5, 0x02, 0x12, 0x11, 0x0a, 0x0c, 0x44, 0x45, 0x53,
	0x33, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0xb6, 0x02, 0x12, 0x16, 0x0a, 0x11,
	0x44, 0x45, 0x53, 0x33, 0x5f, 0x43, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41,
	0x4c, 0x10, 0xb7, 0x02, 0x12, 0x0e, 0x0a, 0x09, 0x44, 0x45, 0x53, 0x33, 0x5f, 0x43, 0x4d, 0x41,
	0x43, 0x10, 0xb8, 0x02, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x44, 0x4d, 0x46, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x47, 0x45, 0x4e, 0x10, 0xc0, 0x02, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x44, 0x4d, 0x46, 0x5f,
	0x45, 0x43, 0x42, 0x10, 0xc1, 0x02, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x44, 0x4d, 0x46, 0x5f, 0x43,
	0x42, 0x43, 0x10, 0xc2, 0x02, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x44, 0x4d, 0x46, 0x5f, 0x4d, 0x41,
	0x43, 0x10, 0xc3, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x44, 0x4d, 0x46, 0x5f, 0x4d, 0x41, 0x43,
	0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xc4, 0x02, 0x12, 0x11, 0x0a, 0x0c, 0x43,
	0x44, 0x4d, 0x46, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0xc5, 0x02, 0x12, 0x0e,
	0x0a, 0x09, 0x44, 0x45, 0x53, 0x5f, 0x4f, 0x46, 0x42, 0x36, 0x34, 0x10, 0xd0, 0x02, 0x12, 0x0d,
	0x0a, 0x08, 0x44, 0x45, 0x53, 0x5f, 0x4f, 0x46, 0x42, 0x38, 0x10, 0xd1, 0x02, 0x12, 0x0e, 0x0a,
	0x09, 0x44, 0x45, 0x53, 0x5f, 0x43, 0x46, 0x42, 0x36, 0x34, 0x10, 0xd2, 0x02, 0x12, 0x0d, 0x0a,
	0x08, 0x44, 0x45, 0x53, 0x5f, 0x43, 0x46, 0x42, 0x38, 0x10, 0xd3, 0x02, 0x12, 0x08, 0x0a, 0x03,
	0x4d, 0x44, 0x32, 0x10, 0x80, 0x04, 0x12, 0x0d, 0x0a, 0x08, 0x4d, 0x44, 0x32, 0x5f, 0x48, 0x4d,
	0x41, 0x43, 0x10, 0x81, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x44, 0x32, 0x5f, 0x48, 0x4d, 0x41,
	0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x82, 0x04, 0x12, 0x08, 0x0a, 0x03,
	0x4d, 0x44, 0x35, 0x10, 0x90, 0x04, 0x12, 0x0d, 0x0a, 0x08, 0x4d, 0x44, 0x35, 0x5f, 0x48, 0x4d,
	0x41, 0x43, 0x10, 0x91, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x44, 0x35, 0x5f, 0x48, 0x4d, 0x41,
	0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x92, 0x04, 0x12, 0x0a, 0x0a, 0x05,
	0x53, 0x48, 0x41, 0x5f, 0x31, 0x10, 0xa0, 0x04, 0x12, 0x0f, 0x0a, 0x0a, 0x53, 0x48, 0x41, 0x5f,
	0x31, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0xa1, 0x04, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x48, 0x41,
	0x5f, 0x31, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10,
	0xa2, 0x04, 0x12, 0x0e, 0x0a, 0x09, 0x52, 0x49, 0x50, 0x45, 0x4d, 0x44, 0x31, 0x32, 0x38, 0x10,
	0xb0, 0x04, 0x12, 0x13, 0x0a, 0x0e, 0x52, 0x49, 0x50, 0x45, 0x4d, 0x44, 0x31, 0x32, 0x38, 0x5f,
	0x48, 0x4d, 0x41, 0x43, 0x10, 0xb1, 0x04, 0x12, 0x1b, 0x0a, 0x16, 0x52, 0x49, 0x50, 0x45, 0x4d,
	0x44, 0x31, 0x32, 0x38, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41,
	0x4c, 0x10, 0xb2, 0x04, 0x12, 0x0e, 0x0a, 0x09, 0x52, 0x49, 0x50, 0x45, 0x4d, 0x44, 0x31, 0x36,
	0x30, 0x10, 0xc0, 0x04, 0x12, 0x13, 0x0a, 0x0e, 0x52, 0x49, 0x50, 0x45, 0x4d, 0x44, 0x31, 0x36,
	0x30, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0xc1, 0x04, 0x12, 0x1b, 0x0a, 0x16, 0x52, 0x49, 0x50,
	0x45, 0x4d, 0x44, 0x31, 0x36, 0x30, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45,
	0x52, 0x41, 0x4c, 0x10, 0xc2, 0x04, 0x12, 0x0b, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36,
	0x10, 0xd0, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x5f, 0x48, 0x4d,
	0x41, 0x43, 0x10, 0xd1, 0x04, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x5f,
	0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xd2, 0x04, 0x12,
	0x0b, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x32, 0x32, 0x34, 0x10, 0xd5, 0x04, 0x12, 0x10, 0x0a, 0x0b,
	0x53, 0x48, 0x41, 0x32, 0x32, 0x34, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0xd6, 0x04, 0x12, 0x18,
	0x0a, 0x13, 0x53, 0x48, 0x41, 0x32, 0x32, 0x34, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45,
	0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xd7, 0x04, 0x12, 0x0b, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x33,
	0x38, 0x34, 0x10, 0xe0, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x48, 0x41, 0x33, 0x38, 0x34, 0x5f,
	0x48, 0x4d, 0x41, 0x43, 0x10, 0xe1, 0x04, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x48, 0x41, 0x33, 0x38,
	0x34, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xe2,
	0x04, 0x12, 0x0b, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x10, 0xf0, 0x04, 0x12, 0x10,
	0x0a, 0x0b, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0xf1, 0x04,
	0x12, 0x18, 0x0a, 0x13, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f,
	0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xf2, 0x04, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x45,
	0x43, 0x55, 0x52, 0x49, 0x44, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x80, 0x05,
	0x12, 0x0c, 0x0a, 0x07, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x44, 0x10, 0x82, 0x05, 0x12, 0x11,
	0x0a, 0x0c, 0x48, 0x4f, 0x54, 0x50, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x90,
	0x05, 0x12, 0x09, 0x0a, 0x04, 0x48, 0x4f, 0x54, 0x50, 0x10, 0x91, 0x05, 0x12, 0x09, 0x0a, 0x04,
	0x41, 0x43, 0x54, 0x49, 0x10, 0xa0, 0x05, 0x12, 0x11, 0x0a, 0x0c, 0x41, 0x43, 0x54, 0x49, 0x5f,
	0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xa1, 0x05, 0x12, 0x0d, 0x0a, 0x08, 0x53, 0x48,
	0x41, 0x33, 0x5f, 0x32, 0x35, 0x36, 0x10, 0xb0, 0x05, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x48, 0x41,
	0x33, 0x5f, 0x32, 0x35, 0x36, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0xb1, 0x05, 0x12, 0x1a, 0x0a,
	0x15, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x35, 0x36, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xb2, 0x05, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x48, 0x41,
	0x33, 0x5f, 0x32, 0x35, 0x36, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xb3, 0x05,
	0x12, 0x0d, 0x0a, 0x08, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x32, 0x34, 0x10, 0xb5, 0x05, 0x12,
	0x12, 0x0a, 0x0d, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x32, 0x34, 0x5f, 0x48, 0x4d, 0x41, 0x43,
	0x10, 0xb6, 0x05, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x32, 0x34, 0x5f,
	0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xb7, 0x05, 0x12,
	0x15, 0x0a, 0x10, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x32, 0x34, 0x5f, 0x4b, 0x45, 0x59, 0x5f,
	0x47, 0x45, 0x4e, 0x10, 0xb8, 0x05, 0x12, 0x0d, 0x0a, 0x08, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x33,
	0x38, 0x34, 0x10, 0xc0, 0x05, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x33, 0x38,
	0x34, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0xc1, 0x05, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x48, 0x41,
	0x33, 0x5f, 0x33, 0x38, 0x34, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52,
	0x41, 0x4c, 0x10, 0xc2, 0x05, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x33, 0x38,
	0x34, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xc3, 0x05, 0x12, 0x0d, 0x0a, 0x08,
	0x53, 0x48, 0x41, 0x33, 0x5f, 0x35, 0x31, 0x32, 0x10, 0xd0, 0x05, 0x12, 0x12, 0x0a, 0x0d, 0x53,
	0x48, 0x41, 0x33, 0x5f, 0x35, 0x31, 0x32, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0xd1, 0x05, 0x12,
	0x1a, 0x0a, 0x15, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x35, 0x31, 0x32, 0x5f, 0x48, 0x4d, 0x41, 0x43,
	0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xd2, 0x05, 0x12, 0x15, 0x0a, 0x10, 0x53,
	0x48, 0x41, 0x33, 0x5f, 0x35, 0x31, 0x32, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10,
	0xd3, 0x05, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47,
	0x45, 0x4e, 0x10, 0x80, 0x06, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x45, 0x43,
	0x42, 0x10, 0x81, 0x06, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x43, 0x42, 0x43,
	0x10, 0x82, 0x06, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x43, 0x10,
	0x83, 0x06, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x84, 0x06, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x41, 0x53,
	0x54, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0x85, 0x06, 0x12, 0x12, 0x0a, 0x0d,
	0x43, 0x41, 0x53, 0x54, 0x33, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x90, 0x06,
	0x12, 0x0e, 0x0a, 0x09, 0x43, 0x41, 0x53, 0x54, 0x33, 0x5f, 0x45, 0x43, 0x42, 0x10, 0x91, 0x06,
	0x12, 0x0e, 0x0a, 0x09, 0x43, 0x41, 0x53, 0x54, 0x33, 0x5f, 0x43, 0x42, 0x43, 0x10, 0x92, 0x06,
	0x12, 0x0e, 0x0a, 0x09, 0x43, 0x41, 0x53, 0x54, 0x33, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0x93, 0x06,
	0x12, 0x16, 0x0a, 0x11, 0x43, 0x41, 0x53, 0x54, 0x33, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45,
	0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x94, 0x06, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x41, 0x53, 0x54,
	0x33, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0x95, 0x06, 0x12, 0x12, 0x0a, 0x0d,
	0x43, 0x41, 0x53, 0x54, 0x35, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xa0, 0x06,
	0x12, 0x0e, 0x0a, 0x09, 0x43, 0x41, 0x53, 0x54, 0x35, 0x5f, 0x45, 0x43, 0x42, 0x10, 0xa1, 0x06,
	0x12, 0x0e, 0x0a, 0x09, 0x43, 0x41, 0x53, 0x54, 0x35, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xa2, 0x06,
	0x12, 0x0e, 0x0a, 0x09, 0x43, 0x41, 0x53, 0x54, 0x35, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0xa3, 0x06,
	0x12, 0x16, 0x0a, 0x11, 0x43, 0x41, 0x53, 0x54, 0x35, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45,
	0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xa4, 0x06, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x41, 0x53, 0x54,
	0x35, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0xa5, 0x06, 0x12, 0x10, 0x0a, 0x0b,
	0x52, 0x43, 0x35, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xb0, 0x06, 0x12, 0x0c,
	0x0a, 0x07, 0x52, 0x43, 0x35, 0x5f, 0x45, 0x43, 0x42, 0x10, 0xb1, 0x06, 0x12, 0x0c, 0x0a, 0x07,
	0x52, 0x43, 0x35, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xb2, 0x06, 0x12, 0x0c, 0x0a, 0x07, 0x52, 0x43,
	0x35, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0xb3, 0x06, 0x12, 0x14, 0x0a, 0x0f, 0x52, 0x43, 0x35, 0x5f,
	0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xb4, 0x06, 0x12, 0x10,
	0x0a, 0x0b, 0x52, 0x43, 0x35, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0xb5, 0x06,
	0x12, 0x11, 0x0a, 0x0c, 0x49, 0x44, 0x45, 0x41, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e,
	0x10, 0xc0, 0x06, 0x12, 0x0d, 0x0a, 0x08, 0x49, 0x44, 0x45, 0x41, 0x5f, 0x45, 0x43, 0x42, 0x10,
	0xc1, 0x06, 0x12, 0x0d, 0x0a, 0x08, 0x49, 0x44, 0x45, 0x41, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xc2,
	0x06, 0x12, 0x0d, 0x0a, 0x08, 0x49, 0x44, 0x45, 0x41, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0xc3, 0x06,
	0x12, 0x15, 0x0a, 0x10, 0x49, 0x44, 0x45, 0x41, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x4c, 0x10, 0xc4, 0x06, 0x12, 0x11, 0x0a, 0x0c, 0x49, 0x44, 0x45, 0x41, 0x5f,
	0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0xc5, 0x06, 0x12, 0x1b, 0x0a, 0x16, 0x47, 0x45,
	0x4e, 0x45, 0x52, 0x49, 0x43, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x47, 0x45, 0x4e, 0x10, 0xd0, 0x06, 0x12, 0x1d, 0x0a, 0x18, 0x43, 0x4f, 0x4e, 0x43, 0x41,
	0x54, 0x45, 0x4e, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x5f,
	0x4b, 0x45, 0x59, 0x10, 0xe0, 0x06, 0x12, 0x1e, 0x0a, 0x19, 0x43, 0x4f, 0x4e, 0x43, 0x41, 0x54,
	0x45, 0x4e, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x10, 0xe2, 0x06, 0x12, 0x1e, 0x0a, 0x19, 0x43, 0x4f, 0x4e, 0x43, 0x41, 0x54,
	0x45, 0x4e, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x42,
	0x41, 0x53, 0x45, 0x10, 0xe3, 0x06, 0x12, 0x16, 0x0a, 0x11, 0x58, 0x4f, 0x52, 0x5f, 0x42, 0x41,
	0x53, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0xe4, 0x06, 0x12, 0x19,
	0x0a, 0x14, 0x45, 0x58, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x46, 0x52,
	0x4f, 0x4d, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0xe5, 0x06, 0x12, 0x1c, 0x0a, 0x17, 0x53, 0x53, 0x4c,
	0x33, 0x5f, 0x50, 0x52, 0x45, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x47, 0x45, 0x4e, 0x10, 0xf0, 0x06, 0x12, 0x1b, 0x0a, 0x16, 0x53, 0x53, 0x4c, 0x33, 0x5f,
	0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56,
	0x45, 0x10, 0xf1, 0x06, 0x12, 0x1c, 0x0a, 0x17, 0x53, 0x53, 0x4c, 0x33, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10,
	0xf2, 0x06, 0x12, 0x1e, 0x0a, 0x19, 0x53, 0x53, 0x4c, 0x33, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45,
	0x52, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x5f, 0x44, 0x48, 0x10,
	0xf3, 0x06, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x4c, 0x53, 0x5f, 0x50, 0x52, 0x45, 0x5f, 0x4d, 0x41,
	0x53, 0x54, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xf4, 0x06, 0x12,
	0x1a, 0x0a, 0x15, 0x54, 0x4c, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4b, 0x45,
	0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0xf5, 0x06, 0x12, 0x1b, 0x0a, 0x16, 0x54,
	0x4c, 0x53, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x44,
	0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0xf6, 0x06, 0x12, 0x1d, 0x0a, 0x18, 0x54, 0x4c, 0x53, 0x5f,
	0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56,
	0x45, 0x5f, 0x44, 0x48, 0x10, 0xf7, 0x06, 0x12, 0x0c, 0x0a, 0x07, 0x54, 0x4c, 0x53, 0x5f, 0x50,
	0x52, 0x46, 0x10, 0xf8, 0x06, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x53, 0x4c, 0x33, 0x5f, 0x4d, 0x44,
	0x35, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0x80, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x53, 0x4c, 0x33,
	0x5f, 0x53, 0x48, 0x41, 0x31, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0x81, 0x07, 0x12, 0x17, 0x0a, 0x12,
	0x4d, 0x44, 0x35, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x90, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x4d, 0x44, 0x32, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x91, 0x07, 0x12, 0x18,
	0x0a, 0x13, 0x53, 0x48, 0x41, 0x31, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x92, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x48, 0x41, 0x32,
	0x35, 0x36, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x93, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x48, 0x41, 0x33, 0x38, 0x34, 0x5f, 0x4b,
	0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x94, 0x07,
	0x12, 0x1a, 0x0a, 0x15, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44,
	0x45, 0x52, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x95, 0x07, 0x12, 0x1a, 0x0a, 0x15,
	0x53, 0x48, 0x41, 0x32, 0x32, 0x34, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x96, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x53, 0x48, 0x41, 0x33,
	0x5f, 0x32, 0x35, 0x36, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x97, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32,
	0x32, 0x34, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x98, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x33, 0x38, 0x34,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x99, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x35, 0x31, 0x32, 0x5f, 0x4b,
	0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x9a, 0x07,
	0x12, 0x1d, 0x0a, 0x18, 0x53, 0x48, 0x41, 0x4b, 0x45, 0x5f, 0x31, 0x32, 0x38, 0x5f, 0x4b, 0x45,
	0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x9b, 0x07, 0x12,
	0x1d, 0x0a, 0x18, 0x53, 0x48, 0x41, 0x4b, 0x45, 0x5f, 0x32, 0x35, 0x36, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x9c, 0x07, 0x12, 0x14,
	0x0a, 0x0f, 0x50, 0x42, 0x45, 0x5f, 0x4d, 0x44, 0x32, 0x5f, 0x44, 0x45, 0x53, 0x5f, 0x43, 0x42,
	0x43, 0x10, 0xa0, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x50, 0x42, 0x45, 0x5f, 0x4d, 0x44, 0x35, 0x5f,
	0x44, 0x45, 0x53, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xa1, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x50, 0x42,
	0x45, 0x5f, 0x4d, 0x44, 0x35, 0x5f, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xa2,
	0x07, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x42, 0x45, 0x5f, 0x4d, 0x44, 0x35, 0x5f, 0x43, 0x41, 0x53,
	0x54, 0x33, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xa3, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x42, 0x45,
	0x5f, 0x4d, 0x44, 0x35, 0x5f, 0x43, 0x41, 0x53, 0x54, 0x35, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xa4,
	0x07, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x42, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x31, 0x5f, 0x43, 0x41,
	0x53, 0x54, 0x35, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xa5, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x50, 0x42,
	0x45, 0x5f, 0x53, 0x48, 0x41, 0x31, 0x5f, 0x52, 0x43, 0x34, 0x5f, 0x31, 0x32, 0x38, 0x10, 0xa6,
	0x07, 0x12, 0x14, 0x0a, 0x0f, 0x50, 0x42, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x31, 0x5f, 0x52, 0x43,
	0x34, 0x5f, 0x34, 0x30, 0x10, 0xa7, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x42, 0x45, 0x5f, 0x53,
	0x48, 0x41, 0x31, 0x5f, 0x44, 0x45, 0x53, 0x33, 0x5f, 0x45, 0x44, 0x45, 0x5f, 0x43, 0x42, 0x43,
	0x10, 0xa8, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x42, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x31, 0x5f,
	0x44, 0x45, 0x53, 0x32, 0x5f, 0x45, 0x44, 0x45, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xa9, 0x07, 0x12,
	0x19, 0x0a, 0x14, 0x50, 0x42, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x31, 0x5f, 0x52, 0x43, 0x32, 0x5f,
	0x31, 0x32, 0x38, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xaa, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x50, 0x42,
	0x45, 0x5f, 0x53, 0x48, 0x41, 0x31, 0x5f, 0x52, 0x43, 0x32, 0x5f, 0x34, 0x30, 0x5f, 0x43, 0x42,
	0x43, 0x10, 0xab, 0x07, 0x12, 0x10, 0x0a, 0x0b, 0x50, 0x4b, 0x43, 0x53, 0x35, 0x5f, 0x50, 0x42,
	0x4b, 0x44, 0x32, 0x10, 0xb0, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x42, 0x41, 0x5f, 0x53, 0x48,
	0x41, 0x31, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x53, 0x48, 0x41, 0x31, 0x5f, 0x48, 0x4d, 0x41,
	0x43, 0x10, 0xc0, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x57, 0x54, 0x4c, 0x53, 0x5f, 0x50, 0x52, 0x45,
	0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10,
	0xd0, 0x07, 0x12, 0x1b, 0x0a, 0x16, 0x57, 0x54, 0x4c, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45,
	0x52, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0xd1, 0x07, 0x12,
	0x22, 0x0a, 0x1d, 0x57, 0x54, 0x4c, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4b,
	0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x5f, 0x44, 0x48, 0x5f, 0x45, 0x43, 0x43,
	0x10, 0xd2, 0x07, 0x12, 0x0d, 0x0a, 0x08, 0x57, 0x54, 0x4c, 0x53, 0x5f, 0x50, 0x52, 0x46, 0x10,
	0xd3, 0x07, 0x12, 0x23, 0x0a, 0x1e, 0x57, 0x54, 0x4c, 0x53, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x52, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x44, 0x45,
	0x52, 0x49, 0x56, 0x45, 0x10, 0xd4, 0x07, 0x12, 0x23, 0x0a, 0x1e, 0x57, 0x54, 0x4c, 0x53, 0x5f,
	0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4d,
	0x41, 0x43, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0xd5, 0x07, 0x12, 0x0e, 0x0a, 0x09,
	0x54, 0x4c, 0x53, 0x31, 0x32, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0xd8, 0x07, 0x12, 0x0e, 0x0a, 0x09,
	0x54, 0x4c, 0x53, 0x31, 0x32, 0x5f, 0x4b, 0x44, 0x46, 0x10, 0xd9, 0x07, 0x12, 0x1c, 0x0a, 0x17,
	0x54, 0x4c, 0x53, 0x31, 0x32, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0xe0, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x54, 0x4c,
	0x53, 0x31, 0x32, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4d, 0x41, 0x43, 0x5f,
	0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0xe1, 0x07, 0x12, 0x1f, 0x0a, 0x1a, 0x54, 0x4c, 0x53,
	0x31, 0x32, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45,
	0x52, 0x49, 0x56, 0x45, 0x5f, 0x44, 0x48, 0x10, 0xe2, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x54, 0x4c,
	0x53, 0x31, 0x32, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x53, 0x41, 0x46, 0x45, 0x5f, 0x44, 0x45, 0x52,
	0x49, 0x56, 0x45, 0x10, 0xe3, 0x07, 0x12, 0x0c, 0x0a, 0x07, 0x54, 0x4c, 0x53, 0x5f, 0x4d, 0x41,
	0x43, 0x10, 0xe4, 0x07, 0x12, 0x0c, 0x0a, 0x07, 0x54, 0x4c, 0x53, 0x5f, 0x4b, 0x44, 0x46, 0x10,
	0xe5, 0x07, 0x12, 0x13, 0x0a, 0x0e, 0x4b, 0x45, 0x59, 0x5f, 0x57, 0x52, 0x41, 0x50, 0x5f, 0x4c,
	0x59, 0x4e, 0x4b, 0x53, 0x10, 0x80, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x4b, 0x45, 0x59, 0x5f, 0x57,
	0x52, 0x41, 0x50, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x4f, 0x41, 0x45, 0x50, 0x10, 0x81, 0x08, 0x12,
	0x0c, 0x0a, 0x07, 0x43, 0x4d, 0x53, 0x5f, 0x53, 0x49, 0x47, 0x10, 0x80, 0x0a, 0x12, 0x0f, 0x0a,
	0x0a, 0x4b, 0x49, 0x50, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0x90, 0x0a, 0x12, 0x0d,
	0x0a, 0x08, 0x4b, 0x49, 0x50, 0x5f, 0x57, 0x52, 0x41, 0x50, 0x10, 0x91, 0x0a, 0x12, 0x0c, 0x0a,
	0x07, 0x4b, 0x49, 0x50, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0x92, 0x0a, 0x12, 0x15, 0x0a, 0x10, 0x43,
	0x41, 0x4d, 0x45, 0x4c, 0x4c, 0x49, 0x41, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10,
	0xd0, 0x0a, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x41, 0x4d, 0x45, 0x4c, 0x4c, 0x49, 0x41, 0x5f, 0x45,
	0x43, 0x42, 0x10, 0xd1, 0x0a, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x41, 0x4d, 0x45, 0x4c, 0x4c, 0x49,
	0x41, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xd2, 0x0a, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x41, 0x4d, 0x45,
	0x4c, 0x4c, 0x49, 0x41, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0xd3, 0x0a, 0x12, 0x19, 0x0a, 0x14, 0x43,
	0x41, 0x4d, 0x45, 0x4c, 0x4c, 0x49, 0x41, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45,
	0x52, 0x41, 0x4c, 0x10, 0xd4, 0x0a, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x41, 0x4d, 0x45, 0x4c, 0x4c,
	0x49, 0x41, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0xd5, 0x0a, 0x12, 0x1e, 0x0a,
	0x19, 0x43, 0x41, 0x4d, 0x45, 0x4c, 0x4c, 0x49, 0x41, 0x5f, 0x45, 0x43, 0x42, 0x5f, 0x45, 0x4e,
	0x43, 0x52, 0x59, 0x50, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0xd6, 0x0a, 0x12, 0x1e, 0x0a,
	0x19, 0x43, 0x41, 0x4d, 0x45, 0x4c, 0x4c, 0x49, 0x41, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x45, 0x4e,
	0x43, 0x52, 0x59, 0x50, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0xd7, 0x0a, 0x12, 0x11, 0x0a,
	0x0c, 0x43, 0x41, 0x4d, 0x45, 0x4c, 0x4c, 0x49, 0x41, 0x5f, 0x43, 0x54, 0x52, 0x10, 0xd8, 0x0a,
	0x12, 0x11, 0x0a, 0x0c, 0x41, 0x52, 0x49, 0x41, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e,
	0x10, 0xe0, 0x0a, 0x12, 0x0d, 0x0a, 0x08, 0x41, 0x52, 0x49, 0x41, 0x5f, 0x45, 0x43, 0x42, 0x10,
	0xe1, 0x0a, 0x12, 0x0d, 0x0a, 0x08, 0x41, 0x52, 0x49, 0x41, 0x5f, 0x43, 0x42, 0x43, 0x10, 0xe2,
	0x0a, 0x12, 0x0d, 0x0a, 0x08, 0x41, 0x52, 0x49, 0x41, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0xe3, 0x0a,
	0x12, 0x15, 0x0a, 0x10, 0x41, 0x52, 0x49, 0x41, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x4c, 0x10, 0xe4, 0x0a, 0x12, 0x11, 0x0a, 0x0c, 0x41, 0x52, 0x49, 0x41, 0x5f,
	0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0xe5, 0x0a, 0x12, 0x1a, 0x0a, 0x15, 0x41, 0x52,
	0x49, 0x41, 0x5f, 0x45, 0x43, 0x42, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x10, 0xe6, 0x0a, 0x12, 0x1a, 0x0a, 0x15, 0x41, 0x52, 0x49, 0x41, 0x5f, 0x43,
	0x42, 0x43, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10,
	0xe7, 0x0a, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x45, 0x45, 0x44, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47,
	0x45, 0x4e, 0x10, 0xd0, 0x0c, 0x12, 0x0d, 0x0a, 0x08, 0x53, 0x45, 0x45, 0x44, 0x5f, 0x45, 0x43,
	0x42, 0x10, 0xd1, 0x0c, 0x12, 0x0d, 0x0a, 0x08, 0x53, 0x45, 0x45, 0x44, 0x5f, 0x43, 0x42, 0x43,
	0x10, 0xd2, 0x0c, 0x12, 0x0d, 0x0a, 0x08, 0x53, 0x45, 0x45, 0x44, 0x5f, 0x4d, 0x41, 0x43, 0x10,
	0xd3, 0x0c, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x45, 0x45, 0x44, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0xd4, 0x0c, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x45, 0x45,
	0x44, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0xd5, 0x0c, 0x12, 0x1a, 0x0a, 0x15,
	0x53, 0x45, 0x45, 0x44, 0x5f, 0x45, 0x43, 0x42, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0xd6, 0x0c, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x45, 0x45, 0x44,
	0x5f, 0x43, 0x42, 0x43, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x10, 0xd7, 0x0c, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x4b, 0x49, 0x50, 0x4a, 0x41, 0x43, 0x4b,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x80, 0x20, 0x12, 0x13, 0x0a, 0x0e, 0x53,
	0x4b, 0x49, 0x50, 0x4a, 0x41, 0x43, 0x4b, 0x5f, 0x45, 0x43, 0x42, 0x36, 0x34, 0x10, 0x81, 0x20,
	0x12, 0x13, 0x0a, 0x0e, 0x53, 0x4b, 0x49, 0x50, 0x4a, 0x41, 0x43, 0x4b, 0x5f, 0x43, 0x42, 0x43,
	0x36, 0x34, 0x10, 0x82, 0x20, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x4b, 0x49, 0x50, 0x4a, 0x41, 0x43,
	0x4b, 0x5f, 0x4f, 0x46, 0x42, 0x36, 0x34, 0x10, 0x83, 0x20, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x4b,
	0x49, 0x50, 0x4a, 0x41, 0x43, 0x4b, 0x5f, 0x43, 0x46, 0x42, 0x36, 0x34, 0x10, 0x84, 0x20, 0x12,
	0x13, 0x0a, 0x0e, 0x53, 0x4b, 0x49, 0x50, 0x4a, 0x41, 0x43, 0x4b, 0x5f, 0x43, 0x46, 0x42, 0x33,
	0x32, 0x10, 0x85, 0x20, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x4b, 0x49, 0x50, 0x4a, 0x41, 0x43, 0x4b,
	0x5f, 0x43, 0x46, 0x42, 0x31, 0x36, 0x10, 0x86, 0x20, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x4b, 0x49,
	0x50, 0x4a, 0x41, 0x43, 0x4b, 0x5f, 0x43, 0x46, 0x42, 0x38, 0x10, 0x87, 0x20, 0x12, 0x12, 0x0a,
	0x0d, 0x53, 0x4b, 0x49, 0x50, 0x4a, 0x41, 0x43, 0x4b, 0x5f, 0x57, 0x52, 0x41, 0x50, 0x10, 0x88,
	0x20, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x4b, 0x49, 0x50, 0x4a, 0x41, 0x43, 0x4b, 0x5f, 0x50, 0x52,
	0x49, 0x56, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x52, 0x41, 0x50, 0x10, 0x89, 0x20, 0x12, 0x14, 0x0a,
	0x0f, 0x53, 0x4b, 0x49, 0x50, 0x4a, 0x41, 0x43, 0x4b, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x59, 0x58,
	0x10, 0x8a, 0x20, 0x12, 0x15, 0x0a, 0x10, 0x4b, 0x45, 0x41, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x50,
	0x41, 0x49, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x90, 0x20, 0x12, 0x13, 0x0a, 0x0e, 0x4b, 0x45,
	0x41, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0x91, 0x20, 0x12,
	0x0f, 0x0a, 0x0a, 0x4b, 0x45, 0x41, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0x92, 0x20,
	0x12, 0x17, 0x0a, 0x12, 0x46, 0x4f, 0x52, 0x54, 0x45, 0x5a, 0x5a, 0x41, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0xa0, 0x20, 0x12, 0x12, 0x0a, 0x0d, 0x42, 0x41, 0x54,
	0x4f, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xb0, 0x20, 0x12, 0x11, 0x0a,
	0x0c, 0x42, 0x41, 0x54, 0x4f, 0x4e, 0x5f, 0x45, 0x43, 0x42, 0x31, 0x32, 0x38, 0x10, 0xb1, 0x20,
	0x12, 0x10, 0x0a, 0x0b, 0x42, 0x41, 0x54, 0x4f, 0x4e, 0x5f, 0x45, 0x43, 0x42, 0x39, 0x36, 0x10,
	0xb2, 0x20, 0x12, 0x11, 0x0a, 0x0c, 0x42, 0x41, 0x54, 0x4f, 0x4e, 0x5f, 0x43, 0x42, 0x43, 0x31,
	0x32, 0x38, 0x10, 0xb3, 0x20, 0x12, 0x12, 0x0a, 0x0d, 0x42, 0x41, 0x54, 0x4f, 0x4e, 0x5f, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x10, 0xb4, 0x20, 0x12, 0x12, 0x0a, 0x0d, 0x42, 0x41, 0x54,
	0x4f, 0x4e, 0x5f, 0x53, 0x48, 0x55, 0x46, 0x46, 0x4c, 0x45, 0x10, 0xb5, 0x20, 0x12, 0x0f, 0x0a,
	0x0a, 0x42, 0x41, 0x54, 0x4f, 0x4e, 0x5f, 0x57, 0x52, 0x41, 0x50, 0x10, 0xb6, 0x20, 0x12, 0x14,
	0x0a, 0x0f, 0x45, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x5f, 0x47, 0x45,
	0x4e, 0x10, 0xc0, 0x20, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x43, 0x44, 0x53, 0x41, 0x10, 0xc1, 0x20,
	0x12, 0x0f, 0x0a, 0x0a, 0x45, 0x43, 0x44, 0x53, 0x41, 0x5f, 0x53, 0x48, 0x41, 0x31, 0x10, 0xc2,
	0x20, 0x12, 0x11, 0x0a, 0x0c, 0x45, 0x43, 0x44, 0x53, 0x41, 0x5f, 0x53, 0x48, 0x41, 0x32, 0x32,
	0x34, 0x10, 0xc3, 0x20, 0x12, 0x11, 0x0a, 0x0c, 0x45, 0x43, 0x44, 0x53, 0x41, 0x5f, 0x53, 0x48,
	0x41, 0x32, 0x35, 0x36, 0x10, 0xc4, 0x20, 0x12, 0x11, 0x0a, 0x0c, 0x45, 0x43, 0x44, 0x53, 0x41,
	0x5f, 0x53, 0x48, 0x41, 0x33, 0x38, 0x34, 0x10, 0xc5, 0x20, 0x12, 0x11, 0x0a, 0x0c, 0x45, 0x43,
	0x44, 0x53, 0x41, 0x5f, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x10, 0xc6, 0x20, 0x12, 0x21, 0x0a,
	0x1c, 0x45, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x5f, 0x47, 0x45, 0x4e,
	0x5f, 0x57, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f, 0x42, 0x49, 0x54, 0x53, 0x10, 0x8b, 0x28,
	0x12, 0x11, 0x0a, 0x0c, 0x45, 0x43, 0x44, 0x48, 0x31, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45,
	0x10, 0xd0, 0x20, 0x12, 0x1a, 0x0a, 0x15, 0x45, 0x43, 0x44, 0x48, 0x31, 0x5f, 0x43, 0x4f, 0x46,
	0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0xd1, 0x20, 0x12,
	0x11, 0x0a, 0x0c, 0x45, 0x43, 0x4d, 0x51, 0x56, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10,
	0xd2, 0x20, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x43, 0x44, 0x48, 0x5f, 0x41, 0x45, 0x53, 0x5f, 0x4b,
	0x45, 0x59, 0x5f, 0x57, 0x52, 0x41, 0x50, 0x10, 0xd3, 0x20, 0x12, 0x15, 0x0a, 0x10, 0x52, 0x53,
	0x41, 0x5f, 0x41, 0x45, 0x53, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x57, 0x52, 0x41, 0x50, 0x10, 0xd4,
	0x20, 0x12, 0x14, 0x0a, 0x0f, 0x4a, 0x55, 0x4e, 0x49, 0x50, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x47, 0x45, 0x4e, 0x10, 0xe0, 0x20, 0x12, 0x13, 0x0a, 0x0e, 0x4a, 0x55, 0x4e, 0x49, 0x50,
	0x45, 0x52, 0x5f, 0x45, 0x43, 0x42, 0x31, 0x32, 0x38, 0x10, 0xe1, 0x20, 0x12, 0x13, 0x0a, 0x0e,
	0x4a, 0x55, 0x4e, 0x49, 0x50, 0x45, 0x52, 0x5f, 0x43, 0x42, 0x43, 0x31, 0x32, 0x38, 0x10, 0xe2,
	0x20, 0x12, 0x14, 0x0a, 0x0f, 0x4a, 0x55, 0x4e, 0x49, 0x50, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x45, 0x52, 0x10, 0xe3, 0x20, 0x12, 0x14, 0x0a, 0x0f, 0x4a, 0x55, 0x4e, 0x49, 0x50,
	0x45, 0x52, 0x5f, 0x53, 0x48, 0x55, 0x46, 0x46, 0x4c, 0x45, 0x10, 0xe4, 0x20, 0x12, 0x11, 0x0a,
	0x0c, 0x4a, 0x55, 0x4e, 0x49, 0x50, 0x45, 0x52, 0x5f, 0x57, 0x52, 0x41, 0x50, 0x10, 0xe5, 0x20,
	0x12, 0x0d, 0x0a, 0x08, 0x46, 0x41, 0x53, 0x54, 0x48, 0x41, 0x53, 0x48, 0x10, 0xf0, 0x20, 0x12,
	0x0c, 0x0a, 0x07, 0x41, 0x45, 0x53, 0x5f, 0x58, 0x54, 0x53, 0x10, 0xf1, 0x20, 0x12, 0x14, 0x0a,
	0x0f, 0x41, 0x45, 0x53, 0x5f, 0x58, 0x54, 0x53, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e,
	0x10, 0xf2, 0x20, 0x12, 0x10, 0x0a, 0x0b, 0x41, 0x45, 0x53, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47,
	0x45, 0x4e, 0x10, 0x80, 0x21, 0x12, 0x0c, 0x0a, 0x07, 0x41, 0x45, 0x53, 0x5f, 0x45, 0x43, 0x42,
	0x10, 0x81, 0x21, 0x12, 0x0c, 0x0a, 0x07, 0x41, 0x45, 0x53, 0x5f, 0x43, 0x42, 0x43, 0x10, 0x82,
	0x21, 0x12, 0x0c, 0x0a, 0x07, 0x41, 0x45, 0x53, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0x83, 0x21, 0x12,
	0x14, 0x0a, 0x0f, 0x41, 0x45, 0x53, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52,
	0x41, 0x4c, 0x10, 0x84, 0x21, 0x12, 0x10, 0x0a, 0x0b, 0x41, 0x45, 0x53, 0x5f, 0x43, 0x42, 0x43,
	0x5f, 0x50, 0x41, 0x44, 0x10, 0x85, 0x21, 0x12, 0x0c, 0x0a, 0x07, 0x41, 0x45, 0x53, 0x5f, 0x43,
	0x54, 0x52, 0x10, 0x86, 0x21, 0x12, 0x0c, 0x0a, 0x07, 0x41, 0x45, 0x53, 0x5f, 0x47, 0x43, 0x4d,
	0x10, 0x87, 0x21, 0x12, 0x0c, 0x0a, 0x07, 0x41, 0x45, 0x53, 0x5f, 0x43, 0x43, 0x4d, 0x10, 0x88,
	0x21, 0x12, 0x0c, 0x0a, 0x07, 0x41, 0x45, 0x53, 0x5f, 0x43, 0x54, 0x53, 0x10, 0x89, 0x21, 0x12,
	0x0d, 0x0a, 0x08, 0x41, 0x45, 0x53, 0x5f, 0x43, 0x4d, 0x41, 0x43, 0x10, 0x8a, 0x21, 0x12, 0x15,
	0x0a, 0x10, 0x41, 0x45, 0x53, 0x5f, 0x43, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52,
	0x41, 0x4c, 0x10, 0x8b, 0x21, 0x12, 0x11, 0x0a, 0x0c, 0x41, 0x45, 0x53, 0x5f, 0x58, 0x43, 0x42,
	0x43, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0x8c, 0x21, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x45, 0x53, 0x5f,
	0x58, 0x43, 0x42, 0x43, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x39, 0x36, 0x10, 0x8d, 0x21, 0x12, 0x0d,
	0x0a, 0x08, 0x41, 0x45, 0x53, 0x5f, 0x47, 0x4d, 0x41, 0x43, 0x10, 0x8e, 0x21, 0x12, 0x15, 0x0a,
	0x10, 0x42, 0x4c, 0x4f, 0x57, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45,
	0x4e, 0x10, 0x90, 0x21, 0x12, 0x11, 0x0a, 0x0c, 0x42, 0x4c, 0x4f, 0x57, 0x46, 0x49, 0x53, 0x48,
	0x5f, 0x43, 0x42, 0x43, 0x10, 0x91, 0x21, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x57, 0x4f, 0x46, 0x49,
	0x53, 0x48, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x92, 0x21, 0x12, 0x10, 0x0a,
	0x0b, 0x54, 0x57, 0x4f, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x43, 0x42, 0x43, 0x10, 0x93, 0x21, 0x12,
	0x15, 0x0a, 0x10, 0x42, 0x4c, 0x4f, 0x57, 0x46, 0x49, 0x53, 0x48, 0x5f, 0x43, 0x42, 0x43, 0x5f,
	0x50, 0x41, 0x44, 0x10, 0x94, 0x21, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x57, 0x4f, 0x46, 0x49, 0x53,
	0x48, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x50, 0x41, 0x44, 0x10, 0x95, 0x21, 0x12, 0x19, 0x0a, 0x14,
	0x44, 0x45, 0x53, 0x5f, 0x45, 0x43, 0x42, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x10, 0x80, 0x22, 0x12, 0x19, 0x0a, 0x14, 0x44, 0x45, 0x53, 0x5f, 0x43,
	0x42, 0x43, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10,
	0x81, 0x22, 0x12, 0x1a, 0x0a, 0x15, 0x44, 0x45, 0x53, 0x33, 0x5f, 0x45, 0x43, 0x42, 0x5f, 0x45,
	0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x82, 0x22, 0x12, 0x1a,
	0x0a, 0x15, 0x44, 0x45, 0x53, 0x33, 0x5f, 0x43, 0x42, 0x43, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59,
	0x50, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x83, 0x22, 0x12, 0x19, 0x0a, 0x14, 0x41, 0x45,
	0x53, 0x5f, 0x45, 0x43, 0x42, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x10, 0x84, 0x22, 0x12, 0x19, 0x0a, 0x14, 0x41, 0x45, 0x53, 0x5f, 0x43, 0x42, 0x43,
	0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x85, 0x22,
	0x12, 0x1b, 0x0a, 0x16, 0x47, 0x4f, 0x53, 0x54, 0x52, 0x33, 0x34, 0x31, 0x30, 0x5f, 0x4b, 0x45,
	0x59, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x80, 0x24, 0x12, 0x0e, 0x0a,
	0x09, 0x47, 0x4f, 0x53, 0x54, 0x52, 0x33, 0x34, 0x31, 0x30, 0x10, 0x81, 0x24, 0x12, 0x1d, 0x0a,
	0x18, 0x47, 0x4f, 0x53, 0x54, 0x52, 0x33, 0x34, 0x31, 0x30, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f,
	0x47, 0x4f, 0x53, 0x54, 0x52, 0x33, 0x34, 0x31, 0x31, 0x10, 0x82, 0x24, 0x12, 0x17, 0x0a, 0x12,
	0x47, 0x4f, 0x53, 0x54, 0x52, 0x33, 0x34, 0x31, 0x30, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x57, 0x52,
	0x41, 0x50, 0x10, 0x83, 0x24, 0x12, 0x15, 0x0a, 0x10, 0x47, 0x4f, 0x53, 0x54, 0x52, 0x33, 0x34,
	0x31, 0x30, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0x84, 0x24, 0x12, 0x0e, 0x0a, 0x09,
	0x47, 0x4f, 0x53, 0x54, 0x52, 0x33, 0x34, 0x31, 0x31, 0x10, 0x90, 0x24, 0x12, 0x13, 0x0a, 0x0e,
	0x47, 0x4f, 0x53, 0x54, 0x52, 0x33, 0x34, 0x31, 0x31, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0x91,
	0x24, 0x12, 0x16, 0x0a, 0x11, 0x47, 0x4f, 0x53, 0x54, 0x32, 0x38, 0x31, 0x34, 0x37, 0x5f, 0x4b,
	0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xa0, 0x24, 0x12, 0x12, 0x0a, 0x0d, 0x47, 0x4f, 0x53,
	0x54, 0x32, 0x38, 0x31, 0x34, 0x37, 0x5f, 0x45, 0x43, 0x42, 0x10, 0xa1, 0x24, 0x12, 0x0e, 0x0a,
	0x09, 0x47, 0x4f, 0x53, 0x54, 0x32, 0x38, 0x31, 0x34, 0x37, 0x10, 0xa2, 0x24, 0x12, 0x12, 0x0a,
	0x0d, 0x47, 0x4f, 0x53, 0x54, 0x32, 0x38, 0x31, 0x34, 0x37, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0xa3,
	0x24, 0x12, 0x17, 0x0a, 0x12, 0x47, 0x4f, 0x53, 0x54, 0x32, 0x38, 0x31, 0x34, 0x37, 0x5f, 0x4b,
	0x45, 0x59, 0x5f, 0x57, 0x52, 0x41, 0x50, 0x10, 0xa4, 0x24, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x48,
	0x41, 0x43, 0x48, 0x41, 0x32, 0x30, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xa5,
	0x24, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x48, 0x41, 0x43, 0x48, 0x41, 0x32, 0x30, 0x10, 0xa6, 0x24,
	0x12, 0x15, 0x0a, 0x10, 0x50, 0x4f, 0x4c, 0x59, 0x31, 0x33, 0x30, 0x35, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x47, 0x45, 0x4e, 0x10, 0xa7, 0x24, 0x12, 0x0d, 0x0a, 0x08, 0x50, 0x4f, 0x4c, 0x59, 0x31,
	0x33, 0x30, 0x35, 0x10, 0xa8, 0x24, 0x12, 0x16, 0x0a, 0x11, 0x44, 0x53, 0x41, 0x5f, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x80, 0x40, 0x12, 0x1a,
	0x0a, 0x15, 0x44, 0x48, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45,
	0x54, 0x45, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x81, 0x40, 0x12, 0x1b, 0x0a, 0x16, 0x58, 0x39,
	0x5f, 0x34, 0x32, 0x5f, 0x44, 0x48, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52,
	0x5f, 0x47, 0x45, 0x4e, 0x10, 0x82, 0x40, 0x12, 0x24, 0x0a, 0x1f, 0x44, 0x53, 0x41, 0x5f, 0x50,
	0x52, 0x4f, 0x42, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x53, 0x54, 0x49, 0x43, 0x5f, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x83, 0x40, 0x12, 0x23, 0x0a,
	0x1e, 0x44, 0x53, 0x41, 0x5f, 0x53, 0x48, 0x41, 0x57, 0x45, 0x5f, 0x54, 0x41, 0x59, 0x4c, 0x4f,
	0x52, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10,
	0x84, 0x40, 0x12, 0x13, 0x0a, 0x0e, 0x44, 0x53, 0x41, 0x5f, 0x46, 0x49, 0x50, 0x53, 0x5f, 0x47,
	0x5f, 0x47, 0x45, 0x4e, 0x10, 0x85, 0x40, 0x12, 0x0c, 0x0a, 0x07, 0x41, 0x45, 0x53, 0x5f, 0x4f,
	0x46, 0x42, 0x10, 0x84, 0x42, 0x12, 0x0e, 0x0a, 0x09, 0x41, 0x45, 0x53, 0x5f, 0x43, 0x46, 0x42,
	0x36, 0x34, 0x10, 0x85, 0x42, 0x12, 0x0d, 0x0a, 0x08, 0x41, 0x45, 0x53, 0x5f, 0x43, 0x46, 0x42,
	0x38, 0x10, 0x86, 0x42, 0x12, 0x0f, 0x0a, 0x0a, 0x41, 0x45, 0x53, 0x5f, 0x43, 0x46, 0x42, 0x31,
	0x32, 0x38, 0x10, 0x87, 0x42, 0x12, 0x0d, 0x0a, 0x08, 0x41, 0x45, 0x53, 0x5f, 0x43, 0x46, 0x42,
	0x31, 0x10, 0x88, 0x42, 0x12, 0x11, 0x0a, 0x0c, 0x41, 0x45, 0x53, 0x5f, 0x4b, 0x45, 0x59, 0x5f,
	0x57, 0x52, 0x41, 0x50, 0x10, 0x89, 0x42, 0x12, 0x15, 0x0a, 0x10, 0x41, 0x45, 0x53, 0x5f, 0x4b,
	0x45, 0x59, 0x5f, 0x57, 0x52, 0x41, 0x50, 0x5f, 0x50, 0x41, 0x44, 0x10, 0x8a, 0x42, 0x12, 0x15,
	0x0a, 0x10, 0x41, 0x45, 0x53, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x57, 0x52, 0x41, 0x50, 0x5f, 0x4b,
	0x57, 0x50, 0x10, 0x8b, 0x42, 0x12, 0x16, 0x0a, 0x10, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43,
	0x53, 0x5f, 0x54, 0x50, 0x4d, 0x5f, 0x31, 0x5f, 0x31, 0x10, 0x81, 0x80, 0x01, 0x12, 0x1b, 0x0a,
	0x15, 0x52, 0x53, 0x41, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x5f, 0x4f, 0x41, 0x45, 0x50, 0x5f, 0x54,
	0x50, 0x4d, 0x5f, 0x31, 0x5f, 0x31, 0x10, 0x82, 0x80, 0x01, 0x12, 0x13, 0x0a, 0x0d, 0x53, 0x48,
	0x41, 0x5f, 0x31, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x83, 0x80, 0x01, 0x12,
	0x14, 0x0a, 0x0e, 0x53, 0x48, 0x41, 0x32, 0x32, 0x34, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45,
	0x4e, 0x10, 0x84, 0x80, 0x01, 0x12, 0x14, 0x0a, 0x0e, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x5f,
	0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x85, 0x80, 0x01, 0x12, 0x14, 0x0a, 0x0e, 0x53,
	0x48, 0x41, 0x33, 0x38, 0x34, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x86, 0x80,
	0x01, 0x12, 0x14, 0x0a, 0x0e, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x4b, 0x45, 0x59, 0x5f,
	0x47, 0x45, 0x4e, 0x10, 0x87, 0x80, 0x01, 0x12, 0x18, 0x0a, 0x12, 0x53, 0x48, 0x41, 0x35, 0x31,
	0x32, 0x5f, 0x32, 0x32, 0x34, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x88, 0x80,
	0x01, 0x12, 0x18, 0x0a, 0x12, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x32, 0x35, 0x36, 0x5f,
	0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x89, 0x80, 0x01, 0x12, 0x16, 0x0a, 0x10, 0x53,
	0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10,
	0x8a, 0x80, 0x01, 0x12, 0x0a, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x8b, 0x80, 0x01, 0x12,
	0x11, 0x0a, 0x0b, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x31, 0x36, 0x30, 0x10, 0x8c,
	0x80, 0x01, 0x12, 0x16, 0x0a, 0x10, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x31, 0x36,
	0x30, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0x8d, 0x80, 0x01, 0x12, 0x1e, 0x0a, 0x18, 0x42, 0x4c,
	0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x31, 0x36, 0x30, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x8e, 0x80, 0x01, 0x12, 0x1c, 0x0a, 0x16, 0x42, 0x4c,
	0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x31, 0x36, 0x30, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45,
	0x52, 0x49, 0x56, 0x45, 0x10, 0x8f, 0x80, 0x01, 0x12, 0x19, 0x0a, 0x13, 0x42, 0x4c, 0x41, 0x4b,
	0x45, 0x32, 0x42, 0x5f, 0x31, 0x36, 0x30, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10,
	0x90, 0x80, 0x01, 0x12, 0x11, 0x0a, 0x0b, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x32,
	0x35, 0x36, 0x10, 0x91, 0x80, 0x01, 0x12, 0x16, 0x0a, 0x10, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32,
	0x42, 0x5f, 0x32, 0x35, 0x36, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0x92, 0x80, 0x01, 0x12, 0x1e,
	0x0a, 0x18, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x32, 0x35, 0x36, 0x5f, 0x48, 0x4d,
	0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x93, 0x80, 0x01, 0x12, 0x1c,
	0x0a, 0x16, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x32, 0x35, 0x36, 0x5f, 0x4b, 0x45,
	0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0x94, 0x80, 0x01, 0x12, 0x19, 0x0a, 0x13,
	0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x32, 0x35, 0x36, 0x5f, 0x4b, 0x45, 0x59, 0x5f,
	0x47, 0x45, 0x4e, 0x10, 0x95, 0x80, 0x01, 0x12, 0x11, 0x0a, 0x0b, 0x42, 0x4c, 0x41, 0x4b, 0x45,
	0x32, 0x42, 0x5f, 0x33, 0x38, 0x34, 0x10, 0x96, 0x80, 0x01, 0x12, 0x16, 0x0a, 0x10, 0x42, 0x4c,
	0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x33, 0x38, 0x34, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x10, 0x97,
	0x80, 0x01, 0x12, 0x1e, 0x0a, 0x18, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x33, 0x38,
	0x34, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x98,
	0x80, 0x01, 0x12, 0x1c, 0x0a, 0x16, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x33, 0x38,
	0x34, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0x99, 0x80, 0x01,
	0x12, 0x19, 0x0a, 0x13, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x33, 0x38, 0x34, 0x5f,
	0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x9a, 0x80, 0x01, 0x12, 0x11, 0x0a, 0x0b, 0x42,
	0x4c, 0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x35, 0x31, 0x32, 0x10, 0x9b, 0x80, 0x01, 0x12, 0x16,
	0x0a, 0x10, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f, 0x35, 0x31, 0x32, 0x5f, 0x48, 0x4d,
	0x41, 0x43, 0x10, 0x9c, 0x80, 0x01, 0x12, 0x1e, 0x0a, 0x18, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32,
	0x42, 0x5f, 0x35, 0x31, 0x32, 0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52,
	0x41, 0x4c, 0x10, 0x9d, 0x80, 0x01, 0x12, 0x1c, 0x0a, 0x16, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32,
	0x42, 0x5f, 0x35, 0x31, 0x32, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45,
	0x10, 0x9e, 0x80, 0x01, 0x12, 0x19, 0x0a, 0x13, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x42, 0x5f,
	0x35, 0x31, 0x32, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0x9f, 0x80, 0x01, 0x12,
	0x0d, 0x0a, 0x07, 0x53, 0x41, 0x4c, 0x53, 0x41, 0x32, 0x30, 0x10, 0xa0, 0x80, 0x01, 0x12, 0x17,
	0x0a, 0x11, 0x43, 0x48, 0x41, 0x43, 0x48, 0x41, 0x32, 0x30, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x31,
	0x33, 0x30, 0x35, 0x10, 0xa1, 0x80, 0x01, 0x12, 0x16, 0x0a, 0x10, 0x53, 0x41, 0x4c, 0x53, 0x41,
	0x32, 0x30, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x31, 0x33, 0x30, 0x35, 0x10, 0xa2, 0x80, 0x01, 0x12,
	0x15, 0x0a, 0x0f, 0x58, 0x33, 0x44, 0x48, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49,
	0x5a, 0x45, 0x10, 0xa3, 0x80, 0x01, 0x12, 0x12, 0x0a, 0x0c, 0x58, 0x33, 0x44, 0x48, 0x5f, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x44, 0x10, 0xa4, 0x80, 0x01, 0x12, 0x1a, 0x0a, 0x14, 0x58, 0x32,
	0x52, 0x41, 0x54, 0x43, 0x48, 0x45, 0x54, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49,
	0x5a, 0x45, 0x10, 0xa5, 0x80, 0x01, 0x12, 0x17, 0x0a, 0x11, 0x58, 0x32, 0x52, 0x41, 0x54, 0x43,
	0x48, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x44, 0x10, 0xa6, 0x80, 0x01, 0x12,
	0x17, 0x0a, 0x11, 0x58, 0x32, 0x52, 0x41, 0x54, 0x43, 0x48, 0x45, 0x54, 0x5f, 0x45, 0x4e, 0x43,
	0x52, 0x59, 0x50, 0x54, 0x10, 0xa7, 0x80, 0x01, 0x12, 0x17, 0x0a, 0x11, 0x58, 0x32, 0x52, 0x41,
	0x54, 0x43, 0x48, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x43, 0x52, 0x59, 0x50, 0x54, 0x10, 0xa8, 0x80,
	0x01, 0x12, 0x0c, 0x0a, 0x06, 0x58, 0x45, 0x44, 0x44, 0x53, 0x41, 0x10, 0xa9, 0x80, 0x01, 0x12,
	0x11, 0x0a, 0x0b, 0x48, 0x4b, 0x44, 0x46, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0xaa,
	0x80, 0x01, 0x12, 0x0f, 0x0a, 0x09, 0x48, 0x4b, 0x44, 0x46, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10,
	0xab, 0x80, 0x01, 0x12, 0x12, 0x0a, 0x0c, 0x48, 0x4b, 0x44, 0x46, 0x5f, 0x4b, 0x45, 0x59, 0x5f,
	0x47, 0x45, 0x4e, 0x10, 0xac, 0x80, 0x01, 0x12, 0x15, 0x0a, 0x0f, 0x53, 0x41, 0x4c, 0x53, 0x41,
	0x32, 0x30, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xad, 0x80, 0x01, 0x12, 0x13,
	0x0a, 0x0e, 0x45, 0x43, 0x44, 0x53, 0x41, 0x5f, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x32, 0x34,
	0x10, 0xc7, 0x20, 0x12, 0x13, 0x0a, 0x0e, 0x45, 0x43, 0x44, 0x53, 0x41, 0x5f, 0x53, 0x48, 0x41,
	0x33, 0x5f, 0x32, 0x35, 0x36, 0x10, 0xc8, 0x20, 0x12, 0x13, 0x0a, 0x0e, 0x45, 0x43, 0x44, 0x53,
	0x41, 0x5f, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x33, 0x38, 0x34, 0x10, 0xc9, 0x20, 0x12, 0x13, 0x0a,
	0x0e, 0x45, 0x43, 0x44, 0x53, 0x41, 0x5f, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x35, 0x31, 0x32, 0x10,
	0xca, 0x20, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x43, 0x5f, 0x45, 0x44, 0x57, 0x41, 0x52, 0x44, 0x53,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xd5, 0x20,
	0x12, 0x1f, 0x0a, 0x1a, 0x45, 0x43, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x47, 0x4f, 0x4d, 0x45, 0x52,
	0x59, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x10, 0xd6,
	0x20, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x44, 0x44, 0x53, 0x41, 0x10, 0xd7, 0x20, 0x12, 0x1a, 0x0a,
	0x15, 0x53, 0x50, 0x38, 0x30, 0x30, 0x5f, 0x31, 0x30, 0x38, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x45, 0x52, 0x5f, 0x4b, 0x44, 0x46, 0x10, 0xac, 0x07, 0x12, 0x1b, 0x0a, 0x16, 0x53, 0x50, 0x38,
	0x30, 0x30, 0x5f, 0x31, 0x30, 0x38, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b, 0x5f,
	0x4b, 0x44, 0x46, 0x10, 0xad, 0x07, 0x12, 0x22, 0x0a, 0x1d, 0x53, 0x50, 0x38, 0x30, 0x30, 0x5f,
	0x31, 0x30, 0x38, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x4c,
	0x49, 0x4e, 0x45, 0x5f, 0x4b, 0x44, 0x46, 0x10, 0xae, 0x07, 0x2a, 0x7f, 0x0a, 0x0c, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x4f,
	0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x4f, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x46, 0x55, 0x4e,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x57, 0x5f, 0x50,
	0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12,
	0x15, 0x0a, 0x11, 0x52, 0x57, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x53, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x57, 0x5f, 0x53, 0x4f, 0x5f,
	0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x04, 0x2a, 0x1c, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x4f, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x2a, 0xf1, 0x12, 0x0a, 0x0b, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x10, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x41,
	0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x42, 0x41, 0x44, 0x10, 0x07, 0x12, 0x0c,
	0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16,
	0x4e, 0x45, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x54,
	0x48, 0x52, 0x45, 0x41, 0x44, 0x53, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x54,
	0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x54, 0x54, 0x52, 0x49,
	0x42, 0x55, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x10,
	0x12, 0x17, 0x0a, 0x13, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x5f, 0x53, 0x45,
	0x4e, 0x53, 0x49, 0x54, 0x49, 0x56, 0x45, 0x10, 0x11, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x54, 0x54,
	0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x12, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x55,
	0x54, 0x45, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x13, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x4f,
	0x48, 0x49, 0x42, 0x49, 0x54, 0x45, 0x44, 0x10, 0x1b, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x20, 0x12, 0x12, 0x0a, 0x0e, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x4c, 0x45, 0x4e, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x21, 0x12,
	0x10, 0x0a, 0x0c, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x30, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x4f,
	0x52, 0x59, 0x10, 0x31, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x52,
	0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x32, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4e, 0x43, 0x52,
	0x59, 0x50, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x40, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x45,
	0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4c, 0x45, 0x4e, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45,
	0x10, 0x41, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x45, 0x41, 0x44, 0x5f, 0x44, 0x45, 0x43, 0x52, 0x59,
	0x50, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x42, 0x12, 0x15, 0x0a, 0x11, 0x46,
	0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44,
	0x10, 0x50, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4c, 0x4c, 0x45, 0x4c, 0x10, 0x51, 0x12, 0x1a, 0x0a,
	0x16, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55,
	0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x54, 0x12, 0x16, 0x0a, 0x12, 0x4b, 0x45, 0x59,
	0x5f, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x60, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x45, 0x59, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x10, 0x62, 0x12, 0x19, 0x0a, 0x15, 0x4b, 0x45, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x63,
	0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x45, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4e, 0x45, 0x45, 0x44,
	0x45, 0x44, 0x10, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x44, 0x10, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x45, 0x59, 0x5f, 0x4e, 0x45, 0x45,
	0x44, 0x45, 0x44, 0x10, 0x66, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x45, 0x59, 0x5f, 0x49, 0x4e, 0x44,
	0x49, 0x47, 0x45, 0x53, 0x54, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x67, 0x12, 0x1e, 0x0a, 0x1a, 0x4b,
	0x45, 0x59, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x68, 0x12, 0x15, 0x0a, 0x11, 0x4b,
	0x45, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x57, 0x52, 0x41, 0x50, 0x50, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x69, 0x12, 0x15, 0x0a, 0x11, 0x4b, 0x45, 0x59, 0x5f, 0x55, 0x4e, 0x45, 0x58, 0x54, 0x52,
	0x41, 0x43, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x6a, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45, 0x43,
	0x48, 0x41, 0x4e, 0x49, 0x53, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x70,
	0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x45, 0x43, 0x48, 0x41, 0x4e, 0x49, 0x53, 0x4d, 0x5f, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x71, 0x12, 0x1a, 0x0a,
	0x15, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x82, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x4f, 0x50, 0x45,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x90, 0x01,
	0x12, 0x1e, 0x0a, 0x19, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x91, 0x01,
	0x12, 0x12, 0x0a, 0x0d, 0x50, 0x49, 0x4e, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43,
	0x54, 0x10, 0xa0, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x50, 0x49, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0xa1, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x50, 0x49, 0x4e, 0x5f, 0x4c, 0x45,
	0x4e, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0xa2, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x50, 0x49,
	0x4e, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0xa3, 0x01, 0x12, 0x0f, 0x0a, 0x0a,
	0x50, 0x49, 0x4e, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0xa4, 0x01, 0x12, 0x13, 0x0a,
	0x0e, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10,
	0xb0, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x10, 0xb1, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0xb3, 0x01, 0x12, 0x23, 0x0a, 0x1e, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x50,
	0x41, 0x52, 0x41, 0x4c, 0x4c, 0x45, 0x4c, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50,
	0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0xb4, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x45, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0xb5, 0x01,
	0x12, 0x13, 0x0a, 0x0e, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x53, 0x10, 0xb6, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x53, 0x10, 0xb7, 0x01, 0x12, 0x21, 0x0a, 0x1c, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x41, 0x44, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x4f, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x53, 0x10, 0xb8, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x49, 0x47, 0x4e, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xc0, 0x01, 0x12,
	0x18, 0x0a, 0x13, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x4c, 0x45, 0x4e,
	0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0xc1, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x45, 0x4d,
	0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45,
	0x10, 0xd0, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f,
	0x49, 0x4e, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0xd1, 0x01, 0x12,
	0x16, 0x0a, 0x11, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x50, 0x52, 0x45,
	0x53, 0x45, 0x4e, 0x54, 0x10, 0xe0, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x54, 0x4f, 0x4b, 0x45, 0x4e,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x47, 0x4e, 0x49, 0x5a, 0x45, 0x44, 0x10,
	0xe1, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x57, 0x52, 0x49, 0x54,
	0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0xe2, 0x01, 0x12, 0x22,
	0x0a, 0x1d, 0x55, 0x4e, 0x57, 0x52, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0xf0, 0x01, 0x12, 0x1e, 0x0a, 0x19, 0x55, 0x4e, 0x57, 0x52, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10,
	0xf1, 0x01, 0x12, 0x25, 0x0a, 0x20, 0x55, 0x4e, 0x57, 0x52, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4e, 0x53,
	0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0xf2, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44,
	0x5f, 0x49, 0x4e, 0x10, 0x80, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x81, 0x02, 0x12,
	0x1d, 0x0a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x49, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x82, 0x02, 0x12, 0x16,
	0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x83, 0x02, 0x12, 0x23, 0x0a, 0x1e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41,
	0x4e, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x4c,
	0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x84, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4d, 0x41, 0x4e, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x53, 0x10, 0x85, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x57, 0x52, 0x41, 0x50, 0x50, 0x45, 0x44,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x90, 0x02, 0x12,
	0x1a, 0x0a, 0x15, 0x57, 0x52, 0x41, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x4c,
	0x45, 0x4e, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x92, 0x02, 0x12, 0x20, 0x0a, 0x1b, 0x57,
	0x52, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x48, 0x41, 0x4e, 0x44,
	0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x93, 0x02, 0x12, 0x1c, 0x0a,
	0x17, 0x57, 0x52, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x53, 0x49,
	0x5a, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x94, 0x02, 0x12, 0x23, 0x0a, 0x1e, 0x57,
	0x52, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x95, 0x02,
	0x12, 0x1e, 0x0a, 0x19, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x5f, 0x53, 0x45, 0x45, 0x44, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0xa0, 0x02,
	0x12, 0x12, 0x0a, 0x0d, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x4e,
	0x47, 0x10, 0xa1, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xb0, 0x02,
	0x12, 0x18, 0x0a, 0x13, 0x43, 0x55, 0x52, 0x56, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55,
	0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0xc0, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x42, 0x55,
	0x46, 0x46, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0xd0,
	0x02, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x41, 0x56, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xe0, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x49,
	0x4e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x4e, 0x53, 0x49,
	0x54, 0x49, 0x56, 0x45, 0x10, 0xf0, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x41, 0x56, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x80, 0x03, 0x12, 0x1d,
	0x0a, 0x18, 0x43, 0x52, 0x59, 0x50, 0x54, 0x4f, 0x4b, 0x49, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49,
	0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x90, 0x03, 0x12, 0x21, 0x0a,
	0x1c, 0x43, 0x52, 0x59, 0x50, 0x54, 0x4f, 0x4b, 0x49, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x91, 0x03,
	0x12, 0x0e, 0x0a, 0x09, 0x4d, 0x55, 0x54, 0x45, 0x58, 0x5f, 0x42, 0x41, 0x44, 0x10, 0xa0, 0x03,
	0x12, 0x15, 0x0a, 0x10, 0x4d, 0x55, 0x54, 0x45, 0x58, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x4f,
	0x43, 0x4b, 0x45, 0x44, 0x10, 0xa1, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x4e, 0x45, 0x57, 0x5f, 0x50,
	0x49, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0xb0, 0x03, 0x12, 0x0d, 0x0a, 0x08, 0x4e, 0x45,
	0x58, 0x54, 0x5f, 0x4f, 0x54, 0x50, 0x10, 0xb1, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x58, 0x43,
	0x45, 0x45, 0x44, 0x45, 0x44, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x49, 0x54, 0x45, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x53, 0x10, 0xb5, 0x03, 0x12, 0x1a, 0x0a, 0x15, 0x46, 0x49, 0x50, 0x53, 0x5f,
	0x53, 0x45, 0x4c, 0x46, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0xb6, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x4c, 0x49, 0x42, 0x52, 0x41, 0x52, 0x59, 0x5f, 0x4c,
	0x4f, 0x41, 0x44, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xb7, 0x03, 0x12, 0x11, 0x0a,
	0x0c, 0x50, 0x49, 0x4e, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x57, 0x45, 0x41, 0x4b, 0x10, 0xb8, 0x03,
	0x12, 0x17, 0x0a, 0x12, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xb9, 0x03, 0x12, 0x16, 0x0a, 0x11, 0x46, 0x55, 0x4e,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x80,
	0x04, 0x12, 0x1c, 0x0a, 0x17, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x81, 0x04, 0x12,
	0x1c, 0x0a, 0x17, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x82, 0x04, 0x32, 0xdc, 0x33,
	0x0a, 0x12, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3d, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c,
	0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53,
	0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x10, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72,
	0x53, 0x6c, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x6c, 0x6f,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e,
	0x69, 0x73, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x63, 0x68, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34,
	0x0a, 0x07, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x49, 0x4e, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x50, 0x49, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x49, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x50, 0x49, 0x4e, 0x12, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x49, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x49, 0x4e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f,
	0x0a, 0x10, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41, 0x6c, 0x6c,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x05, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d,
	0x0a, 0x0a, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x0d, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x52, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0d, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x12, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69,
	0x74, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a,
	0x13, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x12, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58,
	0x0a, 0x13, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x49, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x46, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a,
	0x12, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x69, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x13, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x12, 0x44, 0x65, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x12,
	0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x58, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x44, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x06, 0x44, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c,
	0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0b, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e,
	0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x69, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x69, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4e, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x31, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x1c,
	0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70,
	0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x18,
	0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x55, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x2e,
	0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x12,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x13, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a,
	0x13, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x13, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07, 0x57, 0x72, 0x61, 0x70, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x72, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x72, 0x61, 0x70, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x55,
	0x6e, 0x77, 0x72, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e,
	0x77, 0x72, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x77, 0x72, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x44, 0x65, 0x72, 0x69, 0x76,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x53, 0x65, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x65, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x5f, 0x0a, 0x21,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x65, 0x64, 0x69, 0x70, 0x65,
	0x72, 0x6d, 0x61, 0x64, 0x69, 0x2e, 0x73, 0x6f, 0x66, 0x74, 0x68, 0x73, 0x6d, 0x2e, 0x68, 0x73,
	0x6d, 0x42, 0x08, 0x48, 0x53, 0x4d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x64, 0x69, 0x70, 0x65, 0x72,
	0x6d, 0x61, 0x64, 0x69, 0x2f, 0x73, 0x6f, 0x66, 0x74, 0x68, 0x73, 0x6d, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_pkcs11_proto_rawDescOnce sync.Once
	file_pb_pkcs11_proto_rawDescData = file_pb_pkcs11_proto_rawDesc
)

func file_pb_pkcs11_proto_rawDescGZIP() []byte {
	file_pb_pkcs11_proto_rawDescOnce.Do(func() {
		file_pb_pkcs11_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_pkcs11_proto_rawDescData)
	})
	return file_pb_pkcs11_proto_rawDescData
}

var file_pb_pkcs11_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_pb_pkcs11_proto_msgTypes = make([]protoimpl.MessageInfo, 187)
var file_pb_pkcs11_proto_goTypes = []any{
	(MechanismType)(0),                  // 0: pb.MechanismType
	(SessionState)(0),                   // 1: pb.SessionState
	(UserType)(0),                       // 2: pb.UserType
	(ReturnValue)(0),                    // 3: pb.ReturnValue
	(*InitializeRequest)(nil),           // 4: pb.InitializeRequest
	(*InitializeResponse)(nil),          // 5: pb.InitializeResponse
	(*FinalizeRequest)(nil),             // 6: pb.FinalizeRequest
	(*FinalizeResponse)(nil),            // 7: pb.FinalizeResponse
	(*GetInfoRequest)(nil),              // 8: pb.GetInfoRequest
	(*GetInfoResponse)(nil),             // 9: pb.GetInfoResponse
	(*GetFunctionListRequest)(nil),      // 10: pb.GetFunctionListRequest
	(*GetFunctionListResponse)(nil),     // 11: pb.GetFunctionListResponse
	(*GetInterfaceListRequest)(nil),     // 12: pb.GetInterfaceListRequest
	(*GetInterfaceListResponse)(nil),    // 13: pb.GetInterfaceListResponse
	(*GetInterfaceRequest)(nil),         // 14: pb.GetInterfaceRequest
	(*GetInterfaceResponse)(nil),        // 15: pb.GetInterfaceResponse
	(*GetSlotListRequest)(nil),          // 16: pb.GetSlotListRequest
	(*GetSlotListResponse)(nil),         // 17: pb.GetSlotListResponse
	(*GetSlotInfoRequest)(nil),          // 18: pb.GetSlotInfoRequest
	(*GetSlotInfoResponse)(nil),         // 19: pb.GetSlotInfoResponse
	(*GetTokenInfoRequest)(nil),         // 20: pb.GetTokenInfoRequest
	(*GetTokenInfoResponse)(nil),        // 21: pb.GetTokenInfoResponse
	(*WaitForSlotEventRequest)(nil),     // 22: pb.WaitForSlotEventRequest
	(*WaitForSlotEventResponse)(nil),    // 23: pb.WaitForSlotEventResponse
	(*GetMechanismListRequest)(nil),     // 24: pb.GetMechanismListRequest
	(*GetMechanismListResponse)(nil),    // 25: pb.GetMechanismListResponse
	(*GetMechanismInfoRequest)(nil),     // 26: pb.GetMechanismInfoRequest
	(*GetMechanismInfoResponse)(nil),    // 27: pb.GetMechanismInfoResponse
	(*InitTokenRequest)(nil),            // 28: pb.InitTokenRequest
	(*InitTokenResponse)(nil),           // 29: pb.InitTokenResponse
	(*InitPINRequest)(nil),              // 30: pb.InitPINRequest
	(*InitPINResponse)(nil),             // 31: pb.InitPINResponse
	(*SetPINRequest)(nil),               // 32: pb.SetPINRequest
	(*SetPINResponse)(nil),              // 33: pb.SetPINResponse
	(*OpenSessionRequest)(nil),          // 34: pb.OpenSessionRequest
	(*OpenSessionResponse)(nil),         // 35: pb.OpenSessionResponse
	(*CloseSessionRequest)(nil),         // 36: pb.CloseSessionRequest
	(*CloseSessionResponse)(nil),        // 37: pb.CloseSessionResponse
	(*CloseAllSessionsRequest)(nil),     // 38: pb.CloseAllSessionsRequest
	(*CloseAllSessionsResponse)(nil),    // 39: pb.CloseAllSessionsResponse
	(*GetSessionInfoRequest)(nil),       // 40: pb.GetSessionInfoRequest
	(*GetSessionInfoResponse)(nil),      // 41: pb.GetSessionInfoResponse
	(*CreateObjectRequest)(nil),         // 42: pb.CreateObjectRequest
	(*CreateObjectResponse)(nil),        // 43: pb.CreateObjectResponse
	(*CopyObjectRequest)(nil),           // 44: pb.CopyObjectRequest
	(*CopyObjectResponse)(nil),          // 45: pb.CopyObjectResponse
	(*DestroyObjectRequest)(nil),        // 46: pb.DestroyObjectRequest
	(*DestroyObjectResponse)(nil),       // 47: pb.DestroyObjectResponse
	(*GetObjectSizeRequest)(nil),        // 48: pb.GetObjectSizeRequest
	(*GetObjectSizeResponse)(nil),       // 49: pb.GetObjectSizeResponse
	(*GetAttributeValueRequest)(nil),    // 50: pb.GetAttributeValueRequest
	(*GetAttributeValueResponse)(nil),   // 51: pb.GetAttributeValueResponse
	(*SetAttributeValueRequest)(nil),    // 52: pb.SetAttributeValueRequest
	(*SetAttributeValueResponse)(nil),   // 53: pb.SetAttributeValueResponse
	(*FindObjectsInitRequest)(nil),      // 54: pb.FindObjectsInitRequest
	(*FindObjectsInitResponse)(nil),     // 55: pb.FindObjectsInitResponse
	(*FindObjectsRequest)(nil),          // 56: pb.FindObjectsRequest
	(*FindObjectsResponse)(nil),         // 57: pb.FindObjectsResponse
	(*FindObjectsFinalRequest)(nil),     // 58: pb.FindObjectsFinalRequest
	(*FindObjectsFinalResponse)(nil),    // 59: pb.FindObjectsFinalResponse
	(*EncryptInitRequest)(nil),          // 60: pb.EncryptInitRequest
	(*EncryptInitResponse)(nil),         // 61: pb.EncryptInitResponse
	(*EncryptRequest)(nil),              // 62: pb.EncryptRequest
	(*EncryptResponse)(nil),             // 63: pb.EncryptResponse
	(*EncryptUpdateRequest)(nil),        // 64: pb.EncryptUpdateRequest
	(*EncryptUpdateResponse)(nil),       // 65: pb.EncryptUpdateResponse
	(*EncryptFinalRequest)(nil),         // 66: pb.EncryptFinalRequest
	(*EncryptFinalResponse)(nil),        // 67: pb.EncryptFinalResponse
	(*EncryptMessageInitRequest)(nil),   // 68: pb.EncryptMessageInitRequest
	(*EncryptMessageInitResponse)(nil),  // 69: pb.EncryptMessageInitResponse
	(*EncryptMessageRequest)(nil),       // 70: pb.EncryptMessageRequest
	(*EncryptMessageResponse)(nil),      // 71: pb.EncryptMessageResponse
	(*EncryptMessageBeginRequest)(nil),  // 72: pb.EncryptMessageBeginRequest
	(*EncryptMessageBeginResponse)(nil), // 73: pb.EncryptMessageBeginResponse
	(*EncryptMessageNextRequest)(nil),   // 74: pb.EncryptMessageNextRequest
	(*EncryptMessageNextResponse)(nil),  // 75: pb.EncryptMessageNextResponse
	(*EncryptMessageFinalRequest)(nil),  // 76: pb.EncryptMessageFinalRequest
	(*EncryptMessageFinalResponse)(nil), // 77: pb.EncryptMessageFinalResponse
	(*DecryptInitRequest)(nil),          // 78: pb.DecryptInitRequest
	(*DecryptInitResponse)(nil),         // 79: pb.DecryptInitResponse
	(*DecryptRequest)(nil),              // 80: pb.DecryptRequest
	(*DecryptResponse)(nil),             // 81: pb.DecryptResponse
	(*DecryptUpdateRequest)(nil),        // 82: pb.DecryptUpdateRequest
	(*DecryptUpdateResponse)(nil),       // 83: pb.DecryptUpdateResponse
	(*DecryptFinalRequest)(nil),         // 84: pb.DecryptFinalRequest
	(*DecryptFinalResponse)(nil),        // 85: pb.DecryptFinalResponse
	(*DecryptMessageInitRequest)(nil),   // 86: pb.DecryptMessageInitRequest
	(*DecryptMessageInitResponse)(nil),  // 87: pb.DecryptMessageInitResponse
	(*DecryptMessageRequest)(nil),       // 88: pb.DecryptMessageRequest
	(*DecryptMessageResponse)(nil),      // 89: pb.DecryptMessageResponse
	(*DecryptMessageBeginRequest)(nil),  // 90: pb.DecryptMessageBeginRequest
	(*DecryptMessageBeginResponse)(nil), // 91: pb.DecryptMessageBeginResponse
	(*DecryptMessageNextRequest)(nil),   // 92: pb.DecryptMessageNextRequest
	(*DecryptMessageNextResponse)(nil),  // 93: pb.DecryptMessageNextResponse
	(*MessageDecryptFinalRequest)(nil),  // 94: pb.MessageDecryptFinalRequest
	(*MessageDecryptFinalResponse)(nil), // 95: pb.MessageDecryptFinalResponse
	(*Mechanism)(nil),                   // 96: pb.Mechanism
	(*DigestInitRequest)(nil),           // 97: pb.DigestInitRequest
	(*DigestInitResponse)(nil),          // 98: pb.DigestInitResponse
	(*DigestRequest)(nil),               // 99: pb.DigestRequest
	(*DigestResponse)(nil),              // 100: pb.DigestResponse
	(*DigestUpdateRequest)(nil),         // 101: pb.DigestUpdateRequest
	(*DigestUpdateResponse)(nil),        // 102: pb.DigestUpdateResponse
	(*DigestKeyRequest)(nil),            // 103: pb.DigestKeyRequest
	(*DigestKeyResponse)(nil),           // 104: pb.DigestKeyResponse
	(*DigestFinalRequest)(nil),          // 105: pb.DigestFinalRequest
	(*DigestFinalResponse)(nil),         // 106: pb.DigestFinalResponse
	(*SignInitRequest)(nil),             // 107: pb.SignInitRequest
	(*SignInitResponse)(nil),            // 108: pb.SignInitResponse
	(*SignRequest)(nil),                 // 109: pb.SignRequest
	(*SignResponse)(nil),                // 110: pb.SignResponse
	(*SignUpdateRequest)(nil),           // 111: pb.SignUpdateRequest
	(*SignUpdateResponse)(nil),          // 112: pb.SignUpdateResponse
	(*SignFinalRequest)(nil),            // 113: pb.SignFinalRequest
	(*SignFinalResponse)(nil),           // 114: pb.SignFinalResponse
	(*SignRecoverInitRequest)(nil),      // 115: pb.SignRecoverInitRequest
	(*SignRecoverInitResponse)(nil),     // 116: pb.SignRecoverInitResponse
	(*SignRecoverRequest)(nil),          // 117: pb.SignRecoverRequest
	(*SignRecoverResponse)(nil),         // 118: pb.SignRecoverResponse
	(*SignMessageInitRequest)(nil),      // 119: pb.SignMessageInitRequest
	(*SignMessageInitResponse)(nil),     // 120: pb.SignMessageInitResponse
	(*SignMessageRequest)(nil),          // 121: pb.SignMessageRequest
	(*SignMessageResponse)(nil),         // 122: pb.SignMessageResponse
	(*SignMessageBeginRequest)(nil),     // 123: pb.SignMessageBeginRequest
	(*SignMessageBeginResponse)(nil),    // 124: pb.SignMessageBeginResponse
	(*SignMessageNextRequest)(nil),      // 125: pb.SignMessageNextRequest
	(*SignMessageNextResponse)(nil),     // 126: pb.SignMessageNextResponse
	(*SignMessageFinalRequest)(nil),     // 127: pb.SignMessageFinalRequest
	(*SignMessageFinalResponse)(nil),    // 128: pb.SignMessageFinalResponse
	(*VerifyInitRequest)(nil),           // 129: pb.VerifyInitRequest
	(*VerifyInitResponse)(nil),          // 130: pb.VerifyInitResponse
	(*VerifyRequest)(nil),               // 131: pb.VerifyRequest
	(*VerifyResponse)(nil),              // 132: pb.VerifyResponse
	(*VerifyUpdateRequest)(nil),         // 133: pb.VerifyUpdateRequest
	(*VerifyUpdateResponse)(nil),        // 134: pb.VerifyUpdateResponse
	(*VerifyFinalRequest)(nil),          // 135: pb.VerifyFinalRequest
	(*VerifyFinalResponse)(nil),         // 136: pb.VerifyFinalResponse
	(*VerifyRecoverInitRequest)(nil),    // 137: pb.VerifyRecoverInitRequest
	(*VerifyRecoverInitResponse)(nil),   // 138: pb.VerifyRecoverInitResponse
	(*VerifyRecoverRequest)(nil),        // 139: pb.VerifyRecoverRequest
	(*VerifyRecoverResponse)(nil),       // 140: pb.VerifyRecoverResponse
	(*VerifyMessageInitRequest)(nil),    // 141: pb.VerifyMessageInitRequest
	(*VerifyMessageInitResponse)(nil),   // 142: pb.VerifyMessageInitResponse
	(*VerifyMessageRequest)(nil),        // 143: pb.VerifyMessageRequest
	(*VerifyMessageResponse)(nil),       // 144: pb.VerifyMessageResponse
	(*VerifyMessageBeginRequest)(nil),   // 145: pb.VerifyMessageBeginRequest
	(*VerifyMessageBeginResponse)(nil),  // 146: pb.VerifyMessageBeginResponse
	(*VerifyMessageNextRequest)(nil),    // 147: pb.VerifyMessageNextRequest
	(*VerifyMessageNextResponse)(nil),   // 148: pb.VerifyMessageNextResponse
	(*VerifyMessageFinalRequest)(nil),   // 149: pb.VerifyMessageFinalRequest
	(*VerifyMessageFinalResponse)(nil),  // 150: pb.VerifyMessageFinalResponse
	(*DigestEncryptUpdateRequest)(nil),  // 151: pb.DigestEncryptUpdateRequest
	(*DigestEncryptUpdateResponse)(nil), // 152: pb.DigestEncryptUpdateResponse
	(*DecryptDigestUpdateRequest)(nil),  // 153: pb.DecryptDigestUpdateRequest
	(*DecryptDigestUpdateResponse)(nil), // 154: pb.DecryptDigestUpdateResponse
	(*SignEncryptUpdateRequest)(nil),    // 155: pb.SignEncryptUpdateRequest
	(*SignEncryptUpdateResponse)(nil),   // 156: pb.SignEncryptUpdateResponse
	(*DecryptVerifyUpdateRequest)(nil),  // 157: pb.DecryptVerifyUpdateRequest
	(*DecryptVerifyUpdateResponse)(nil), // 158: pb.DecryptVerifyUpdateResponse
	(*GenerateKeyRequest)(nil),          // 159: pb.GenerateKeyRequest
	(*GenerateKeyResponse)(nil),         // 160: pb.GenerateKeyResponse
	(*GenerateKeyPairRequest)(nil),      // 161: pb.GenerateKeyPairRequest
	(*GenerateKeyPairResponse)(nil),     // 162: pb.GenerateKeyPairResponse
	(*WrapKeyRequest)(nil),              // 163: pb.WrapKeyRequest
	(*WrapKeyResponse)(nil),             // 164: pb.WrapKeyResponse
	(*UnwrapKeyRequest)(nil),            // 165: pb.UnwrapKeyRequest
	(*UnwrapKeyResponse)(nil),           // 166: pb.UnwrapKeyResponse
	(*DeriveKeyRequest)(nil),            // 167: pb.DeriveKeyRequest
	(*DeriveKeyResponse)(nil),           // 168: pb.DeriveKeyResponse
	(*SeedRandomRequest)(nil),           // 169: pb.SeedRandomRequest
	(*SeedRandomResponse)(nil),          // 170: pb.SeedRandomResponse
	(*GenerateRandomRequest)(nil),       // 171: pb.GenerateRandomRequest
	(*GenerateRandomResponse)(nil),      // 172: pb.GenerateRandomResponse
	(*GetFunctionStatusRequest)(nil),    // 173: pb.GetFunctionStatusRequest
	(*GetFunctionStatusResponse)(nil),   // 174: pb.GetFunctionStatusResponse
	(*CancelFunctionRequest)(nil),       // 175: pb.CancelFunctionRequest
	(*CancelFunctionResponse)(nil),      // 176: pb.CancelFunctionResponse
	(*GetSessionInfoData)(nil),          // 177: pb.GetSessionInfoData
	(*SessionInfo)(nil),                 // 178: pb.SessionInfo
	(*SessionCancelRequest)(nil),        // 179: pb.SessionCancelRequest
	(*SessionCancelResponse)(nil),       // 180: pb.SessionCancelResponse
	(*GetOperationStateRequest)(nil),    // 181: pb.GetOperationStateRequest
	(*GetOperationStateResponse)(nil),   // 182: pb.GetOperationStateResponse
	(*SetOperationStateRequest)(nil),    // 183: pb.SetOperationStateRequest
	(*SetOperationStateResponse)(nil),   // 184: pb.SetOperationStateResponse
	(*LoginRequest)(nil),                // 185: pb.LoginRequest
	(*LoginResponse)(nil),               // 186: pb.LoginResponse
	(*LoginUserRequest)(nil),            // 187: pb.LoginUserRequest
	(*LoginUserResponse)(nil),           // 188: pb.LoginUserResponse
	(*LogoutRequest)(nil),               // 189: pb.LogoutRequest
	(*LogoutResponse)(nil),              // 190: pb.LogoutResponse
}
var file_pb_pkcs11_proto_depIdxs = []int32{
	3,   // 0: pb.OpenSessionResponse.returnValue:type_name -> pb.ReturnValue
	3,   // 1: pb.CloseSessionResponse.returnValue:type_name -> pb.ReturnValue
	3,   // 2: pb.CloseAllSessionsResponse.returnValue:type_name -> pb.ReturnValue
	3,   // 3: pb.GetSessionInfoResponse.returnValue:type_name -> pb.ReturnValue
	177, // 4: pb.GetSessionInfoResponse.data:type_name -> pb.GetSessionInfoData
	0,   // 5: pb.Mechanism.mechanism:type_name -> pb.MechanismType
	96,  // 6: pb.DigestInitRequest.mechanism:type_name -> pb.Mechanism
	3,   // 7: pb.DigestInitResponse.returnValue:type_name -> pb.ReturnValue
	3,   // 8: pb.DigestResponse.returnValue:type_name -> pb.ReturnValue
	3,   // 9: pb.DigestUpdateResponse.returnValue:type_name -> pb.ReturnValue
	3,   // 10: pb.DigestKeyResponse.returnValue:type_name -> pb.ReturnValue
	3,   // 11: pb.DigestFinalResponse.returnValue:type_name -> pb.ReturnValue
	178, // 12: pb.GetSessionInfoData.info:type_name -> pb.SessionInfo
	1,   // 13: pb.SessionInfo.state:type_name -> pb.SessionState
	3,   // 14: pb.SessionCancelResponse.returnValue:type_name -> pb.ReturnValue
	3,   // 15: pb.GetOperationStateResponse.returnValue:type_name -> pb.ReturnValue
	3,   // 16: pb.SetOperationStateResponse.returnValue:type_name -> pb.ReturnValue
	2,   // 17: pb.LoginRequest.userType:type_name -> pb.UserType
	3,   // 18: pb.LoginResponse.returnValue:type_name -> pb.ReturnValue
	2,   // 19: pb.LoginUserRequest.userType:type_name -> pb.UserType
	3,   // 20: pb.LoginUserResponse.returnValue:type_name -> pb.ReturnValue
	3,   // 21: pb.LogoutResponse.returnValue:type_name -> pb.ReturnValue
	4,   // 22: pb.CryptographicToken.Initialize:input_type -> pb.InitializeRequest
	6,   // 23: pb.CryptographicToken.Finalize:input_type -> pb.FinalizeRequest
	8,   // 24: pb.CryptographicToken.GetInfo:input_type -> pb.GetInfoRequest
	10,  // 25: pb.CryptographicToken.GetFunctionList:input_type -> pb.GetFunctionListRequest
	12,  // 26: pb.CryptographicToken.GetInterfaceList:input_type -> pb.GetInterfaceListRequest
	14,  // 27: pb.CryptographicToken.GetInterface:input_type -> pb.GetInterfaceRequest
	16,  // 28: pb.CryptographicToken.GetSlotList:input_type -> pb.GetSlotListRequest
	18,  // 29: pb.CryptographicToken.GetSlotInfo:input_type -> pb.GetSlotInfoRequest
	20,  // 30: pb.CryptographicToken.GetTokenInfo:input_type -> pb.GetTokenInfoRequest
	22,  // 31: pb.CryptographicToken.WaitForSlotEvent:input_type -> pb.WaitForSlotEventRequest
	24,  // 32: pb.CryptographicToken.GetMechanismList:input_type -> pb.GetMechanismListRequest
	26,  // 33: pb.CryptographicToken.GetMechanismInfo:input_type -> pb.GetMechanismInfoRequest
	28,  // 34: pb.CryptographicToken.InitToken:input_type -> pb.InitTokenRequest
	30,  // 35: pb.CryptographicToken.InitPIN:input_type -> pb.InitPINRequest
	32,  // 36: pb.CryptographicToken.SetPIN:input_type -> pb.SetPINRequest
	34,  // 37: pb.CryptographicToken.OpenSession:input_type -> pb.OpenSessionRequest
	36,  // 38: pb.CryptographicToken.CloseSession:input_type -> pb.CloseSessionRequest
	38,  // 39: pb.CryptographicToken.CloseAllSessions:input_type -> pb.CloseAllSessionsRequest
	40,  // 40: pb.CryptographicToken.GetSessionInfo:input_type -> pb.GetSessionInfoRequest
	179, // 41: pb.CryptographicToken.SessionCancel:input_type -> pb.SessionCancelRequest
	181, // 42: pb.CryptographicToken.GetOperationState:input_type -> pb.GetOperationStateRequest
	183, // 43: pb.CryptographicToken.SetOperationState:input_type -> pb.SetOperationStateRequest
	185, // 44: pb.CryptographicToken.Login:input_type -> pb.LoginRequest
	187, // 45: pb.CryptographicToken.LoginUser:input_type -> pb.LoginUserRequest
	189, // 46: pb.CryptographicToken.Logout:input_type -> pb.LogoutRequest
	42,  // 47: pb.CryptographicToken.CreateObject:input_type -> pb.CreateObjectRequest
	44,  // 48: pb.CryptographicToken.CopyObject:input_type -> pb.CopyObjectRequest
	46,  // 49: pb.CryptographicToken.DestroyObject:input_type -> pb.DestroyObjectRequest
	48,  // 50: pb.CryptographicToken.GetObjectSize:input_type -> pb.GetObjectSizeRequest
	50,  // 51: pb.CryptographicToken.GetAttributeValue:input_type -> pb.GetAttributeValueRequest
	52,  // 52: pb.CryptographicToken.SetAttributeValue:input_type -> pb.SetAttributeValueRequest
	54,  // 53: pb.CryptographicToken.FindObjectsInit:input_type -> pb.FindObjectsInitRequest
	56,  // 54: pb.CryptographicToken.FindObjects:input_type -> pb.FindObjectsRequest
	58,  // 55: pb.CryptographicToken.FindObjectsFinal:input_type -> pb.FindObjectsFinalRequest
	60,  // 56: pb.CryptographicToken.EncryptInit:input_type -> pb.EncryptInitRequest
	62,  // 57: pb.CryptographicToken.Encrypt:input_type -> pb.EncryptRequest
	64,  // 58: pb.CryptographicToken.EncryptUpdate:input_type -> pb.EncryptUpdateRequest
	66,  // 59: pb.CryptographicToken.EncryptFinal:input_type -> pb.EncryptFinalRequest
	68,  // 60: pb.CryptographicToken.EncryptMessageInit:input_type -> pb.EncryptMessageInitRequest
	70,  // 61: pb.CryptographicToken.EncryptMessage:input_type -> pb.EncryptMessageRequest
	72,  // 62: pb.CryptographicToken.EncryptMessageBegin:input_type -> pb.EncryptMessageBeginRequest
	74,  // 63: pb.CryptographicToken.EncryptMessageNext:input_type -> pb.EncryptMessageNextRequest
	76,  // 64: pb.CryptographicToken.EncryptMessageFinal:input_type -> pb.EncryptMessageFinalRequest
	78,  // 65: pb.CryptographicToken.DecryptInit:input_type -> pb.DecryptInitRequest
	80,  // 66: pb.CryptographicToken.Decrypt:input_type -> pb.DecryptRequest
	82,  // 67: pb.CryptographicToken.DecryptUpdate:input_type -> pb.DecryptUpdateRequest
	84,  // 68: pb.CryptographicToken.DecryptFinal:input_type -> pb.DecryptFinalRequest
	86,  // 69: pb.CryptographicToken.DecryptMessageInit:input_type -> pb.DecryptMessageInitRequest
	88,  // 70: pb.CryptographicToken.DecryptMessage:input_type -> pb.DecryptMessageRequest
	90,  // 71: pb.CryptographicToken.DecryptMessageBegin:input_type -> pb.DecryptMessageBeginRequest
	92,  // 72: pb.CryptographicToken.DecryptMessageNext:input_type -> pb.DecryptMessageNextRequest
	94,  // 73: pb.CryptographicToken.MessageDecryptFinal:input_type -> pb.MessageDecryptFinalRequest
	97,  // 74: pb.CryptographicToken.DigestInit:input_type -> pb.DigestInitRequest
	99,  // 75: pb.CryptographicToken.Digest:input_type -> pb.DigestRequest
	101, // 76: pb.CryptographicToken.DigestUpdate:input_type -> pb.DigestUpdateRequest
	103, // 77: pb.CryptographicToken.DigestKey:input_type -> pb.DigestKeyRequest
	105, // 78: pb.CryptographicToken.DigestFinal:input_type -> pb.DigestFinalRequest
	107, // 79: pb.CryptographicToken.SignInit:input_type -> pb.SignInitRequest
	109, // 80: pb.CryptographicToken.Sign:input_type -> pb.SignRequest
	111, // 81: pb.CryptographicToken.SignUpdate:input_type -> pb.SignUpdateRequest
	113, // 82: pb.CryptographicToken.SignFinal:input_type -> pb.SignFinalRequest
	115, // 83: pb.CryptographicToken.SignRecoverInit:input_type -> pb.SignRecoverInitRequest
	117, // 84: pb.CryptographicToken.SignRecover:input_type -> pb.SignRecoverRequest
	119, // 85: pb.CryptographicToken.SignMessageInit:input_type -> pb.SignMessageInitRequest
	121, // 86: pb.CryptographicToken.SignMessage:input_type -> pb.SignMessageRequest
	123, // 87: pb.CryptographicToken.SignMessageBegin:input_type -> pb.SignMessageBeginRequest
	125, // 88: pb.CryptographicToken.SignMessageNext:input_type -> pb.SignMessageNextRequest
	127, // 89: pb.CryptographicToken.SignMessageFinal:input_type -> pb.SignMessageFinalRequest
	129, // 90: pb.CryptographicToken.VerifyInit:input_type -> pb.VerifyInitRequest
	131, // 91: pb.CryptographicToken.Verify:input_type -> pb.VerifyRequest
	133, // 92: pb.CryptographicToken.VerifyUpdate:input_type -> pb.VerifyUpdateRequest
	135, // 93: pb.CryptographicToken.VerifyFinal:input_type -> pb.VerifyFinalRequest
	137, // 94: pb.CryptographicToken.VerifyRecoverInit:input_type -> pb.VerifyRecoverInitRequest
	139, // 95: pb.CryptographicToken.VerifyRecover:input_type -> pb.VerifyRecoverRequest
	141, // 96: pb.CryptographicToken.VerifyMessageInit:input_type -> pb.VerifyMessageInitRequest
	143, // 97: pb.CryptographicToken.VerifyMessage:input_type -> pb.VerifyMessageRequest
	145, // 98: pb.CryptographicToken.VerifyMessageBegin:input_type -> pb.VerifyMessageBeginRequest
	147, // 99: pb.CryptographicToken.VerifyMessageNext:input_type -> pb.VerifyMessageNextRequest
	149, // 100: pb.CryptographicToken.VerifyMessageFinal:input_type -> pb.VerifyMessageFinalRequest
	151, // 101: pb.CryptographicToken.DigestEncryptUpdate:input_type -> pb.DigestEncryptUpdateRequest
	153, // 102: pb.CryptographicToken.DecryptDigestUpdate:input_type -> pb.DecryptDigestUpdateRequest
	155, // 103: pb.CryptographicToken.SignEncryptUpdate:input_type -> pb.SignEncryptUpdateRequest
	157, // 104: pb.CryptographicToken.DecryptVerifyUpdate:input_type -> pb.DecryptVerifyUpdateRequest
	159, // 105: pb.CryptographicToken.GenerateKey:input_type -> pb.GenerateKeyRequest
	161, // 106: pb.CryptographicToken.GenerateKeyPair:input_type -> pb.GenerateKeyPairRequest
	163, // 107: pb.CryptographicToken.WrapKey:input_type -> pb.WrapKeyRequest
	165, // 108: pb.CryptographicToken.UnwrapKey:input_type -> pb.UnwrapKeyRequest
	167, // 109: pb.CryptographicToken.DeriveKey:input_type -> pb.DeriveKeyRequest
	169, // 110: pb.CryptographicToken.SeedRandom:input_type -> pb.SeedRandomRequest
	171, // 111: pb.CryptographicToken.GenerateRandom:input_type -> pb.GenerateRandomRequest
	173, // 112: pb.CryptographicToken.GetFunctionStatus:input_type -> pb.GetFunctionStatusRequest
	175, // 113: pb.CryptographicToken.CancelFunction:input_type -> pb.CancelFunctionRequest
	5,   // 114: pb.CryptographicToken.Initialize:output_type -> pb.InitializeResponse
	7,   // 115: pb.CryptographicToken.Finalize:output_type -> pb.FinalizeResponse
	9,   // 116: pb.CryptographicToken.GetInfo:output_type -> pb.GetInfoResponse
	11,  // 117: pb.CryptographicToken.GetFunctionList:output_type -> pb.GetFunctionListResponse
	13,  // 118: pb.CryptographicToken.GetInterfaceList:output_type -> pb.GetInterfaceListResponse
	15,  // 119: pb.CryptographicToken.GetInterface:output_type -> pb.GetInterfaceResponse
	17,  // 120: pb.CryptographicToken.GetSlotList:output_type -> pb.GetSlotListResponse
	19,  // 121: pb.CryptographicToken.GetSlotInfo:output_type -> pb.GetSlotInfoResponse
	21,  // 122: pb.CryptographicToken.GetTokenInfo:output_type -> pb.GetTokenInfoResponse
	23,  // 123: pb.CryptographicToken.WaitForSlotEvent:output_type -> pb.WaitForSlotEventResponse
	25,  // 124: pb.CryptographicToken.GetMechanismList:output_type -> pb.GetMechanismListResponse
	27,  // 125: pb.CryptographicToken.GetMechanismInfo:output_type -> pb.GetMechanismInfoResponse
	29,  // 126: pb.CryptographicToken.InitToken:output_type -> pb.InitTokenResponse
	31,  // 127: pb.CryptographicToken.InitPIN:output_type -> pb.InitPINResponse
	33,  // 128: pb.CryptographicToken.SetPIN:output_type -> pb.SetPINResponse
	35,  // 129: pb.CryptographicToken.OpenSession:output_type -> pb.OpenSessionResponse
	37,  // 130: pb.CryptographicToken.CloseSession:output_type -> pb.CloseSessionResponse
	39,  // 131: pb.CryptographicToken.CloseAllSessions:output_type -> pb.CloseAllSessionsResponse
	41,  // 132: pb.CryptographicToken.GetSessionInfo:output_type -> pb.GetSessionInfoResponse
	180, // 133: pb.CryptographicToken.SessionCancel:output_type -> pb.SessionCancelResponse
	182, // 134: pb.CryptographicToken.GetOperationState:output_type -> pb.GetOperationStateResponse
	184, // 135: pb.CryptographicToken.SetOperationState:output_type -> pb.SetOperationStateResponse
	186, // 136: pb.CryptographicToken.Login:output_type -> pb.LoginResponse
	188, // 137: pb.CryptographicToken.LoginUser:output_type -> pb.LoginUserResponse
	190, // 138: pb.CryptographicToken.Logout:output_type -> pb.LogoutResponse
	43,  // 139: pb.CryptographicToken.CreateObject:output_type -> pb.CreateObjectResponse
	45,  // 140: pb.CryptographicToken.CopyObject:output_type -> pb.CopyObjectResponse
	47,  // 141: pb.CryptographicToken.DestroyObject:output_type -> pb.DestroyObjectResponse
	49,  // 142: pb.CryptographicToken.GetObjectSize:output_type -> pb.GetObjectSizeResponse
	51,  // 143: pb.CryptographicToken.GetAttributeValue:output_type -> pb.GetAttributeValueResponse
	53,  // 144: pb.CryptographicToken.SetAttributeValue:output_type -> pb.SetAttributeValueResponse
	55,  // 145: pb.CryptographicToken.FindObjectsInit:output_type -> pb.FindObjectsInitResponse
	57,  // 146: pb.CryptographicToken.FindObjects:output_type -> pb.FindObjectsResponse
	59,  // 147: pb.CryptographicToken.FindObjectsFinal:output_type -> pb.FindObjectsFinalResponse
	61,  // 148: pb.CryptographicToken.EncryptInit:output_type -> pb.EncryptInitResponse
	63,  // 149: pb.CryptographicToken.Encrypt:output_type -> pb.EncryptResponse
	65,  // 150: pb.CryptographicToken.EncryptUpdate:output_type -> pb.EncryptUpdateResponse
	67,  // 151: pb.CryptographicToken.EncryptFinal:output_type -> pb.EncryptFinalResponse
	69,  // 152: pb.CryptographicToken.EncryptMessageInit:output_type -> pb.EncryptMessageInitResponse
	71,  // 153: pb.CryptographicToken.EncryptMessage:output_type -> pb.EncryptMessageResponse
	73,  // 154: pb.CryptographicToken.EncryptMessageBegin:output_type -> pb.EncryptMessageBeginResponse
	75,  // 155: pb.CryptographicToken.EncryptMessageNext:output_type -> pb.EncryptMessageNextResponse
	77,  // 156: pb.CryptographicToken.EncryptMessageFinal:output_type -> pb.EncryptMessageFinalResponse
	79,  // 157: pb.CryptographicToken.DecryptInit:output_type -> pb.DecryptInitResponse
	81,  // 158: pb.CryptographicToken.Decrypt:output_type -> pb.DecryptResponse
	83,  // 159: pb.CryptographicToken.DecryptUpdate:output_type -> pb.DecryptUpdateResponse
	85,  // 160: pb.CryptographicToken.DecryptFinal:output_type -> pb.DecryptFinalResponse
	87,  // 161: pb.CryptographicToken.DecryptMessageInit:output_type -> pb.DecryptMessageInitResponse
	89,  // 162: pb.CryptographicToken.DecryptMessage:output_type -> pb.DecryptMessageResponse
	91,  // 163: pb.CryptographicToken.DecryptMessageBegin:output_type -> pb.DecryptMessageBeginResponse
	93,  // 164: pb.CryptographicToken.DecryptMessageNext:output_type -> pb.DecryptMessageNextResponse
	95,  // 165: pb.CryptographicToken.MessageDecryptFinal:output_type -> pb.MessageDecryptFinalResponse
	98,  // 166: pb.CryptographicToken.DigestInit:output_type -> pb.DigestInitResponse
	100, // 167: pb.CryptographicToken.Digest:output_type -> pb.DigestResponse
	102, // 168: pb.CryptographicToken.DigestUpdate:output_type -> pb.DigestUpdateResponse
	104, // 169: pb.CryptographicToken.DigestKey:output_type -> pb.DigestKeyResponse
	106, // 170: pb.CryptographicToken.DigestFinal:output_type -> pb.DigestFinalResponse
	108, // 171: pb.CryptographicToken.SignInit:output_type -> pb.SignInitResponse
	110, // 172: pb.CryptographicToken.Sign:output_type -> pb.SignResponse
	112, // 173: pb.CryptographicToken.SignUpdate:output_type -> pb.SignUpdateResponse
	114, // 174: pb.CryptographicToken.SignFinal:output_type -> pb.SignFinalResponse
	116, // 175: pb.CryptographicToken.SignRecoverInit:output_type -> pb.SignRecoverInitResponse
	118, // 176: pb.CryptographicToken.SignRecover:output_type -> pb.SignRecoverResponse
	120, // 177: pb.CryptographicToken.SignMessageInit:output_type -> pb.SignMessageInitResponse
	122, // 178: pb.CryptographicToken.SignMessage:output_type -> pb.SignMessageResponse
	124, // 179: pb.CryptographicToken.SignMessageBegin:output_type -> pb.SignMessageBeginResponse
	126, // 180: pb.CryptographicToken.SignMessageNext:output_type -> pb.SignMessageNextResponse
	128, // 181: pb.CryptographicToken.SignMessageFinal:output_type -> pb.SignMessageFinalResponse
	130, // 182: pb.CryptographicToken.VerifyInit:output_type -> pb.VerifyInitResponse
	132, // 183: pb.CryptographicToken.Verify:output_type -> pb.VerifyResponse
	134, // 184: pb.CryptographicToken.VerifyUpdate:output_type -> pb.VerifyUpdateResponse
	136, // 185: pb.CryptographicToken.VerifyFinal:output_type -> pb.VerifyFinalResponse
	138, // 186: pb.CryptographicToken.VerifyRecoverInit:output_type -> pb.VerifyRecoverInitResponse
	140, // 187: pb.CryptographicToken.VerifyRecover:output_type -> pb.VerifyRecoverResponse
	142, // 188: pb.CryptographicToken.VerifyMessageInit:output_type -> pb.VerifyMessageInitResponse
	144, // 189: pb.CryptographicToken.VerifyMessage:output_type -> pb.VerifyMessageResponse
	146, // 190: pb.CryptographicToken.VerifyMessageBegin:output_type -> pb.VerifyMessageBeginResponse
	148, // 191: pb.CryptographicToken.VerifyMessageNext:output_type -> pb.VerifyMessageNextResponse
	150, // 192: pb.CryptographicToken.VerifyMessageFinal:output_type -> pb.VerifyMessageFinalResponse
	152, // 193: pb.CryptographicToken.DigestEncryptUpdate:output_type -> pb.DigestEncryptUpdateResponse
	154, // 194: pb.CryptographicToken.DecryptDigestUpdate:output_type -> pb.DecryptDigestUpdateResponse
	156, // 195: pb.CryptographicToken.SignEncryptUpdate:output_type -> pb.SignEncryptUpdateResponse
	158, // 196: pb.CryptographicToken.DecryptVerifyUpdate:output_type -> pb.DecryptVerifyUpdateResponse
	160, // 197: pb.CryptographicToken.GenerateKey:output_type -> pb.GenerateKeyResponse
	162, // 198: pb.CryptographicToken.GenerateKeyPair:output_type -> pb.GenerateKeyPairResponse
	164, // 199: pb.CryptographicToken.WrapKey:output_type -> pb.WrapKeyResponse
	166, // 200: pb.CryptographicToken.UnwrapKey:output_type -> pb.UnwrapKeyResponse
	168, // 201: pb.CryptographicToken.DeriveKey:output_type -> pb.DeriveKeyResponse
	170, // 202: pb.CryptographicToken.SeedRandom:output_type -> pb.SeedRandomResponse
	172, // 203: pb.CryptographicToken.GenerateRandom:output_type -> pb.GenerateRandomResponse
	174, // 204: pb.CryptographicToken.GetFunctionStatus:output_type -> pb.GetFunctionStatusResponse
	176, // 205: pb.CryptographicToken.CancelFunction:output_type -> pb.CancelFunctionResponse
	114, // [114:206] is the sub-list for method output_type
	22,  // [22:114] is the sub-list for method input_type
	22,  // [22:22] is the sub-list for extension type_name
	22,  // [22:22] is the sub-list for extension extendee
	0,   // [0:22] is the sub-list for field type_name
}

func init() { file_pb_pkcs11_proto_init() }
func file_pb_pkcs11_proto_init() {
	if File_pb_pkcs11_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_pkcs11_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*InitializeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*InitializeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FinalizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FinalizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetFunctionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetFunctionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetInterfaceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetInterfaceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetInterfaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetInterfaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetSlotListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetSlotListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetSlotInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetSlotInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetTokenInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetTokenInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*WaitForSlotEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*WaitForSlotEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetMechanismListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetMechanismListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetMechanismInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GetMechanismInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*InitTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*InitTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*InitPINRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*InitPINResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*SetPINRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*SetPINResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*OpenSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*OpenSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CloseSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*CloseSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*CloseAllSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CloseAllSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GetSessionInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*GetSessionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CreateObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*CreateObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*CopyObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*CopyObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*DestroyObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*DestroyObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*GetObjectSizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*GetObjectSizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttributeValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*GetAttributeValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*SetAttributeValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*SetAttributeValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*FindObjectsInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*FindObjectsInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*FindObjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*FindObjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*FindObjectsFinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*FindObjectsFinalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptFinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptFinalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptMessageInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptMessageInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptMessageBeginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptMessageBeginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptMessageNextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptMessageNextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptMessageFinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*EncryptMessageFinalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptFinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptFinalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptMessageInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptMessageInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptMessageBeginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptMessageBeginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptMessageNextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptMessageNextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*MessageDecryptFinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*MessageDecryptFinalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*Mechanism); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*DigestInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*DigestInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*DigestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*DigestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*DigestUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*DigestUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*DigestKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*DigestKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*DigestFinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*DigestFinalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*SignInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*SignInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*SignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[106].Exporter = func(v any, i int) any {
			switch v := v.(*SignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*SignUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*SignUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[109].Exporter = func(v any, i int) any {
			switch v := v.(*SignFinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[110].Exporter = func(v any, i int) any {
			switch v := v.(*SignFinalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[111].Exporter = func(v any, i int) any {
			switch v := v.(*SignRecoverInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[112].Exporter = func(v any, i int) any {
			switch v := v.(*SignRecoverInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[113].Exporter = func(v any, i int) any {
			switch v := v.(*SignRecoverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[114].Exporter = func(v any, i int) any {
			switch v := v.(*SignRecoverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[115].Exporter = func(v any, i int) any {
			switch v := v.(*SignMessageInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[116].Exporter = func(v any, i int) any {
			switch v := v.(*SignMessageInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[117].Exporter = func(v any, i int) any {
			switch v := v.(*SignMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[118].Exporter = func(v any, i int) any {
			switch v := v.(*SignMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[119].Exporter = func(v any, i int) any {
			switch v := v.(*SignMessageBeginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[120].Exporter = func(v any, i int) any {
			switch v := v.(*SignMessageBeginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[121].Exporter = func(v any, i int) any {
			switch v := v.(*SignMessageNextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[122].Exporter = func(v any, i int) any {
			switch v := v.(*SignMessageNextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[123].Exporter = func(v any, i int) any {
			switch v := v.(*SignMessageFinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[124].Exporter = func(v any, i int) any {
			switch v := v.(*SignMessageFinalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[125].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[126].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[127].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[128].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[129].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[130].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[131].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyFinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[132].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyFinalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[133].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyRecoverInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[134].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyRecoverInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[135].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyRecoverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[136].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyRecoverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[137].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyMessageInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[138].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyMessageInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[139].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[140].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[141].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyMessageBeginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[142].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyMessageBeginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[143].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyMessageNextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[144].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyMessageNextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[145].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyMessageFinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[146].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyMessageFinalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[147].Exporter = func(v any, i int) any {
			switch v := v.(*DigestEncryptUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[148].Exporter = func(v any, i int) any {
			switch v := v.(*DigestEncryptUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[149].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptDigestUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[150].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptDigestUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[151].Exporter = func(v any, i int) any {
			switch v := v.(*SignEncryptUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[152].Exporter = func(v any, i int) any {
			switch v := v.(*SignEncryptUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[153].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptVerifyUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[154].Exporter = func(v any, i int) any {
			switch v := v.(*DecryptVerifyUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[155].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[156].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[157].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateKeyPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[158].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateKeyPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[159].Exporter = func(v any, i int) any {
			switch v := v.(*WrapKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[160].Exporter = func(v any, i int) any {
			switch v := v.(*WrapKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[161].Exporter = func(v any, i int) any {
			switch v := v.(*UnwrapKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[162].Exporter = func(v any, i int) any {
			switch v := v.(*UnwrapKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[163].Exporter = func(v any, i int) any {
			switch v := v.(*DeriveKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[164].Exporter = func(v any, i int) any {
			switch v := v.(*DeriveKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[165].Exporter = func(v any, i int) any {
			switch v := v.(*SeedRandomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[166].Exporter = func(v any, i int) any {
			switch v := v.(*SeedRandomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[167].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateRandomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[168].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateRandomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[169].Exporter = func(v any, i int) any {
			switch v := v.(*GetFunctionStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[170].Exporter = func(v any, i int) any {
			switch v := v.(*GetFunctionStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[171].Exporter = func(v any, i int) any {
			switch v := v.(*CancelFunctionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[172].Exporter = func(v any, i int) any {
			switch v := v.(*CancelFunctionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[173].Exporter = func(v any, i int) any {
			switch v := v.(*GetSessionInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[174].Exporter = func(v any, i int) any {
			switch v := v.(*SessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[175].Exporter = func(v any, i int) any {
			switch v := v.(*SessionCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[176].Exporter = func(v any, i int) any {
			switch v := v.(*SessionCancelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[177].Exporter = func(v any, i int) any {
			switch v := v.(*GetOperationStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[178].Exporter = func(v any, i int) any {
			switch v := v.(*GetOperationStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[179].Exporter = func(v any, i int) any {
			switch v := v.(*SetOperationStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[180].Exporter = func(v any, i int) any {
			switch v := v.(*SetOperationStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[181].Exporter = func(v any, i int) any {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[182].Exporter = func(v any, i int) any {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[183].Exporter = func(v any, i int) any {
			switch v := v.(*LoginUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[184].Exporter = func(v any, i int) any {
			switch v := v.(*LoginUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[185].Exporter = func(v any, i int) any {
			switch v := v.(*LogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pkcs11_proto_msgTypes[186].Exporter = func(v any, i int) any {
			switch v := v.(*LogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_pkcs11_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   187,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_pkcs11_proto_goTypes,
		DependencyIndexes: file_pb_pkcs11_proto_depIdxs,
		EnumInfos:         file_pb_pkcs11_proto_enumTypes,
		MessageInfos:      file_pb_pkcs11_proto_msgTypes,
	}.Build()
	File_pb_pkcs11_proto = out.File
	file_pb_pkcs11_proto_rawDesc = nil
	file_pb_pkcs11_proto_goTypes = nil
	file_pb_pkcs11_proto_depIdxs = nil
}
