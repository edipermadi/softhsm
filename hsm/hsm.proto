syntax = "proto3";

option go_package = "github.com/edipermadi/softhsm/pkg/hsm";
option java_multiple_files = true;
option java_package = "com.github.edipermadi.softhsm.hsm";
option java_outer_classname = "HSMProto";

package hsm;

service SessionManagement {
  rpc Initialize(InitializeRequest)returns(InitializeResponse){}
  rpc Finalize(FinalizeRequest)returns(FinalizeResponse){}
  rpc GetInfo(GetInfoRequest)returns(GetInfoResponse){}
  rpc GetFunctionList(GetFunctionListRequest)returns(GetFunctionListResponse){}
  rpc GetInterfaceList(GetInterfaceListRequest)returns(GetInterfaceListResponse){}
  rpc GetInterface(GetInterfaceRequest)returns(GetInterfaceResponse){}

  rpc GetSlotList(GetSlotListRequest)returns (GetSlotListResponse){}
  rpc GetSlotInfo(GetSlotInfoRequest)returns (GetSlotInfoResponse){}
  rpc GetTokenInfo(GetTokenInfoRequest)returns (GetTokenInfoResponse){}
  rpc WaitForSlotEvent(WaitForSlotEventRequest)returns (WaitForSlotEventResponse){}
  rpc GetMechanismList(GetMechanismListRequest)returns (GetMechanismListResponse){}
  rpc GetMechanismInfo(GetMechanismInfoRequest)returns (GetMechanismInfoResponse){}
  rpc InitToken(InitTokenRequest)returns (InitTokenResponse){}
  rpc InitPIN(InitPINRequest)returns (InitPINResponse){}
  rpc SetPIN(SetPINRequest)returns (SetPINResponse){}

  rpc OpenSession(OpenSessionRequest)returns (OpenSessionResponse){}
  rpc CloseSession(CloseSessionRequest)returns (CloseSessionResponse){}
  rpc CloseAllSessions(CloseAllSessionsRequest)returns (CloseAllSessionsResponse){}
  rpc GetSessionInfo(GetSessionInfoRequest)returns (GetSessionInfoResponse){}
  rpc SessionCancel(SessionCancelRequest)returns(SessionCancelResponse){}

  rpc CreateObject(CreateObjectRequest)returns(CreateObjectResponse){}
  rpc CopyObject(CopyObjectRequest)returns(CopyObjectResponse){}
  rpc DestroyObject(DestroyObjectRequest)returns(DestroyObjectResponse){}
  rpc GetObjectSize(GetObjectSizeRequest)returns(GetObjectSizeResponse){}
  rpc GetAttributeValue(GetAttributeValueRequest)returns(GetAttributeValueResponse){}
  rpc SetAttributeValue(SetAttributeValueRequest)returns(SetAttributeValueResponse){}
  rpc FindObjectsInit(FindObjectsInitRequest)returns(FindObjectsInitResponse){}
  rpc FindObjects(FindObjectsRequest)returns(FindObjectsResponse){}
  rpc FindObjectsFinal(FindObjectsFinalRequest)returns(FindObjectsFinalResponse){}

  rpc EncryptInit(EncryptInitRequest) returns(EncryptInitResponse){}
  rpc Encrypt(EncryptRequest) returns(EncryptResponse){}
  rpc EncryptUpdate(EncryptUpdateRequest) returns(EncryptUpdateResponse){}
  rpc EncryptFinal(EncryptFinalRequest) returns(EncryptFinalResponse){}

  rpc EncryptMessageInit(EncryptMessageInitRequest)returns(EncryptMessageInitResponse){}
  rpc EncryptMessage(EncryptMessageRequest)returns(EncryptMessageResponse){}
  rpc EncryptMessageBegin(EncryptMessageBeginRequest)returns(EncryptMessageBeginResponse){}
  rpc EncryptMessageNext(EncryptMessageNextRequest)returns(EncryptMessageNextResponse){}
  rpc EncryptMessageFinal(EncryptMessageFinalRequest)returns(EncryptMessageFinalResponse){}

  rpc DecryptInit(DecryptInitRequest)returns(DecryptInitResponse){}
  rpc Decrypt(DecryptRequest)returns(DecryptResponse){}
  rpc DecryptUpdate(DecryptUpdateRequest)returns(DecryptUpdateResponse){}
  rpc DecryptFinal(DecryptFinalRequest)returns(DecryptFinalResponse){}

  rpc DecryptMessageInit(DecryptMessageInitRequest)returns(DecryptMessageInitResponse){}
  rpc DecryptMessage(DecryptMessageRequest)returns(DecryptMessageResponse){}
  rpc DecryptMessageBegin(DecryptMessageBeginRequest)returns(DecryptMessageBeginResponse){}
  rpc DecryptMessageNext(DecryptMessageNextRequest)returns(DecryptMessageNextResponse){}
  rpc MessageDecryptFinal(MessageDecryptFinalRequest)returns(MessageDecryptFinalResponse){}

  rpc DigestInit(DigestInitRequest)returns(DigestInitResponse){}
  rpc Digest(DigestRequest)returns(DigestResponse){}
  rpc DigestUpdate(DigestUpdateRequest)returns(DigestUpdateResponse){}
  rpc DigestKey(DigestKeyRequest)returns(DigestKeyResponse){}
  rpc DigestFinal(DigestFinalRequest)returns(DigestFinalResponse){}

  rpc SignInit(SignInitRequest)returns(SignInitResponse){}
  rpc Sign(SignRequest)returns(SignResponse){}
  rpc SignUpdate(SignUpdateRequest)returns(SignUpdateResponse){}
  rpc SignFinal(SignFinalRequest)returns(SignFinalResponse){}
  rpc SignRecoverInit(SignRecoverInitRequest)returns(SignRecoverInitResponse){}
  rpc SignRecover(SignRecoverRequest)returns(SignRecoverResponse){}

  rpc SignMessageInit(SignMessageInitRequest)returns(SignMessageInitResponse){}
  rpc SignMessage(SignMessageRequest)returns(SignMessageResponse){}
  rpc SignMessageBegin(SignMessageBeginRequest)returns(SignMessageBeginResponse){}
  rpc SignMessageNext(SignMessageNextRequest)returns(SignMessageNextResponse){}
  rpc SignMessageFinal(SignMessageFinalRequest)returns(SignMessageFinalResponse){}

  rpc VerifyInit(VerifyInitRequest)returns(VerifyInitResponse){}
  rpc Verify(VerifyRequest)returns(VerifyResponse){}
  rpc VerifyUpdate(VerifyUpdateRequest)returns(VerifyUpdateResponse){}
  rpc VerifyFinal(VerifyFinalRequest)returns(VerifyFinalResponse){}
  rpc VerifyRecoverInit(VerifyRecoverInitRequest)returns(VerifyRecoverInitResponse){}
  rpc VerifyRecover(VerifyRecoverRequest)returns(VerifyRecoverResponse){}

  rpc VerifyMessageInit(VerifyMessageInitRequest)returns(VerifyMessageInitResponse){}
  rpc VerifyMessage(VerifyMessageRequest)returns(VerifyMessageResponse){}
  rpc VerifyMessageBegin(VerifyMessageBeginRequest)returns(VerifyMessageBeginResponse){}
  rpc VerifyMessageNext(VerifyMessageNextRequest)returns(VerifyMessageNextResponse){}
  rpc VerifyMessageFinal(VerifyMessageFinalRequest)returns(VerifyMessageFinalResponse){}

  rpc DigestEncryptUpdate(DigestEncryptUpdateRequest)returns(DigestEncryptUpdateResponse){}
  rpc DecryptDigestUpdate(DecryptDigestUpdateRequest)returns(DecryptDigestUpdateResponse){}
  rpc SignEncryptUpdate(SignEncryptUpdateRequest)returns(SignEncryptUpdateResponse){}
  rpc DecryptVerifyUpdate(DecryptVerifyUpdateRequest)returns(DecryptVerifyUpdateResponse){}

  rpc GenerateKey(GenerateKeyRequest)returns(GenerateKeyResponse){}
  rpc GenerateKeyPair(GenerateKeyPairRequest)returns(GenerateKeyPairResponse){}
  rpc WrapKey(WrapKeyRequest)returns(WrapKeyResponse){}
  rpc UnwrapKey(UnwrapKeyRequest)returns(UnwrapKeyResponse){}
  rpc DeriveKey(DeriveKeyRequest)returns(DeriveKeyResponse){}

  rpc SeedRandom(SeedRandomRequest)returns(SeedRandomResponse){}
  rpc GenerateRandom(GenerateRandomRequest)returns(GenerateRandomResponse){}

  rpc GetFunctionStatus(GetFunctionStatusRequest)returns(GetFunctionStatusResponse){}
  rpc CancelFunction(CancelFunctionRequest)returns(CancelFunctionResponse){}
}

message InitializeRequest{}
message InitializeResponse{}
message FinalizeRequest{}
message FinalizeResponse{}
message GetInfoRequest{}
message GetInfoResponse{}
message GetFunctionListRequest{}
message GetFunctionListResponse{}
message GetInterfaceListRequest{}
message GetInterfaceListResponse{}
message GetInterfaceRequest{}
message GetInterfaceResponse{}

message GetSlotListRequest{}
message GetSlotListResponse{}
message GetSlotInfoRequest{}
message GetSlotInfoResponse{}
message GetTokenInfoRequest{}
message GetTokenInfoResponse{}
message WaitForSlotEventRequest{}
message WaitForSlotEventResponse{}
message GetMechanismListRequest{}
message GetMechanismListResponse{}
message GetMechanismInfoRequest{}
message GetMechanismInfoResponse{}
message InitTokenRequest{}
message InitTokenResponse{}
message InitPINRequest{}
message InitPINResponse{}
message SetPINRequest{}
message SetPINResponse{}

message OpenSessionRequest {
  uint64 slotId = 1;
  uint64 flags = 2;
}

message OpenSessionResponse {
  OpenSessionResponseData data = 1;
  ReturnValue returnValue = 2;
}

message OpenSessionResponseData {
  uint64 sessionHandle = 1;
}

message CloseSessionRequest {
  uint64 sessionHandle = 1;
}

message CloseSessionResponse {
  ReturnValue returnValue = 1;
}

message CloseAllSessionsRequest {
  uint64 slotId = 1;
}

message CloseAllSessionsResponse {
  ReturnValue returnValue = 1;
}

message GetSessionInfoRequest {
  uint64 sessionHandle = 1;
}

message GetSessionInfoResponse {
  ReturnValue returnValue = 1;
  GetSessionInfoData data = 2;
}

message CreateObjectRequest{}
message CreateObjectResponse{}
message CopyObjectRequest{}
message CopyObjectResponse{}
message DestroyObjectRequest{}
message DestroyObjectResponse{}
message GetObjectSizeRequest{}
message GetObjectSizeResponse{}
message GetAttributeValueRequest{}
message GetAttributeValueResponse{}
message SetAttributeValueRequest{}
message SetAttributeValueResponse{}
message FindObjectsInitRequest{}
message FindObjectsInitResponse{}
message FindObjectsRequest{}
message FindObjectsResponse{}
message FindObjectsFinalRequest{}
message FindObjectsFinalResponse{}

message EncryptInitRequest{}
message EncryptInitResponse{}
message EncryptRequest{}
message EncryptResponse{}
message EncryptUpdateRequest{}
message EncryptUpdateResponse{}
message EncryptFinalRequest{}
message EncryptFinalResponse{}

message EncryptMessageInitRequest{}
message EncryptMessageInitResponse{}
message EncryptMessageRequest{}
message EncryptMessageResponse{}
message EncryptMessageBeginRequest{}
message EncryptMessageBeginResponse{}
message EncryptMessageNextRequest{}
message EncryptMessageNextResponse{}
message EncryptMessageFinalRequest{}
message EncryptMessageFinalResponse{}

message DecryptInitRequest{}
message DecryptInitResponse{}
message DecryptRequest{}
message DecryptResponse{}
message DecryptUpdateRequest{}
message DecryptUpdateResponse{}
message DecryptFinalRequest{}
message DecryptFinalResponse{}

message DecryptMessageInitRequest{}
message DecryptMessageInitResponse{}
message DecryptMessageRequest{}
message DecryptMessageResponse{}
message DecryptMessageBeginRequest{}
message DecryptMessageBeginResponse{}
message DecryptMessageNextRequest{}
message DecryptMessageNextResponse{}
message MessageDecryptFinalRequest{}
message MessageDecryptFinalResponse{}

message DigestInitRequest{}
message DigestInitResponse{}
message DigestRequest{}
message DigestResponse{}
message DigestUpdateRequest{}
message DigestUpdateResponse{}
message DigestKeyRequest{}
message DigestKeyResponse{}
message DigestFinalRequest{}
message DigestFinalResponse{}

message SignInitRequest{}
message SignInitResponse{}
message SignRequest{}
message SignResponse{}
message SignUpdateRequest{}
message SignUpdateResponse{}
message SignFinalRequest{}
message SignFinalResponse{}
message SignRecoverInitRequest{}
message SignRecoverInitResponse{}
message SignRecoverRequest{}
message SignRecoverResponse{}

message SignMessageInitRequest{}
message SignMessageInitResponse{}
message SignMessageRequest{}
message SignMessageResponse{}
message SignMessageBeginRequest{}
message SignMessageBeginResponse{}
message SignMessageNextRequest{}
message SignMessageNextResponse{}
message SignMessageFinalRequest{}
message SignMessageFinalResponse{}

message VerifyInitRequest{}
message VerifyInitResponse{}
message VerifyRequest{}
message VerifyResponse{}
message VerifyUpdateRequest{}
message VerifyUpdateResponse{}
message VerifyFinalRequest{}
message VerifyFinalResponse{}
message VerifyRecoverInitRequest{}
message VerifyRecoverInitResponse{}
message VerifyRecoverRequest{}
message VerifyRecoverResponse{}

message VerifyMessageInitRequest{}
message VerifyMessageInitResponse{}
message VerifyMessageRequest{}
message VerifyMessageResponse{}
message VerifyMessageBeginRequest{}
message VerifyMessageBeginResponse{}
message VerifyMessageNextRequest{}
message VerifyMessageNextResponse{}
message VerifyMessageFinalRequest{}
message VerifyMessageFinalResponse{}

message DigestEncryptUpdateRequest{}
message DigestEncryptUpdateResponse{}
message DecryptDigestUpdateRequest{}
message DecryptDigestUpdateResponse{}
message SignEncryptUpdateRequest{}
message SignEncryptUpdateResponse{}
message DecryptVerifyUpdateRequest{}
message DecryptVerifyUpdateResponse{}

message GenerateKeyRequest{}
message GenerateKeyResponse{}
message GenerateKeyPairRequest{}
message GenerateKeyPairResponse{}
message WrapKeyRequest{}
message WrapKeyResponse{}
message UnwrapKeyRequest{}
message UnwrapKeyResponse{}
message DeriveKeyRequest{}
message DeriveKeyResponse{}

message SeedRandomRequest{}
message SeedRandomResponse{}
message GenerateRandomRequest{}
message GenerateRandomResponse{}

message GetFunctionStatusRequest{}
message GetFunctionStatusResponse{}
message CancelFunctionRequest{}
message CancelFunctionResponse{}

message GetSessionInfoData {
  SessionInfo info = 1;
}

message SessionInfo {
  uint64 slotId = 1;
  SessionState state = 2;
  uint64 flags = 3;

  uint64 ulDeviceError = 4;
}

enum SessionState {
  RO_PUBLIC_SESSION = 0;
  RO_USER_FUNCTIONS = 1;
  RW_PUBLIC_SESSION = 2;
  RW_USER_FUNCTIONS = 3;
  RW_SO_FUNCTIONS = 4;
}

message SessionCancelRequest {
  uint64 sessionHandle = 1;
}

message SessionCancelResponse {

}

enum ReturnValue{
  OK = 0x00000000;
  CANCEL = 0x00000001;
  HOST_MEMORY = 0x00000002;
  SLOT_ID_INVALID = 0x00000003;

  GENERAL_ERROR = 0x00000005;
  FUNCTION_FAILED = 0x00000006;

  ARGUMENTS_BAD = 0x00000007;
  NO_EVENT = 0x00000008;
  NEED_TO_CREATE_THREADS = 0x00000009;
  CANT_LOCK = 0x0000000A;

  ATTRIBUTE_READ_ONLY = 0x00000010;
  ATTRIBUTE_SENSITIVE = 0x00000011;
  ATTRIBUTE_TYPE_INVALID = 0x00000012;
  ATTRIBUTE_VALUE_INVALID = 0x00000013;

  ACTION_PROHIBITED = 0x0000001B;

  DATA_INVALID = 0x00000020;
  DATA_LEN_RANGE = 0x00000021;
  DEVICE_ERROR = 0x00000030;
  DEVICE_MEMORY = 0x00000031;
  DEVICE_REMOVED = 0x00000032;
  ENCRYPTED_DATA_INVALID = 0x00000040;
  ENCRYPTED_DATA_LEN_RANGE = 0x00000041;
  AEAD_DECRYPT_FAILED = 0x00000042;
  FUNCTION_CANCELED = 0x00000050;
  FUNCTION_NOT_PARALLEL = 0x00000051;

  FUNCTION_NOT_SUPPORTED = 0x00000054;

  KEY_HANDLE_INVALID = 0x00000060;

  KEY_SIZE_RANGE = 0x00000062;
  KEY_TYPE_INCONSISTENT = 0x00000063;

  KEY_NOT_NEEDED = 0x00000064;
  KEY_CHANGED = 0x00000065;
  KEY_NEEDED = 0x00000066;
  KEY_INDIGESTIBLE = 0x00000067;
  KEY_FUNCTION_NOT_PERMITTED = 0x00000068;
  KEY_NOT_WRAPPABLE = 0x00000069;
  KEY_UNEXTRACTABLE = 0x0000006A;

  MECHANISM_INVALID = 0x00000070;
  MECHANISM_PARAM_INVALID = 0x00000071;

  OBJECT_HANDLE_INVALID = 0x00000082;
  OPERATION_ACTIVE = 0x00000090;
  OPERATION_NOT_INITIALIZED = 0x00000091;
  PIN_INCORRECT = 0x000000A0;
  PIN_INVALID = 0x000000A1;
  PIN_LEN_RANGE = 0x000000A2;

  PIN_EXPIRED = 0x000000A3;
  PIN_LOCKED = 0x000000A4;

  SESSION_CLOSED = 0x000000B0;
  SESSION_COUNT = 0x000000B1;
  SESSION_HANDLE_INVALID = 0x000000B3;
  SESSION_PARALLEL_NOT_SUPPORTED = 0x000000B4;
  SESSION_READ_ONLY = 0x000000B5;
  SESSION_EXISTS = 0x000000B6;

  SESSION_READ_ONLY_EXISTS = 0x000000B7;
  SESSION_READ_WRITE_SO_EXISTS = 0x000000B8;

  SIGNATURE_INVALID = 0x000000C0;
  SIGNATURE_LEN_RANGE = 0x000000C1;
  TEMPLATE_INCOMPLETE = 0x000000D0;
  TEMPLATE_INCONSISTENT = 0x000000D1;
  TOKEN_NOT_PRESENT = 0x000000E0;
  TOKEN_NOT_RECOGNIZED = 0x000000E1;
  TOKEN_WRITE_PROTECTED = 0x000000E2;
  UNWRAPPING_KEY_HANDLE_INVALID = 0x000000F0;
  UNWRAPPING_KEY_SIZE_RANGE = 0x000000F1;
  UNWRAPPING_KEY_TYPE_INCONSISTENT = 0x000000F2;
  USER_ALREADY_LOGGED_IN = 0x00000100;
  USER_NOT_LOGGED_IN = 0x00000101;
  USER_PIN_NOT_INITIALIZED = 0x00000102;
  USER_TYPE_INVALID = 0x00000103;

  USER_ANOTHER_ALREADY_LOGGED_IN = 0x00000104;
  USER_TOO_MANY_TYPES = 0x00000105;

  WRAPPED_KEY_INVALID = 0x00000110;
  WRAPPED_KEY_LEN_RANGE = 0x00000112;
  WRAPPING_KEY_HANDLE_INVALID = 0x00000113;
  WRAPPING_KEY_SIZE_RANGE = 0x00000114;
  WRAPPING_KEY_TYPE_INCONSISTENT = 0x00000115;
  RANDOM_SEED_NOT_SUPPORTED = 0x00000120;

  RANDOM_NO_RNG = 0x00000121;

  DOMAIN_PARAMS_INVALID = 0x00000130;

  CURVE_NOT_SUPPORTED = 0x00000140;

  BUFFER_TOO_SMALL = 0x00000150;
  SAVED_STATE_INVALID = 0x00000160;
  INFORMATION_SENSITIVE = 0x00000170;
  STATE_UNSAVEABLE = 0x00000180;

  CRYPTOKI_NOT_INITIALIZED = 0x00000190;
  CRYPTOKI_ALREADY_INITIALIZED = 0x00000191;
  MUTEX_BAD = 0x000001A0;
  MUTEX_NOT_LOCKED = 0x000001A1;

  NEW_PIN_MODE = 0x000001B0;
  NEXT_OTP = 0x000001B1;

  EXCEEDED_MAX_ITERATIONS = 0x000001B5;
  FIPS_SELF_TEST_FAILED = 0x000001B6;
  LIBRARY_LOAD_FAILED = 0x000001B7;
  PIN_TOO_WEAK = 0x000001B8;
  PUBLIC_KEY_INVALID = 0x000001B9;

  FUNCTION_REJECTED = 0x00000200;
  TOKEN_RESOURCE_EXCEEDED = 0x00000201;
  OPERATION_CANCEL_FAILED = 0x00000202;

  // VENDOR_DEFINED                    =0x80000000;
}