syntax = "proto3";

option go_package = "github.com/edipermadi/softhsm/pkg/transport/pb";
option java_multiple_files = true;
option java_package = "com.github.edipermadi.softhsm.hsm";
option java_outer_classname = "HSMProto";

package pb;

service CryptographicToken {
  rpc Initialize(InitializeRequest)returns(InitializeResponse){}
  rpc Finalize(FinalizeRequest)returns(FinalizeResponse){}
  rpc GetInfo(GetInfoRequest)returns(GetInfoResponse){}
  rpc GetFunctionList(GetFunctionListRequest)returns(GetFunctionListResponse){}
  rpc GetInterfaceList(GetInterfaceListRequest)returns(GetInterfaceListResponse){}
  rpc GetInterface(GetInterfaceRequest)returns(GetInterfaceResponse){}

  rpc GetSlotList(GetSlotListRequest)returns (GetSlotListResponse){}
  rpc GetSlotInfo(GetSlotInfoRequest)returns (GetSlotInfoResponse){}
  rpc GetTokenInfo(GetTokenInfoRequest)returns (GetTokenInfoResponse){}
  rpc WaitForSlotEvent(WaitForSlotEventRequest)returns (WaitForSlotEventResponse){}
  rpc GetMechanismList(GetMechanismListRequest)returns (GetMechanismListResponse){}
  rpc GetMechanismInfo(GetMechanismInfoRequest)returns (GetMechanismInfoResponse){}
  rpc InitToken(InitTokenRequest)returns (InitTokenResponse){}
  rpc InitPIN(InitPINRequest)returns (InitPINResponse){}
  rpc SetPIN(SetPINRequest)returns (SetPINResponse){}

  rpc OpenSession(OpenSessionRequest)returns (OpenSessionResponse){}
  rpc CloseSession(CloseSessionRequest)returns (CloseSessionResponse){}
  rpc CloseAllSessions(CloseAllSessionsRequest)returns (CloseAllSessionsResponse){}
  rpc GetSessionInfo(GetSessionInfoRequest)returns (GetSessionInfoResponse){}
  rpc SessionCancel(SessionCancelRequest)returns(SessionCancelResponse){}

  rpc CreateObject(CreateObjectRequest)returns(CreateObjectResponse){}
  rpc CopyObject(CopyObjectRequest)returns(CopyObjectResponse){}
  rpc DestroyObject(DestroyObjectRequest)returns(DestroyObjectResponse){}
  rpc GetObjectSize(GetObjectSizeRequest)returns(GetObjectSizeResponse){}
  rpc GetAttributeValue(GetAttributeValueRequest)returns(GetAttributeValueResponse){}
  rpc SetAttributeValue(SetAttributeValueRequest)returns(SetAttributeValueResponse){}
  rpc FindObjectsInit(FindObjectsInitRequest)returns(FindObjectsInitResponse){}
  rpc FindObjects(FindObjectsRequest)returns(FindObjectsResponse){}
  rpc FindObjectsFinal(FindObjectsFinalRequest)returns(FindObjectsFinalResponse){}

  rpc EncryptInit(EncryptInitRequest) returns(EncryptInitResponse){}
  rpc Encrypt(EncryptRequest) returns(EncryptResponse){}
  rpc EncryptUpdate(EncryptUpdateRequest) returns(EncryptUpdateResponse){}
  rpc EncryptFinal(EncryptFinalRequest) returns(EncryptFinalResponse){}

  rpc EncryptMessageInit(EncryptMessageInitRequest)returns(EncryptMessageInitResponse){}
  rpc EncryptMessage(EncryptMessageRequest)returns(EncryptMessageResponse){}
  rpc EncryptMessageBegin(EncryptMessageBeginRequest)returns(EncryptMessageBeginResponse){}
  rpc EncryptMessageNext(EncryptMessageNextRequest)returns(EncryptMessageNextResponse){}
  rpc EncryptMessageFinal(EncryptMessageFinalRequest)returns(EncryptMessageFinalResponse){}

  rpc DecryptInit(DecryptInitRequest)returns(DecryptInitResponse){}
  rpc Decrypt(DecryptRequest)returns(DecryptResponse){}
  rpc DecryptUpdate(DecryptUpdateRequest)returns(DecryptUpdateResponse){}
  rpc DecryptFinal(DecryptFinalRequest)returns(DecryptFinalResponse){}

  rpc DecryptMessageInit(DecryptMessageInitRequest)returns(DecryptMessageInitResponse){}
  rpc DecryptMessage(DecryptMessageRequest)returns(DecryptMessageResponse){}
  rpc DecryptMessageBegin(DecryptMessageBeginRequest)returns(DecryptMessageBeginResponse){}
  rpc DecryptMessageNext(DecryptMessageNextRequest)returns(DecryptMessageNextResponse){}
  rpc MessageDecryptFinal(MessageDecryptFinalRequest)returns(MessageDecryptFinalResponse){}

  rpc DigestInit(DigestInitRequest)returns(DigestInitResponse){}
  rpc Digest(DigestRequest)returns(DigestResponse){}
  rpc DigestUpdate(DigestUpdateRequest)returns(DigestUpdateResponse){}
  rpc DigestKey(DigestKeyRequest)returns(DigestKeyResponse){}
  rpc DigestFinal(DigestFinalRequest)returns(DigestFinalResponse){}

  rpc SignInit(SignInitRequest)returns(SignInitResponse){}
  rpc Sign(SignRequest)returns(SignResponse){}
  rpc SignUpdate(SignUpdateRequest)returns(SignUpdateResponse){}
  rpc SignFinal(SignFinalRequest)returns(SignFinalResponse){}
  rpc SignRecoverInit(SignRecoverInitRequest)returns(SignRecoverInitResponse){}
  rpc SignRecover(SignRecoverRequest)returns(SignRecoverResponse){}

  rpc SignMessageInit(SignMessageInitRequest)returns(SignMessageInitResponse){}
  rpc SignMessage(SignMessageRequest)returns(SignMessageResponse){}
  rpc SignMessageBegin(SignMessageBeginRequest)returns(SignMessageBeginResponse){}
  rpc SignMessageNext(SignMessageNextRequest)returns(SignMessageNextResponse){}
  rpc SignMessageFinal(SignMessageFinalRequest)returns(SignMessageFinalResponse){}

  rpc VerifyInit(VerifyInitRequest)returns(VerifyInitResponse){}
  rpc Verify(VerifyRequest)returns(VerifyResponse){}
  rpc VerifyUpdate(VerifyUpdateRequest)returns(VerifyUpdateResponse){}
  rpc VerifyFinal(VerifyFinalRequest)returns(VerifyFinalResponse){}
  rpc VerifyRecoverInit(VerifyRecoverInitRequest)returns(VerifyRecoverInitResponse){}
  rpc VerifyRecover(VerifyRecoverRequest)returns(VerifyRecoverResponse){}

  rpc VerifyMessageInit(VerifyMessageInitRequest)returns(VerifyMessageInitResponse){}
  rpc VerifyMessage(VerifyMessageRequest)returns(VerifyMessageResponse){}
  rpc VerifyMessageBegin(VerifyMessageBeginRequest)returns(VerifyMessageBeginResponse){}
  rpc VerifyMessageNext(VerifyMessageNextRequest)returns(VerifyMessageNextResponse){}
  rpc VerifyMessageFinal(VerifyMessageFinalRequest)returns(VerifyMessageFinalResponse){}

  rpc DigestEncryptUpdate(DigestEncryptUpdateRequest)returns(DigestEncryptUpdateResponse){}
  rpc DecryptDigestUpdate(DecryptDigestUpdateRequest)returns(DecryptDigestUpdateResponse){}
  rpc SignEncryptUpdate(SignEncryptUpdateRequest)returns(SignEncryptUpdateResponse){}
  rpc DecryptVerifyUpdate(DecryptVerifyUpdateRequest)returns(DecryptVerifyUpdateResponse){}

  rpc GenerateKey(GenerateKeyRequest)returns(GenerateKeyResponse){}
  rpc GenerateKeyPair(GenerateKeyPairRequest)returns(GenerateKeyPairResponse){}
  rpc WrapKey(WrapKeyRequest)returns(WrapKeyResponse){}
  rpc UnwrapKey(UnwrapKeyRequest)returns(UnwrapKeyResponse){}
  rpc DeriveKey(DeriveKeyRequest)returns(DeriveKeyResponse){}

  rpc SeedRandom(SeedRandomRequest)returns(SeedRandomResponse){}
  rpc GenerateRandom(GenerateRandomRequest)returns(GenerateRandomResponse){}

  rpc GetFunctionStatus(GetFunctionStatusRequest)returns(GetFunctionStatusResponse){}
  rpc CancelFunction(CancelFunctionRequest)returns(CancelFunctionResponse){}
}

message InitializeRequest{}
message InitializeResponse{}
message FinalizeRequest{}
message FinalizeResponse{}
message GetInfoRequest{}
message GetInfoResponse{}
message GetFunctionListRequest{}
message GetFunctionListResponse{}
message GetInterfaceListRequest{}
message GetInterfaceListResponse{}
message GetInterfaceRequest{}
message GetInterfaceResponse{}

message GetSlotListRequest{}
message GetSlotListResponse{}
message GetSlotInfoRequest{}
message GetSlotInfoResponse{}
message GetTokenInfoRequest{}
message GetTokenInfoResponse{}
message WaitForSlotEventRequest{}
message WaitForSlotEventResponse{}
message GetMechanismListRequest{}
message GetMechanismListResponse{}
message GetMechanismInfoRequest{}
message GetMechanismInfoResponse{}
message InitTokenRequest{}
message InitTokenResponse{}
message InitPINRequest{}
message InitPINResponse{}
message SetPINRequest{}
message SetPINResponse{}

message OpenSessionRequest {
  uint64 slotId = 1;
  uint64 flags = 2;
}

message OpenSessionResponse {
  OpenSessionResponseData data = 1;
  ReturnValue returnValue = 2;
}

message OpenSessionResponseData {
  uint64 sessionHandle = 1;
}

message CloseSessionRequest {
  uint64 sessionHandle = 1;
}

message CloseSessionResponse {
  ReturnValue returnValue = 1;
}

message CloseAllSessionsRequest {
  uint64 slotId = 1;
}

message CloseAllSessionsResponse {
  ReturnValue returnValue = 1;
}

message GetSessionInfoRequest {
  uint64 sessionHandle = 1;
}

message GetSessionInfoResponse {
  ReturnValue returnValue = 1;
  GetSessionInfoData data = 2;
}

message CreateObjectRequest{}
message CreateObjectResponse{}
message CopyObjectRequest{}
message CopyObjectResponse{}
message DestroyObjectRequest{}
message DestroyObjectResponse{}
message GetObjectSizeRequest{}
message GetObjectSizeResponse{}
message GetAttributeValueRequest{}
message GetAttributeValueResponse{}
message SetAttributeValueRequest{}
message SetAttributeValueResponse{}
message FindObjectsInitRequest{}
message FindObjectsInitResponse{}
message FindObjectsRequest{}
message FindObjectsResponse{}
message FindObjectsFinalRequest{}
message FindObjectsFinalResponse{}

message EncryptInitRequest{}
message EncryptInitResponse{}
message EncryptRequest{}
message EncryptResponse{}
message EncryptUpdateRequest{}
message EncryptUpdateResponse{}
message EncryptFinalRequest{}
message EncryptFinalResponse{}

message EncryptMessageInitRequest{}
message EncryptMessageInitResponse{}
message EncryptMessageRequest{}
message EncryptMessageResponse{}
message EncryptMessageBeginRequest{}
message EncryptMessageBeginResponse{}
message EncryptMessageNextRequest{}
message EncryptMessageNextResponse{}
message EncryptMessageFinalRequest{}
message EncryptMessageFinalResponse{}

message DecryptInitRequest{}
message DecryptInitResponse{}
message DecryptRequest{}
message DecryptResponse{}
message DecryptUpdateRequest{}
message DecryptUpdateResponse{}
message DecryptFinalRequest{}
message DecryptFinalResponse{}

message DecryptMessageInitRequest{}
message DecryptMessageInitResponse{}
message DecryptMessageRequest{}
message DecryptMessageResponse{}
message DecryptMessageBeginRequest{}
message DecryptMessageBeginResponse{}
message DecryptMessageNextRequest{}
message DecryptMessageNextResponse{}
message MessageDecryptFinalRequest{}
message MessageDecryptFinalResponse{}

enum MechanismType {
  RSA_PKCS_KEY_PAIR_GEN = 0x00000000;
  RSA_PKCS = 0x00000001;
  RSA_9796 = 0x00000002;
  RSA_X_509 = 0x00000003;

  MD2_RSA_PKCS = 0x00000004;
  MD5_RSA_PKCS = 0x00000005;
  SHA1_RSA_PKCS = 0x00000006;

  RIPEMD128_RSA_PKCS = 0x00000007;
  RIPEMD160_RSA_PKCS = 0x00000008;
  RSA_PKCS_OAEP = 0x00000009;

  RSA_X9_31_KEY_PAIR_GEN = 0x0000000A;
  RSA_X9_31 = 0x0000000B;
  SHA1_RSA_X9_31 = 0x0000000C;
  RSA_PKCS_PSS = 0x0000000D;
  SHA1_RSA_PKCS_PSS = 0x0000000E;

  DSA_KEY_PAIR_GEN = 0x00000010;
  DSA = 0x00000011;
  DSA_SHA1 = 0x00000012;
  DSA_SHA224 = 0x00000013;
  DSA_SHA256 = 0x00000014;
  DSA_SHA384 = 0x00000015;
  DSA_SHA512 = 0x00000016;
  DSA_SHA3_224 = 0x00000018;
  DSA_SHA3_256 = 0x00000019;
  DSA_SHA3_384 = 0x0000001A;
  DSA_SHA3_512 = 0x0000001B;

  DH_PKCS_KEY_PAIR_GEN = 0x00000020;
  DH_PKCS_DERIVE = 0x00000021;

  X9_42_DH_KEY_PAIR_GEN = 0x00000030;
  X9_42_DH_DERIVE = 0x00000031;
  X9_42_DH_HYBRID_DERIVE = 0x00000032;
  X9_42_MQV_DERIVE = 0x00000033;

  SHA256_RSA_PKCS = 0x00000040;
  SHA384_RSA_PKCS = 0x00000041;
  SHA512_RSA_PKCS = 0x00000042;
  SHA256_RSA_PKCS_PSS = 0x00000043;
  SHA384_RSA_PKCS_PSS = 0x00000044;
  SHA512_RSA_PKCS_PSS = 0x00000045;

  SHA224_RSA_PKCS = 0x00000046;
  SHA224_RSA_PKCS_PSS = 0x00000047;

  SHA512_224 = 0x00000048;
  SHA512_224_HMAC = 0x00000049;
  SHA512_224_HMAC_GENERAL = 0x0000004A;
  SHA512_224_KEY_DERIVATION = 0x0000004B;
  SHA512_256 = 0x0000004C;
  SHA512_256_HMAC = 0x0000004D;
  SHA512_256_HMAC_GENERAL = 0x0000004E;
  SHA512_256_KEY_DERIVATION = 0x0000004F;

  SHA512_T = 0x00000050;
  SHA512_T_HMAC = 0x00000051;
  SHA512_T_HMAC_GENERAL = 0x00000052;
  SHA512_T_KEY_DERIVATION = 0x00000053;

  SHA3_256_RSA_PKCS = 0x00000060;
  SHA3_384_RSA_PKCS = 0x00000061;
  SHA3_512_RSA_PKCS = 0x00000062;
  SHA3_256_RSA_PKCS_PSS = 0x00000063;
  SHA3_384_RSA_PKCS_PSS = 0x00000064;
  SHA3_512_RSA_PKCS_PSS = 0x00000065;
  SHA3_224_RSA_PKCS = 0x00000066;
  SHA3_224_RSA_PKCS_PSS = 0x00000067;

  RC2_KEY_GEN = 0x00000100;
  RC2_ECB = 0x00000101;
  RC2_CBC = 0x00000102;
  RC2_MAC = 0x00000103;

  RC2_MAC_GENERAL = 0x00000104;
  RC2_CBC_PAD = 0x00000105;

  RC4_KEY_GEN = 0x00000110;
  RC4 = 0x00000111;
  DES_KEY_GEN = 0x00000120;
  DES_ECB = 0x00000121;
  DES_CBC = 0x00000122;
  DES_MAC = 0x00000123;

  DES_MAC_GENERAL = 0x00000124;
  DES_CBC_PAD = 0x00000125;

  DES2_KEY_GEN = 0x00000130;
  DES3_KEY_GEN = 0x00000131;
  DES3_ECB = 0x00000132;
  DES3_CBC = 0x00000133;
  DES3_MAC = 0x00000134;

  DES3_MAC_GENERAL = 0x00000135;
  DES3_CBC_PAD = 0x00000136;
  DES3_CMAC_GENERAL = 0x00000137;
  DES3_CMAC = 0x00000138;
  CDMF_KEY_GEN = 0x00000140;
  CDMF_ECB = 0x00000141;
  CDMF_CBC = 0x00000142;
  CDMF_MAC = 0x00000143;
  CDMF_MAC_GENERAL = 0x00000144;
  CDMF_CBC_PAD = 0x00000145;

  DES_OFB64 = 0x00000150;
  DES_OFB8 = 0x00000151;
  DES_CFB64 = 0x00000152;
  DES_CFB8 = 0x00000153;

  MD2 = 0x00000200;

  MD2_HMAC = 0x00000201;
  MD2_HMAC_GENERAL = 0x00000202;

  MD5 = 0x00000210;

  MD5_HMAC = 0x00000211;
  MD5_HMAC_GENERAL = 0x00000212;

  SHA_1 = 0x00000220;

  SHA_1_HMAC = 0x00000221;
  SHA_1_HMAC_GENERAL = 0x00000222;

  RIPEMD128 = 0x00000230;
  RIPEMD128_HMAC = 0x00000231;
  RIPEMD128_HMAC_GENERAL = 0x00000232;
  RIPEMD160 = 0x00000240;
  RIPEMD160_HMAC = 0x00000241;
  RIPEMD160_HMAC_GENERAL = 0x00000242;

  SHA256 = 0x00000250;
  SHA256_HMAC = 0x00000251;
  SHA256_HMAC_GENERAL = 0x00000252;
  SHA224 = 0x00000255;
  SHA224_HMAC = 0x00000256;
  SHA224_HMAC_GENERAL = 0x00000257;
  SHA384 = 0x00000260;
  SHA384_HMAC = 0x00000261;
  SHA384_HMAC_GENERAL = 0x00000262;
  SHA512 = 0x00000270;
  SHA512_HMAC = 0x00000271;
  SHA512_HMAC_GENERAL = 0x00000272;
  SECURID_KEY_GEN = 0x00000280;
  SECURID = 0x00000282;
  HOTP_KEY_GEN = 0x00000290;
  HOTP = 0x00000291;
  ACTI = 0x000002A0;
  ACTI_KEY_GEN = 0x000002A1;

  SHA3_256 = 0x000002B0;
  SHA3_256_HMAC = 0x000002B1;
  SHA3_256_HMAC_GENERAL = 0x000002B2;
  SHA3_256_KEY_GEN = 0x000002B3;
  SHA3_224 = 0x000002B5;
  SHA3_224_HMAC = 0x000002B6;
  SHA3_224_HMAC_GENERAL = 0x000002B7;
  SHA3_224_KEY_GEN = 0x000002B8;
  SHA3_384 = 0x000002C0;
  SHA3_384_HMAC = 0x000002C1;
  SHA3_384_HMAC_GENERAL = 0x000002C2;
  SHA3_384_KEY_GEN = 0x000002C3;
  SHA3_512 = 0x000002D0;
  SHA3_512_HMAC = 0x000002D1;
  SHA3_512_HMAC_GENERAL = 0x000002D2;
  SHA3_512_KEY_GEN = 0x000002D3;


  CAST_KEY_GEN = 0x00000300;
  CAST_ECB = 0x00000301;
  CAST_CBC = 0x00000302;
  CAST_MAC = 0x00000303;
  CAST_MAC_GENERAL = 0x00000304;
  CAST_CBC_PAD = 0x00000305;
  CAST3_KEY_GEN = 0x00000310;
  CAST3_ECB = 0x00000311;
  CAST3_CBC = 0x00000312;
  CAST3_MAC = 0x00000313;
  CAST3_MAC_GENERAL = 0x00000314;
  CAST3_CBC_PAD = 0x00000315;
  CAST5_KEY_GEN = 0x00000320;
  CAST5_ECB = 0x00000321;
  CAST5_CBC = 0x00000322;
  CAST5_MAC = 0x00000323;
  CAST5_MAC_GENERAL = 0x00000324;
  CAST5_CBC_PAD = 0x00000325;
  RC5_KEY_GEN = 0x00000330;
  RC5_ECB = 0x00000331;
  RC5_CBC = 0x00000332;
  RC5_MAC = 0x00000333;
  RC5_MAC_GENERAL = 0x00000334;
  RC5_CBC_PAD = 0x00000335;
  IDEA_KEY_GEN = 0x00000340;
  IDEA_ECB = 0x00000341;
  IDEA_CBC = 0x00000342;
  IDEA_MAC = 0x00000343;
  IDEA_MAC_GENERAL = 0x00000344;
  IDEA_CBC_PAD = 0x00000345;
  GENERIC_SECRET_KEY_GEN = 0x00000350;
  CONCATENATE_BASE_AND_KEY = 0x00000360;
  CONCATENATE_BASE_AND_DATA = 0x00000362;
  CONCATENATE_DATA_AND_BASE = 0x00000363;
  XOR_BASE_AND_DATA = 0x00000364;
  EXTRACT_KEY_FROM_KEY = 0x00000365;
  SSL3_PRE_MASTER_KEY_GEN = 0x00000370;
  SSL3_MASTER_KEY_DERIVE = 0x00000371;
  SSL3_KEY_AND_MAC_DERIVE = 0x00000372;

  SSL3_MASTER_KEY_DERIVE_DH = 0x00000373;
  TLS_PRE_MASTER_KEY_GEN = 0x00000374;
  TLS_MASTER_KEY_DERIVE = 0x00000375;
  TLS_KEY_AND_MAC_DERIVE = 0x00000376;
  TLS_MASTER_KEY_DERIVE_DH = 0x00000377;

  TLS_PRF = 0x00000378 ;

  SSL3_MD5_MAC = 0x00000380;
  SSL3_SHA1_MAC = 0x00000381;
  MD5_KEY_DERIVATION = 0x00000390;
  MD2_KEY_DERIVATION = 0x00000391;
  SHA1_KEY_DERIVATION = 0x00000392;

  SHA256_KEY_DERIVATION = 0x00000393;
  SHA384_KEY_DERIVATION = 0x00000394;
  SHA512_KEY_DERIVATION = 0x00000395;
  SHA224_KEY_DERIVATION = 0x00000396;
  SHA3_256_KEY_DERIVATION = 0x00000397;
  SHA3_224_KEY_DERIVATION = 0x00000398;
  SHA3_384_KEY_DERIVATION = 0x00000399;
  SHA3_512_KEY_DERIVATION = 0x0000039A;
  SHAKE_128_KEY_DERIVATION = 0x0000039B;
  SHAKE_256_KEY_DERIVATION = 0x0000039C;

  PBE_MD2_DES_CBC = 0x000003A0;
  PBE_MD5_DES_CBC = 0x000003A1;
  PBE_MD5_CAST_CBC = 0x000003A2;
  PBE_MD5_CAST3_CBC = 0x000003A3;
  PBE_MD5_CAST5_CBC = 0x000003A4;
  PBE_SHA1_CAST5_CBC = 0x000003A5;
  PBE_SHA1_RC4_128 = 0x000003A6;
  PBE_SHA1_RC4_40 = 0x000003A7;
  PBE_SHA1_DES3_EDE_CBC = 0x000003A8;
  PBE_SHA1_DES2_EDE_CBC = 0x000003A9;
  PBE_SHA1_RC2_128_CBC = 0x000003AA;
  PBE_SHA1_RC2_40_CBC = 0x000003AB;

  PKCS5_PBKD2 = 0x000003B0;

  PBA_SHA1_WITH_SHA1_HMAC = 0x000003C0;

  WTLS_PRE_MASTER_KEY_GEN = 0x000003D0;
  WTLS_MASTER_KEY_DERIVE = 0x000003D1;
  WTLS_MASTER_KEY_DERIVE_DH_ECC = 0x000003D2;
  WTLS_PRF = 0x000003D3;
  WTLS_SERVER_KEY_AND_MAC_DERIVE = 0x000003D4;
  WTLS_CLIENT_KEY_AND_MAC_DERIVE = 0x000003D5;

  TLS12_MAC = 0x000003D8;
  TLS12_KDF = 0x000003D9;
  TLS12_MASTER_KEY_DERIVE = 0x000003E0;
  TLS12_KEY_AND_MAC_DERIVE = 0x000003E1;
  TLS12_MASTER_KEY_DERIVE_DH = 0x000003E2;
  TLS12_KEY_SAFE_DERIVE = 0x000003E3;
  TLS_MAC = 0x000003E4;
  TLS_KDF = 0x000003E5;

  KEY_WRAP_LYNKS = 0x00000400;
  KEY_WRAP_SET_OAEP = 0x00000401;

  CMS_SIG = 0x00000500;
  KIP_DERIVE = 0x00000510;
  KIP_WRAP = 0x00000511;
  KIP_MAC = 0x00000512;

  CAMELLIA_KEY_GEN = 0x00000550;
  CAMELLIA_ECB = 0x00000551;
  CAMELLIA_CBC = 0x00000552;
  CAMELLIA_MAC = 0x00000553;
  CAMELLIA_MAC_GENERAL = 0x00000554;
  CAMELLIA_CBC_PAD = 0x00000555;
  CAMELLIA_ECB_ENCRYPT_DATA = 0x00000556;
  CAMELLIA_CBC_ENCRYPT_DATA = 0x00000557;
  CAMELLIA_CTR = 0x00000558;

  ARIA_KEY_GEN = 0x00000560;
  ARIA_ECB = 0x00000561;
  ARIA_CBC = 0x00000562;
  ARIA_MAC = 0x00000563;
  ARIA_MAC_GENERAL = 0x00000564;
  ARIA_CBC_PAD = 0x00000565;
  ARIA_ECB_ENCRYPT_DATA = 0x00000566;
  ARIA_CBC_ENCRYPT_DATA = 0x00000567;

  SEED_KEY_GEN = 0x00000650;
  SEED_ECB = 0x00000651;
  SEED_CBC = 0x00000652;
  SEED_MAC = 0x00000653;
  SEED_MAC_GENERAL = 0x00000654;
  SEED_CBC_PAD = 0x00000655;
  SEED_ECB_ENCRYPT_DATA = 0x00000656;
  SEED_CBC_ENCRYPT_DATA = 0x00000657;

  SKIPJACK_KEY_GEN = 0x00001000;
  SKIPJACK_ECB64 = 0x00001001;
  SKIPJACK_CBC64 = 0x00001002;
  SKIPJACK_OFB64 = 0x00001003;
  SKIPJACK_CFB64 = 0x00001004;
  SKIPJACK_CFB32 = 0x00001005;
  SKIPJACK_CFB16 = 0x00001006;
  SKIPJACK_CFB8 = 0x00001007;
  SKIPJACK_WRAP = 0x00001008;
  SKIPJACK_PRIVATE_WRAP = 0x00001009;
  SKIPJACK_RELAYX = 0x0000100a;
  KEA_KEY_PAIR_GEN = 0x00001010;
  KEA_KEY_DERIVE = 0x00001011;
  KEA_DERIVE = 0x00001012;
  FORTEZZA_TIMESTAMP = 0x00001020;
  BATON_KEY_GEN = 0x00001030;
  BATON_ECB128 = 0x00001031;
  BATON_ECB96 = 0x00001032;
  BATON_CBC128 = 0x00001033;
  BATON_COUNTER = 0x00001034;
  BATON_SHUFFLE = 0x00001035;
  BATON_WRAP = 0x00001036;

  EC_KEY_PAIR_GEN = 0x00001040;

  ECDSA = 0x00001041;
  ECDSA_SHA1 = 0x00001042;
  ECDSA_SHA224 = 0x00001043;
  ECDSA_SHA256 = 0x00001044;
  ECDSA_SHA384 = 0x00001045;
  ECDSA_SHA512 = 0x00001046;
  EC_KEY_PAIR_GEN_W_EXTRA_BITS = 0x0000140B;

  ECDH1_DERIVE = 0x00001050;
  ECDH1_COFACTOR_DERIVE = 0x00001051;
  ECMQV_DERIVE = 0x00001052;

  ECDH_AES_KEY_WRAP = 0x00001053;
  RSA_AES_KEY_WRAP = 0x00001054;

  JUNIPER_KEY_GEN = 0x00001060;
  JUNIPER_ECB128 = 0x00001061;
  JUNIPER_CBC128 = 0x00001062;
  JUNIPER_COUNTER = 0x00001063;
  JUNIPER_SHUFFLE = 0x00001064;
  JUNIPER_WRAP = 0x00001065;
  FASTHASH = 0x00001070;

  AES_XTS = 0x00001071;
  AES_XTS_KEY_GEN = 0x00001072;
  AES_KEY_GEN = 0x00001080;
  AES_ECB = 0x00001081;
  AES_CBC = 0x00001082;
  AES_MAC = 0x00001083;
  AES_MAC_GENERAL = 0x00001084;
  AES_CBC_PAD = 0x00001085;
  AES_CTR = 0x00001086;
  AES_GCM = 0x00001087;
  AES_CCM = 0x00001088;
  AES_CTS = 0x00001089;
  AES_CMAC = 0x0000108A;
  AES_CMAC_GENERAL = 0x0000108B;

  AES_XCBC_MAC = 0x0000108C;
  AES_XCBC_MAC_96 = 0x0000108D;
  AES_GMAC = 0x0000108E;

  BLOWFISH_KEY_GEN = 0x00001090;
  BLOWFISH_CBC = 0x00001091;
  TWOFISH_KEY_GEN = 0x00001092;
  TWOFISH_CBC = 0x00001093;
  BLOWFISH_CBC_PAD = 0x00001094;
  TWOFISH_CBC_PAD = 0x00001095;

  DES_ECB_ENCRYPT_DATA = 0x00001100;
  DES_CBC_ENCRYPT_DATA = 0x00001101;
  DES3_ECB_ENCRYPT_DATA = 0x00001102;
  DES3_CBC_ENCRYPT_DATA = 0x00001103;
  AES_ECB_ENCRYPT_DATA = 0x00001104;
  AES_CBC_ENCRYPT_DATA = 0x00001105;

  GOSTR3410_KEY_PAIR_GEN = 0x00001200;
  GOSTR3410 = 0x00001201;
  GOSTR3410_WITH_GOSTR3411 = 0x00001202;
  GOSTR3410_KEY_WRAP = 0x00001203;
  GOSTR3410_DERIVE = 0x00001204;
  GOSTR3411 = 0x00001210;
  GOSTR3411_HMAC = 0x00001211;
  GOST28147_KEY_GEN = 0x00001220;
  GOST28147_ECB = 0x00001221;
  GOST28147 = 0x00001222;
  GOST28147_MAC = 0x00001223;
  GOST28147_KEY_WRAP = 0x00001224;
  CHACHA20_KEY_GEN = 0x00001225;
  CHACHA20 = 0x00001226;
  POLY1305_KEY_GEN = 0x00001227;
  POLY1305 = 0x00001228;
  DSA_PARAMETER_GEN = 0x00002000;
  DH_PKCS_PARAMETER_GEN = 0x00002001;
  X9_42_DH_PARAMETER_GEN = 0x00002002;
  DSA_PROBABILISTIC_PARAMETER_GEN = 0x00002003;
  DSA_SHAWE_TAYLOR_PARAMETER_GEN = 0x00002004;
  DSA_FIPS_G_GEN = 0x00002005;

  AES_OFB = 0x00002104;
  AES_CFB64 = 0x00002105;
  AES_CFB8 = 0x00002106;
  AES_CFB128 = 0x00002107;

  AES_CFB1 = 0x00002108;
  AES_KEY_WRAP = 0x00002109;
  AES_KEY_WRAP_PAD = 0x0000210A;
  AES_KEY_WRAP_KWP = 0x0000210B;

  RSA_PKCS_TPM_1_1 = 0x00004001;
  RSA_PKCS_OAEP_TPM_1_1 = 0x00004002;

  SHA_1_KEY_GEN = 0x00004003;
  SHA224_KEY_GEN = 0x00004004;
  SHA256_KEY_GEN = 0x00004005;
  SHA384_KEY_GEN = 0x00004006;
  SHA512_KEY_GEN = 0x00004007;
  SHA512_224_KEY_GEN = 0x00004008;
  SHA512_256_KEY_GEN = 0x00004009;
  SHA512_T_KEY_GEN = 0x0000400a;
  NULL = 0x0000400b;
  BLAKE2B_160 = 0x0000400c;
  BLAKE2B_160_HMAC = 0x0000400d;
  BLAKE2B_160_HMAC_GENERAL = 0x0000400e;
  BLAKE2B_160_KEY_DERIVE = 0x0000400f;
  BLAKE2B_160_KEY_GEN = 0x00004010;
  BLAKE2B_256 = 0x00004011;
  BLAKE2B_256_HMAC = 0x00004012;
  BLAKE2B_256_HMAC_GENERAL = 0x00004013;
  BLAKE2B_256_KEY_DERIVE = 0x00004014;
  BLAKE2B_256_KEY_GEN = 0x00004015;
  BLAKE2B_384 = 0x00004016;
  BLAKE2B_384_HMAC = 0x00004017;
  BLAKE2B_384_HMAC_GENERAL = 0x00004018;
  BLAKE2B_384_KEY_DERIVE = 0x00004019;
  BLAKE2B_384_KEY_GEN = 0x0000401a;
  BLAKE2B_512 = 0x0000401b;
  BLAKE2B_512_HMAC = 0x0000401c;
  BLAKE2B_512_HMAC_GENERAL = 0x0000401d;
  BLAKE2B_512_KEY_DERIVE = 0x0000401e;
  BLAKE2B_512_KEY_GEN = 0x0000401f;
  SALSA20 = 0x00004020;
  CHACHA20_POLY1305 = 0x00004021;
  SALSA20_POLY1305 = 0x00004022;
  X3DH_INITIALIZE = 0x00004023;
  X3DH_RESPOND = 0x00004024;
  X2RATCHET_INITIALIZE = 0x00004025;
  X2RATCHET_RESPOND = 0x00004026;
  X2RATCHET_ENCRYPT = 0x00004027;
  X2RATCHET_DECRYPT = 0x00004028;
  XEDDSA = 0x00004029;
  HKDF_DERIVE = 0x0000402a;
  HKDF_DATA = 0x0000402b;
  HKDF_KEY_GEN = 0x0000402c;
  SALSA20_KEY_GEN = 0x0000402d;

  ECDSA_SHA3_224 = 0x00001047;
  ECDSA_SHA3_256 = 0x00001048;
  ECDSA_SHA3_384 = 0x00001049;
  ECDSA_SHA3_512 = 0x0000104a;
  EC_EDWARDS_KEY_PAIR_GEN = 0x00001055;
  EC_MONTGOMERY_KEY_PAIR_GEN = 0x00001056;
  EDDSA = 0x00001057;
  SP800_108_COUNTER_KDF = 0x000003ac;
  SP800_108_FEEDBACK_KDF = 0x000003ad;
  SP800_108_DOUBLE_PIPELINE_KDF = 0x000003ae;
}

message Mechanism {
  MechanismType mechanism = 1;
  bytes parameter = 2;
}

message DigestInitRequest{
  uint64 sessionId = 1;
  Mechanism mechanism = 2;
}
message DigestInitResponse{}
message DigestRequest{}
message DigestResponse{}
message DigestUpdateRequest{}
message DigestUpdateResponse{}
message DigestKeyRequest{}
message DigestKeyResponse{}
message DigestFinalRequest{}
message DigestFinalResponse{}

message SignInitRequest{}
message SignInitResponse{}
message SignRequest{}
message SignResponse{}
message SignUpdateRequest{}
message SignUpdateResponse{}
message SignFinalRequest{}
message SignFinalResponse{}
message SignRecoverInitRequest{}
message SignRecoverInitResponse{}
message SignRecoverRequest{}
message SignRecoverResponse{}

message SignMessageInitRequest{}
message SignMessageInitResponse{}
message SignMessageRequest{}
message SignMessageResponse{}
message SignMessageBeginRequest{}
message SignMessageBeginResponse{}
message SignMessageNextRequest{}
message SignMessageNextResponse{}
message SignMessageFinalRequest{}
message SignMessageFinalResponse{}

message VerifyInitRequest{}
message VerifyInitResponse{}
message VerifyRequest{}
message VerifyResponse{}
message VerifyUpdateRequest{}
message VerifyUpdateResponse{}
message VerifyFinalRequest{}
message VerifyFinalResponse{}
message VerifyRecoverInitRequest{}
message VerifyRecoverInitResponse{}
message VerifyRecoverRequest{}
message VerifyRecoverResponse{}

message VerifyMessageInitRequest{}
message VerifyMessageInitResponse{}
message VerifyMessageRequest{}
message VerifyMessageResponse{}
message VerifyMessageBeginRequest{}
message VerifyMessageBeginResponse{}
message VerifyMessageNextRequest{}
message VerifyMessageNextResponse{}
message VerifyMessageFinalRequest{}
message VerifyMessageFinalResponse{}

message DigestEncryptUpdateRequest{}
message DigestEncryptUpdateResponse{}
message DecryptDigestUpdateRequest{}
message DecryptDigestUpdateResponse{}
message SignEncryptUpdateRequest{}
message SignEncryptUpdateResponse{}
message DecryptVerifyUpdateRequest{}
message DecryptVerifyUpdateResponse{}

message GenerateKeyRequest{}
message GenerateKeyResponse{}
message GenerateKeyPairRequest{}
message GenerateKeyPairResponse{}
message WrapKeyRequest{}
message WrapKeyResponse{}
message UnwrapKeyRequest{}
message UnwrapKeyResponse{}
message DeriveKeyRequest{}
message DeriveKeyResponse{}

message SeedRandomRequest{}
message SeedRandomResponse{}
message GenerateRandomRequest{}
message GenerateRandomResponse{}

message GetFunctionStatusRequest{}
message GetFunctionStatusResponse{}
message CancelFunctionRequest{}
message CancelFunctionResponse{}

message GetSessionInfoData {
  SessionInfo info = 1;
}

message SessionInfo {
  uint64 slotId = 1;
  SessionState state = 2;
  uint64 flags = 3;

  uint64 ulDeviceError = 4;
}

enum SessionState {
  RO_PUBLIC_SESSION = 0;
  RO_USER_FUNCTIONS = 1;
  RW_PUBLIC_SESSION = 2;
  RW_USER_FUNCTIONS = 3;
  RW_SO_FUNCTIONS = 4;
}

message SessionCancelRequest {
  uint64 sessionHandle = 1;
}

message SessionCancelResponse {

}

enum ReturnValue{
  OK = 0x00000000;
  CANCEL = 0x00000001;
  HOST_MEMORY = 0x00000002;
  SLOT_ID_INVALID = 0x00000003;

  GENERAL_ERROR = 0x00000005;
  FUNCTION_FAILED = 0x00000006;

  ARGUMENTS_BAD = 0x00000007;
  NO_EVENT = 0x00000008;
  NEED_TO_CREATE_THREADS = 0x00000009;
  CANT_LOCK = 0x0000000A;

  ATTRIBUTE_READ_ONLY = 0x00000010;
  ATTRIBUTE_SENSITIVE = 0x00000011;
  ATTRIBUTE_TYPE_INVALID = 0x00000012;
  ATTRIBUTE_VALUE_INVALID = 0x00000013;

  ACTION_PROHIBITED = 0x0000001B;

  DATA_INVALID = 0x00000020;
  DATA_LEN_RANGE = 0x00000021;
  DEVICE_ERROR = 0x00000030;
  DEVICE_MEMORY = 0x00000031;
  DEVICE_REMOVED = 0x00000032;
  ENCRYPTED_DATA_INVALID = 0x00000040;
  ENCRYPTED_DATA_LEN_RANGE = 0x00000041;
  AEAD_DECRYPT_FAILED = 0x00000042;
  FUNCTION_CANCELED = 0x00000050;
  FUNCTION_NOT_PARALLEL = 0x00000051;

  FUNCTION_NOT_SUPPORTED = 0x00000054;

  KEY_HANDLE_INVALID = 0x00000060;

  KEY_SIZE_RANGE = 0x00000062;
  KEY_TYPE_INCONSISTENT = 0x00000063;

  KEY_NOT_NEEDED = 0x00000064;
  KEY_CHANGED = 0x00000065;
  KEY_NEEDED = 0x00000066;
  KEY_INDIGESTIBLE = 0x00000067;
  KEY_FUNCTION_NOT_PERMITTED = 0x00000068;
  KEY_NOT_WRAPPABLE = 0x00000069;
  KEY_UNEXTRACTABLE = 0x0000006A;

  MECHANISM_INVALID = 0x00000070;
  MECHANISM_PARAM_INVALID = 0x00000071;

  OBJECT_HANDLE_INVALID = 0x00000082;
  OPERATION_ACTIVE = 0x00000090;
  OPERATION_NOT_INITIALIZED = 0x00000091;
  PIN_INCORRECT = 0x000000A0;
  PIN_INVALID = 0x000000A1;
  PIN_LEN_RANGE = 0x000000A2;

  PIN_EXPIRED = 0x000000A3;
  PIN_LOCKED = 0x000000A4;

  SESSION_CLOSED = 0x000000B0;
  SESSION_COUNT = 0x000000B1;
  SESSION_HANDLE_INVALID = 0x000000B3;
  SESSION_PARALLEL_NOT_SUPPORTED = 0x000000B4;
  SESSION_READ_ONLY = 0x000000B5;
  SESSION_EXISTS = 0x000000B6;

  SESSION_READ_ONLY_EXISTS = 0x000000B7;
  SESSION_READ_WRITE_SO_EXISTS = 0x000000B8;

  SIGNATURE_INVALID = 0x000000C0;
  SIGNATURE_LEN_RANGE = 0x000000C1;
  TEMPLATE_INCOMPLETE = 0x000000D0;
  TEMPLATE_INCONSISTENT = 0x000000D1;
  TOKEN_NOT_PRESENT = 0x000000E0;
  TOKEN_NOT_RECOGNIZED = 0x000000E1;
  TOKEN_WRITE_PROTECTED = 0x000000E2;
  UNWRAPPING_KEY_HANDLE_INVALID = 0x000000F0;
  UNWRAPPING_KEY_SIZE_RANGE = 0x000000F1;
  UNWRAPPING_KEY_TYPE_INCONSISTENT = 0x000000F2;
  USER_ALREADY_LOGGED_IN = 0x00000100;
  USER_NOT_LOGGED_IN = 0x00000101;
  USER_PIN_NOT_INITIALIZED = 0x00000102;
  USER_TYPE_INVALID = 0x00000103;

  USER_ANOTHER_ALREADY_LOGGED_IN = 0x00000104;
  USER_TOO_MANY_TYPES = 0x00000105;

  WRAPPED_KEY_INVALID = 0x00000110;
  WRAPPED_KEY_LEN_RANGE = 0x00000112;
  WRAPPING_KEY_HANDLE_INVALID = 0x00000113;
  WRAPPING_KEY_SIZE_RANGE = 0x00000114;
  WRAPPING_KEY_TYPE_INCONSISTENT = 0x00000115;
  RANDOM_SEED_NOT_SUPPORTED = 0x00000120;

  RANDOM_NO_RNG = 0x00000121;

  DOMAIN_PARAMS_INVALID = 0x00000130;

  CURVE_NOT_SUPPORTED = 0x00000140;

  BUFFER_TOO_SMALL = 0x00000150;
  SAVED_STATE_INVALID = 0x00000160;
  INFORMATION_SENSITIVE = 0x00000170;
  STATE_UNSAVEABLE = 0x00000180;

  CRYPTOKI_NOT_INITIALIZED = 0x00000190;
  CRYPTOKI_ALREADY_INITIALIZED = 0x00000191;
  MUTEX_BAD = 0x000001A0;
  MUTEX_NOT_LOCKED = 0x000001A1;

  NEW_PIN_MODE = 0x000001B0;
  NEXT_OTP = 0x000001B1;

  EXCEEDED_MAX_ITERATIONS = 0x000001B5;
  FIPS_SELF_TEST_FAILED = 0x000001B6;
  LIBRARY_LOAD_FAILED = 0x000001B7;
  PIN_TOO_WEAK = 0x000001B8;
  PUBLIC_KEY_INVALID = 0x000001B9;

  FUNCTION_REJECTED = 0x00000200;
  TOKEN_RESOURCE_EXCEEDED = 0x00000201;
  OPERATION_CANCEL_FAILED = 0x00000202;

  // VENDOR_DEFINED                    =0x80000000;
}